<Type Name="BestWorkerMode" FullName="Azure.Communication.JobRouter.BestWorkerMode">
  <TypeSignature Language="C#" Value="public class BestWorkerMode : Azure.Communication.JobRouter.DistributionMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BestWorkerMode extends Azure.Communication.JobRouter.DistributionMode" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.JobRouter.BestWorkerMode" />
  <TypeSignature Language="VB.NET" Value="Public Class BestWorkerMode&#xA;Inherits DistributionMode" />
  <TypeSignature Language="F#" Value="type BestWorkerMode = class&#xA;    inherit DistributionMode" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Communication.JobRouter.DistributionMode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Jobs are distributed to the worker with the strongest abilities available. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BestWorkerMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.BestWorkerMode.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of BestWorkerModePolicy with default scoring rule.
            Default scoring formula that uses the number of job labels that the worker labels match, as well as the number of label selectors the worker labels match and/or exceed
            using a logistic function (https://en.wikipedia.org/wiki/Logistic_function).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScoringRule">
      <MemberSignature Language="C#" Value="public Azure.Communication.JobRouter.RouterRule ScoringRule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Communication.JobRouter.RouterRule ScoringRule" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.JobRouter.BestWorkerMode.ScoringRule" />
      <MemberSignature Language="VB.NET" Value="Public Property ScoringRule As RouterRule" />
      <MemberSignature Language="F#" Value="member this.ScoringRule : Azure.Communication.JobRouter.RouterRule with get, set" Usage="Azure.Communication.JobRouter.BestWorkerMode.ScoringRule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.RouterRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             A rule of one of the following types:
            
             StaticRule:  A rule
             providing static rules that always return the same result, regardless of
             input.
             DirectMapRule:  A rule that return the same labels as the input
             labels.
             ExpressionRule: A rule providing inline expression
             rules.
             FunctionRule: A rule providing a binding to an HTTP Triggered Azure
             Function.
             WebhookRule: A rule providing a binding to a webserver following
             OAuth2.0 authentication protocol.
             Please note <see cref="T:Azure.Communication.JobRouter.RouterRule" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
             The available derived classes include <see cref="T:Azure.Communication.JobRouter.DirectMapRouterRule" />, <see cref="T:Azure.Communication.JobRouter.ExpressionRouterRule" />, <see cref="T:Azure.Communication.JobRouter.FunctionRouterRule" />, <see cref="T:Azure.Communication.JobRouter.StaticRouterRule" /> and <see cref="T:Azure.Communication.JobRouter.WebhookRouterRule" />.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScoringRuleOptions">
      <MemberSignature Language="C#" Value="public Azure.Communication.JobRouter.ScoringRuleOptions ScoringRuleOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Communication.JobRouter.ScoringRuleOptions ScoringRuleOptions" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.JobRouter.BestWorkerMode.ScoringRuleOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ScoringRuleOptions As ScoringRuleOptions" />
      <MemberSignature Language="F#" Value="member this.ScoringRuleOptions : Azure.Communication.JobRouter.ScoringRuleOptions with get, set" Usage="Azure.Communication.JobRouter.BestWorkerMode.ScoringRuleOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.ScoringRuleOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Encapsulates all options that can be passed as parameters for scoring rule with
            BestWorkerMode
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
