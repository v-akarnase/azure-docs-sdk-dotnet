<Type Name="JobRouterModelFactory" FullName="Azure.Communication.JobRouter.JobRouterModelFactory">
  <TypeSignature Language="C#" Value="public static class JobRouterModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit JobRouterModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.JobRouter.JobRouterModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class JobRouterModelFactory" />
  <TypeSignature Language="F#" Value="type JobRouterModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AcceptJobOfferResult">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.AcceptJobOfferResult AcceptJobOfferResult (string assignmentId = default, string jobId = default, string workerId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.AcceptJobOfferResult AcceptJobOfferResult(string assignmentId, string jobId, string workerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.AcceptJobOfferResult(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AcceptJobOfferResult (Optional assignmentId As String = Nothing, Optional jobId As String = Nothing, Optional workerId As String = Nothing) As AcceptJobOfferResult" />
      <MemberSignature Language="F#" Value="static member AcceptJobOfferResult : string * string * string -&gt; Azure.Communication.JobRouter.AcceptJobOfferResult" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.AcceptJobOfferResult (assignmentId, jobId, workerId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.AcceptJobOfferResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assignmentId" Type="System.String" />
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="workerId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assignmentId"> The assignment Id that assigns a worker that has accepted an offer to a job. </param>
        <param name="jobId"> The Id of the job assigned. </param>
        <param name="workerId"> The Id of the worker that has been assigned this job. </param>
        <summary> Initializes a new instance of AcceptJobOfferResult. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.AcceptJobOfferResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assignmentId" />, <paramref name="jobId" /> or <paramref name="workerId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CancelExceptionAction">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.CancelExceptionAction CancelExceptionAction (string id = default, string note = default, string dispositionCode = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.CancelExceptionAction CancelExceptionAction(string id, string note, string dispositionCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.CancelExceptionAction(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CancelExceptionAction (Optional id As String = Nothing, Optional note As String = Nothing, Optional dispositionCode As String = Nothing) As CancelExceptionAction" />
      <MemberSignature Language="F#" Value="static member CancelExceptionAction : string * string * string -&gt; Azure.Communication.JobRouter.CancelExceptionAction" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.CancelExceptionAction (id, note, dispositionCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.CancelExceptionAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="note" Type="System.String" />
        <Parameter Name="dispositionCode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> Unique Id of the exception action. </param>
        <param name="note">
            (Optional) A note that will be appended to the jobs' Notes collection with the
            current timestamp.
            </param>
        <param name="dispositionCode">
            (Optional) Indicates the outcome of the job, populate this field with your own
            custom values.
            </param>
        <summary> Initializes a new instance of CancelExceptionAction. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.CancelExceptionAction" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalQueueSelectorAttachment">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.ConditionalQueueSelectorAttachment ConditionalQueueSelectorAttachment (Azure.Communication.JobRouter.RouterRule condition = default, System.Collections.Generic.IEnumerable&lt;Azure.Communication.JobRouter.RouterQueueSelector&gt; queueSelectors = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.ConditionalQueueSelectorAttachment ConditionalQueueSelectorAttachment(class Azure.Communication.JobRouter.RouterRule condition, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.JobRouter.RouterQueueSelector&gt; queueSelectors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.ConditionalQueueSelectorAttachment(Azure.Communication.JobRouter.RouterRule,System.Collections.Generic.IEnumerable{Azure.Communication.JobRouter.RouterQueueSelector})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalQueueSelectorAttachment (Optional condition As RouterRule = Nothing, Optional queueSelectors As IEnumerable(Of RouterQueueSelector) = Nothing) As ConditionalQueueSelectorAttachment" />
      <MemberSignature Language="F#" Value="static member ConditionalQueueSelectorAttachment : Azure.Communication.JobRouter.RouterRule * seq&lt;Azure.Communication.JobRouter.RouterQueueSelector&gt; -&gt; Azure.Communication.JobRouter.ConditionalQueueSelectorAttachment" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.ConditionalQueueSelectorAttachment (condition, queueSelectors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.ConditionalQueueSelectorAttachment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="Azure.Communication.JobRouter.RouterRule" />
        <Parameter Name="queueSelectors" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.JobRouter.RouterQueueSelector&gt;" />
      </Parameters>
      <Docs>
        <param name="condition">
             A rule of one of the following types:
            
             StaticRule:  A rule
             providing static rules that always return the same result, regardless of
             input.
             DirectMapRule:  A rule that return the same labels as the input
             labels.
             ExpressionRule: A rule providing inline expression
             rules.
             FunctionRule: A rule providing a binding to an HTTP Triggered Azure
             Function.
             WebhookRule: A rule providing a binding to a webserver following
             OAuth2.0 authentication protocol.
             </param>
        <param name="queueSelectors"> The queue selectors to attach. </param>
        <summary> Initializes a new instance of ConditionalQueueSelectorAttachment. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.ConditionalQueueSelectorAttachment" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionalWorkerSelectorAttachment">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.ConditionalWorkerSelectorAttachment ConditionalWorkerSelectorAttachment (Azure.Communication.JobRouter.RouterRule condition = default, System.Collections.Generic.IEnumerable&lt;Azure.Communication.JobRouter.RouterWorkerSelector&gt; workerSelectors = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.ConditionalWorkerSelectorAttachment ConditionalWorkerSelectorAttachment(class Azure.Communication.JobRouter.RouterRule condition, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.JobRouter.RouterWorkerSelector&gt; workerSelectors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.ConditionalWorkerSelectorAttachment(Azure.Communication.JobRouter.RouterRule,System.Collections.Generic.IEnumerable{Azure.Communication.JobRouter.RouterWorkerSelector})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalWorkerSelectorAttachment (Optional condition As RouterRule = Nothing, Optional workerSelectors As IEnumerable(Of RouterWorkerSelector) = Nothing) As ConditionalWorkerSelectorAttachment" />
      <MemberSignature Language="F#" Value="static member ConditionalWorkerSelectorAttachment : Azure.Communication.JobRouter.RouterRule * seq&lt;Azure.Communication.JobRouter.RouterWorkerSelector&gt; -&gt; Azure.Communication.JobRouter.ConditionalWorkerSelectorAttachment" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.ConditionalWorkerSelectorAttachment (condition, workerSelectors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.ConditionalWorkerSelectorAttachment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="Azure.Communication.JobRouter.RouterRule" />
        <Parameter Name="workerSelectors" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.JobRouter.RouterWorkerSelector&gt;" />
      </Parameters>
      <Docs>
        <param name="condition">
             A rule of one of the following types:
            
             StaticRule:  A rule
             providing static rules that always return the same result, regardless of
             input.
             DirectMapRule:  A rule that return the same labels as the input
             labels.
             ExpressionRule: A rule providing inline expression
             rules.
             FunctionRule: A rule providing a binding to an HTTP Triggered Azure
             Function.
             WebhookRule: A rule providing a binding to a webserver following
             OAuth2.0 authentication protocol.
             </param>
        <param name="workerSelectors"> The worker selectors to attach. </param>
        <summary> Initializes a new instance of ConditionalWorkerSelectorAttachment. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.ConditionalWorkerSelectorAttachment" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionAction">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.ExceptionAction ExceptionAction (string id = default, string kind = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.ExceptionAction ExceptionAction(string id, string kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.ExceptionAction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExceptionAction (Optional id As String = Nothing, Optional kind As String = Nothing) As ExceptionAction" />
      <MemberSignature Language="F#" Value="static member ExceptionAction : string * string -&gt; Azure.Communication.JobRouter.ExceptionAction" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.ExceptionAction (id, kind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.ExceptionAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="kind" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> Unique Id of the exception action. </param>
        <param name="kind"> The type discriminator describing a sub-type of ExceptionAction. </param>
        <summary> Initializes a new instance of ExceptionAction. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.ExceptionAction" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionRule">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.ExceptionRule ExceptionRule (string id = default, Azure.Communication.JobRouter.ExceptionTrigger trigger = default, System.Collections.Generic.IEnumerable&lt;Azure.Communication.JobRouter.ExceptionAction&gt; actions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.ExceptionRule ExceptionRule(string id, class Azure.Communication.JobRouter.ExceptionTrigger trigger, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.JobRouter.ExceptionAction&gt; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.ExceptionRule(System.String,Azure.Communication.JobRouter.ExceptionTrigger,System.Collections.Generic.IEnumerable{Azure.Communication.JobRouter.ExceptionAction})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExceptionRule (Optional id As String = Nothing, Optional trigger As ExceptionTrigger = Nothing, Optional actions As IEnumerable(Of ExceptionAction) = Nothing) As ExceptionRule" />
      <MemberSignature Language="F#" Value="static member ExceptionRule : string * Azure.Communication.JobRouter.ExceptionTrigger * seq&lt;Azure.Communication.JobRouter.ExceptionAction&gt; -&gt; Azure.Communication.JobRouter.ExceptionRule" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.ExceptionRule (id, trigger, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.ExceptionRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="trigger" Type="Azure.Communication.JobRouter.ExceptionTrigger" />
        <Parameter Name="actions" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.JobRouter.ExceptionAction&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> Id of the exception rule. </param>
        <param name="trigger"> The trigger for this exception rule. </param>
        <param name="actions"> A collection of actions to perform once the exception is triggered. </param>
        <summary> Initializes a new instance of ExceptionRule. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.ExceptionRule" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionRouterRule">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.ExpressionRouterRule ExpressionRouterRule (string language = default, string expression = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.ExpressionRouterRule ExpressionRouterRule(string language, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.ExpressionRouterRule(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExpressionRouterRule (Optional language As String = Nothing, Optional expression As String = Nothing) As ExpressionRouterRule" />
      <MemberSignature Language="F#" Value="static member ExpressionRouterRule : string * string -&gt; Azure.Communication.JobRouter.ExpressionRouterRule" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.ExpressionRouterRule (language, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.ExpressionRouterRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language"> The expression language to compile to and execute. </param>
        <param name="expression">
            The string containing the expression to evaluate. Should contain return
            statement with calculated values.
            </param>
        <summary> Initializes a new instance of ExpressionRouterRule. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.ExpressionRouterRule" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FunctionRouterRule">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.FunctionRouterRule FunctionRouterRule (Uri functionUri = default, Azure.Communication.JobRouter.FunctionRouterRuleCredential credential = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.FunctionRouterRule FunctionRouterRule(class System.Uri functionUri, class Azure.Communication.JobRouter.FunctionRouterRuleCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.FunctionRouterRule(System.Uri,Azure.Communication.JobRouter.FunctionRouterRuleCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FunctionRouterRule (Optional functionUri As Uri = Nothing, Optional credential As FunctionRouterRuleCredential = Nothing) As FunctionRouterRule" />
      <MemberSignature Language="F#" Value="static member FunctionRouterRule : Uri * Azure.Communication.JobRouter.FunctionRouterRuleCredential -&gt; Azure.Communication.JobRouter.FunctionRouterRule" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.FunctionRouterRule (functionUri, credential)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.FunctionRouterRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Communication.JobRouter.FunctionRouterRuleCredential" />
      </Parameters>
      <Docs>
        <param name="functionUri"> URL for Azure Function. </param>
        <param name="credential"> Credentials used to access Azure function rule. </param>
        <summary> Initializes a new instance of FunctionRouterRule. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.FunctionRouterRule" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManualReclassifyExceptionAction">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.ManualReclassifyExceptionAction ManualReclassifyExceptionAction (string id = default, string queueId = default, int? priority = default, System.Collections.Generic.IEnumerable&lt;Azure.Communication.JobRouter.RouterWorkerSelector&gt; workerSelectors = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.ManualReclassifyExceptionAction ManualReclassifyExceptionAction(string id, string queueId, valuetype System.Nullable`1&lt;int32&gt; priority, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.JobRouter.RouterWorkerSelector&gt; workerSelectors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.ManualReclassifyExceptionAction(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.Communication.JobRouter.RouterWorkerSelector})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ManualReclassifyExceptionAction (Optional id As String = Nothing, Optional queueId As String = Nothing, Optional priority As Nullable(Of Integer) = Nothing, Optional workerSelectors As IEnumerable(Of RouterWorkerSelector) = Nothing) As ManualReclassifyExceptionAction" />
      <MemberSignature Language="F#" Value="static member ManualReclassifyExceptionAction : string * string * Nullable&lt;int&gt; * seq&lt;Azure.Communication.JobRouter.RouterWorkerSelector&gt; -&gt; Azure.Communication.JobRouter.ManualReclassifyExceptionAction" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.ManualReclassifyExceptionAction (id, queueId, priority, workerSelectors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.ManualReclassifyExceptionAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="queueId" Type="System.String" />
        <Parameter Name="priority" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="workerSelectors" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.JobRouter.RouterWorkerSelector&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> Unique Id of the exception action. </param>
        <param name="queueId"> Updated QueueId. </param>
        <param name="priority"> Updated Priority. </param>
        <param name="workerSelectors"> Updated WorkerSelectors. </param>
        <summary> Initializes a new instance of ManualReclassifyExceptionAction. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.ManualReclassifyExceptionAction" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PassThroughQueueSelectorAttachment">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.PassThroughQueueSelectorAttachment PassThroughQueueSelectorAttachment (string key = default, Azure.Communication.JobRouter.LabelOperator labelOperator = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.PassThroughQueueSelectorAttachment PassThroughQueueSelectorAttachment(string key, valuetype Azure.Communication.JobRouter.LabelOperator labelOperator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.PassThroughQueueSelectorAttachment(System.String,Azure.Communication.JobRouter.LabelOperator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PassThroughQueueSelectorAttachment (Optional key As String = Nothing, Optional labelOperator As LabelOperator = Nothing) As PassThroughQueueSelectorAttachment" />
      <MemberSignature Language="F#" Value="static member PassThroughQueueSelectorAttachment : string * Azure.Communication.JobRouter.LabelOperator -&gt; Azure.Communication.JobRouter.PassThroughQueueSelectorAttachment" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.PassThroughQueueSelectorAttachment (key, labelOperator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.PassThroughQueueSelectorAttachment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="labelOperator" Type="Azure.Communication.JobRouter.LabelOperator" />
      </Parameters>
      <Docs>
        <param name="key"> The label key to query against. </param>
        <param name="labelOperator"> Describes how the value of the label is compared to the value pass through. </param>
        <summary> Initializes a new instance of PassThroughQueueSelectorAttachment. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.PassThroughQueueSelectorAttachment" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueLengthExceptionTrigger">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.QueueLengthExceptionTrigger QueueLengthExceptionTrigger (int threshold = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.QueueLengthExceptionTrigger QueueLengthExceptionTrigger(int32 threshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.QueueLengthExceptionTrigger(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueueLengthExceptionTrigger (Optional threshold As Integer = 0) As QueueLengthExceptionTrigger" />
      <MemberSignature Language="F#" Value="static member QueueLengthExceptionTrigger : int -&gt; Azure.Communication.JobRouter.QueueLengthExceptionTrigger" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.QueueLengthExceptionTrigger threshold" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.QueueLengthExceptionTrigger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threshold" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="threshold"> Threshold of number of jobs ahead in the queue to for this trigger to fire. </param>
        <summary> Initializes a new instance of QueueLengthExceptionTrigger. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.QueueLengthExceptionTrigger" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueWeightedAllocation">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.QueueWeightedAllocation QueueWeightedAllocation (double weight = 0, System.Collections.Generic.IEnumerable&lt;Azure.Communication.JobRouter.RouterQueueSelector&gt; queueSelectors = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.QueueWeightedAllocation QueueWeightedAllocation(float64 weight, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.JobRouter.RouterQueueSelector&gt; queueSelectors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.QueueWeightedAllocation(System.Double,System.Collections.Generic.IEnumerable{Azure.Communication.JobRouter.RouterQueueSelector})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueueWeightedAllocation (Optional weight As Double = 0, Optional queueSelectors As IEnumerable(Of RouterQueueSelector) = Nothing) As QueueWeightedAllocation" />
      <MemberSignature Language="F#" Value="static member QueueWeightedAllocation : double * seq&lt;Azure.Communication.JobRouter.RouterQueueSelector&gt; -&gt; Azure.Communication.JobRouter.QueueWeightedAllocation" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.QueueWeightedAllocation (weight, queueSelectors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.QueueWeightedAllocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="weight" Type="System.Double" />
        <Parameter Name="queueSelectors" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.JobRouter.RouterQueueSelector&gt;" />
      </Parameters>
      <Docs>
        <param name="weight"> The percentage of this weight, expressed as a fraction of 1. </param>
        <param name="queueSelectors">
            A collection of queue selectors that will be applied if this allocation is
            selected.
            </param>
        <summary> Initializes a new instance of QueueWeightedAllocation. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.QueueWeightedAllocation" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RouterChannel">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.RouterChannel RouterChannel (string channelId = default, int capacityCostPerJob = 0, int? maxNumberOfJobs = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.RouterChannel RouterChannel(string channelId, int32 capacityCostPerJob, valuetype System.Nullable`1&lt;int32&gt; maxNumberOfJobs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.RouterChannel(System.String,System.Int32,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RouterChannel (Optional channelId As String = Nothing, Optional capacityCostPerJob As Integer = 0, Optional maxNumberOfJobs As Nullable(Of Integer) = Nothing) As RouterChannel" />
      <MemberSignature Language="F#" Value="static member RouterChannel : string * int * Nullable&lt;int&gt; -&gt; Azure.Communication.JobRouter.RouterChannel" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.RouterChannel (channelId, capacityCostPerJob, maxNumberOfJobs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.RouterChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channelId" Type="System.String" />
        <Parameter Name="capacityCostPerJob" Type="System.Int32" />
        <Parameter Name="maxNumberOfJobs" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="channelId"> Id of the channel. </param>
        <param name="capacityCostPerJob">
            The amount of capacity that an instance of a job of this channel will consume
            of the total worker capacity.
            </param>
        <param name="maxNumberOfJobs"> The maximum number of jobs that can be supported concurrently for this channel. </param>
        <summary> Initializes a new instance of RouterChannel. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.RouterChannel" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RouterJobAssignment">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.RouterJobAssignment RouterJobAssignment (string assignmentId = default, string workerId = default, DateTimeOffset assignedAt = default, DateTimeOffset? completedAt = default, DateTimeOffset? closedAt = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.RouterJobAssignment RouterJobAssignment(string assignmentId, string workerId, valuetype System.DateTimeOffset assignedAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; completedAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; closedAt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.RouterJobAssignment(System.String,System.String,System.DateTimeOffset,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RouterJobAssignment (Optional assignmentId As String = Nothing, Optional workerId As String = Nothing, Optional assignedAt As DateTimeOffset = Nothing, Optional completedAt As Nullable(Of DateTimeOffset) = Nothing, Optional closedAt As Nullable(Of DateTimeOffset) = Nothing) As RouterJobAssignment" />
      <MemberSignature Language="F#" Value="static member RouterJobAssignment : string * string * DateTimeOffset * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.Communication.JobRouter.RouterJobAssignment" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.RouterJobAssignment (assignmentId, workerId, assignedAt, completedAt, closedAt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.RouterJobAssignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assignmentId" Type="System.String" />
        <Parameter Name="workerId" Type="System.String" />
        <Parameter Name="assignedAt" Type="System.DateTimeOffset" />
        <Parameter Name="completedAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="closedAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="assignmentId"> The Id of the job assignment. </param>
        <param name="workerId"> The Id of the Worker assigned to the job. </param>
        <param name="assignedAt"> The assignment time of the job in UTC. </param>
        <param name="completedAt"> The time the job was marked as completed after being assigned in UTC. </param>
        <param name="closedAt"> The time the job was marked as closed after being completed in UTC. </param>
        <summary> Initializes a new instance of RouterJobAssignment. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.RouterJobAssignment" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RouterJobNote">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.RouterJobNote RouterJobNote (string message = default, DateTimeOffset? addedAt = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.RouterJobNote RouterJobNote(string message, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; addedAt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.RouterJobNote(System.String,System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RouterJobNote (Optional message As String = Nothing, Optional addedAt As Nullable(Of DateTimeOffset) = Nothing) As RouterJobNote" />
      <MemberSignature Language="F#" Value="static member RouterJobNote : string * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.Communication.JobRouter.RouterJobNote" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.RouterJobNote (message, addedAt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.RouterJobNote</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="addedAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="message"> The message contained in the note. </param>
        <param name="addedAt"> The time at which the note was added in UTC. If not provided, will default to the current time. </param>
        <summary> Initializes a new instance of RouterJobNote. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.RouterJobNote" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RouterJobOffer">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.RouterJobOffer RouterJobOffer (string offerId = default, string jobId = default, int capacityCost = 0, DateTimeOffset? offeredAt = default, DateTimeOffset? expiresAt = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.RouterJobOffer RouterJobOffer(string offerId, string jobId, int32 capacityCost, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; offeredAt, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; expiresAt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.RouterJobOffer(System.String,System.String,System.Int32,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RouterJobOffer (Optional offerId As String = Nothing, Optional jobId As String = Nothing, Optional capacityCost As Integer = 0, Optional offeredAt As Nullable(Of DateTimeOffset) = Nothing, Optional expiresAt As Nullable(Of DateTimeOffset) = Nothing) As RouterJobOffer" />
      <MemberSignature Language="F#" Value="static member RouterJobOffer : string * string * int * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.Communication.JobRouter.RouterJobOffer" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.RouterJobOffer (offerId, jobId, capacityCost, offeredAt, expiresAt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.RouterJobOffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offerId" Type="System.String" />
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="capacityCost" Type="System.Int32" />
        <Parameter Name="offeredAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="expiresAt" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="offerId"> The Id of the offer. </param>
        <param name="jobId"> The Id of the job. </param>
        <param name="capacityCost"> The capacity cost consumed by the job offer. </param>
        <param name="offeredAt"> The time the offer was created in UTC. </param>
        <param name="expiresAt"> The time that the offer will expire in UTC. </param>
        <summary> Initializes a new instance of RouterJobOffer. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.RouterJobOffer" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RouterWorkerAssignment">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.RouterWorkerAssignment RouterWorkerAssignment (string assignmentId = default, string jobId = default, int capacityCost = 0, DateTimeOffset assignedAt = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.RouterWorkerAssignment RouterWorkerAssignment(string assignmentId, string jobId, int32 capacityCost, valuetype System.DateTimeOffset assignedAt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.RouterWorkerAssignment(System.String,System.String,System.Int32,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RouterWorkerAssignment (Optional assignmentId As String = Nothing, Optional jobId As String = Nothing, Optional capacityCost As Integer = 0, Optional assignedAt As DateTimeOffset = Nothing) As RouterWorkerAssignment" />
      <MemberSignature Language="F#" Value="static member RouterWorkerAssignment : string * string * int * DateTimeOffset -&gt; Azure.Communication.JobRouter.RouterWorkerAssignment" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.RouterWorkerAssignment (assignmentId, jobId, capacityCost, assignedAt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.RouterWorkerAssignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assignmentId" Type="System.String" />
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="capacityCost" Type="System.Int32" />
        <Parameter Name="assignedAt" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="assignmentId"> The Id of the assignment. </param>
        <param name="jobId"> The Id of the Job assigned. </param>
        <param name="capacityCost"> The amount of capacity this assignment has consumed on the worker. </param>
        <param name="assignedAt"> The assignment time of the job in UTC. </param>
        <summary> Initializes a new instance of RouterWorkerAssignment. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.RouterWorkerAssignment" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assignmentId" /> or <paramref name="jobId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RuleEngineQueueSelectorAttachment">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.RuleEngineQueueSelectorAttachment RuleEngineQueueSelectorAttachment (Azure.Communication.JobRouter.RouterRule rule = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.RuleEngineQueueSelectorAttachment RuleEngineQueueSelectorAttachment(class Azure.Communication.JobRouter.RouterRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.RuleEngineQueueSelectorAttachment(Azure.Communication.JobRouter.RouterRule)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RuleEngineQueueSelectorAttachment (Optional rule As RouterRule = Nothing) As RuleEngineQueueSelectorAttachment" />
      <MemberSignature Language="F#" Value="static member RuleEngineQueueSelectorAttachment : Azure.Communication.JobRouter.RouterRule -&gt; Azure.Communication.JobRouter.RuleEngineQueueSelectorAttachment" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.RuleEngineQueueSelectorAttachment rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.RuleEngineQueueSelectorAttachment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="Azure.Communication.JobRouter.RouterRule" />
      </Parameters>
      <Docs>
        <param name="rule">
             A rule of one of the following types:
            
             StaticRule:  A rule
             providing static rules that always return the same result, regardless of
             input.
             DirectMapRule:  A rule that return the same labels as the input
             labels.
             ExpressionRule: A rule providing inline expression
             rules.
             FunctionRule: A rule providing a binding to an HTTP Triggered Azure
             Function.
             WebhookRule: A rule providing a binding to a webserver following
             OAuth2.0 authentication protocol.
             </param>
        <summary> Initializes a new instance of RuleEngineQueueSelectorAttachment. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.RuleEngineQueueSelectorAttachment" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuleEngineWorkerSelectorAttachment">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.RuleEngineWorkerSelectorAttachment RuleEngineWorkerSelectorAttachment (Azure.Communication.JobRouter.RouterRule rule = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.RuleEngineWorkerSelectorAttachment RuleEngineWorkerSelectorAttachment(class Azure.Communication.JobRouter.RouterRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.RuleEngineWorkerSelectorAttachment(Azure.Communication.JobRouter.RouterRule)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RuleEngineWorkerSelectorAttachment (Optional rule As RouterRule = Nothing) As RuleEngineWorkerSelectorAttachment" />
      <MemberSignature Language="F#" Value="static member RuleEngineWorkerSelectorAttachment : Azure.Communication.JobRouter.RouterRule -&gt; Azure.Communication.JobRouter.RuleEngineWorkerSelectorAttachment" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.RuleEngineWorkerSelectorAttachment rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.RuleEngineWorkerSelectorAttachment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="Azure.Communication.JobRouter.RouterRule" />
      </Parameters>
      <Docs>
        <param name="rule">
             A rule of one of the following types:
            
             StaticRule:  A rule
             providing static rules that always return the same result, regardless of
             input.
             DirectMapRule:  A rule that return the same labels as the input
             labels.
             ExpressionRule: A rule providing inline expression
             rules.
             FunctionRule: A rule providing a binding to an HTTP Triggered Azure
             Function.
             WebhookRule: A rule providing a binding to a webserver following
             OAuth2.0 authentication protocol.
             </param>
        <summary> Initializes a new instance of RuleEngineWorkerSelectorAttachment. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.RuleEngineWorkerSelectorAttachment" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAndSuspendMode">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.ScheduleAndSuspendMode ScheduleAndSuspendMode (DateTimeOffset scheduleAt = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.ScheduleAndSuspendMode ScheduleAndSuspendMode(valuetype System.DateTimeOffset scheduleAt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.ScheduleAndSuspendMode(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScheduleAndSuspendMode (Optional scheduleAt As DateTimeOffset = Nothing) As ScheduleAndSuspendMode" />
      <MemberSignature Language="F#" Value="static member ScheduleAndSuspendMode : DateTimeOffset -&gt; Azure.Communication.JobRouter.ScheduleAndSuspendMode" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.ScheduleAndSuspendMode scheduleAt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.ScheduleAndSuspendMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scheduleAt" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="scheduleAt"> Scheduled time. </param>
        <summary> Initializes a new instance of ScheduleAndSuspendMode. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.ScheduleAndSuspendMode" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticQueueSelectorAttachment">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.StaticQueueSelectorAttachment StaticQueueSelectorAttachment (Azure.Communication.JobRouter.RouterQueueSelector queueSelector = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.StaticQueueSelectorAttachment StaticQueueSelectorAttachment(class Azure.Communication.JobRouter.RouterQueueSelector queueSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.StaticQueueSelectorAttachment(Azure.Communication.JobRouter.RouterQueueSelector)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StaticQueueSelectorAttachment (Optional queueSelector As RouterQueueSelector = Nothing) As StaticQueueSelectorAttachment" />
      <MemberSignature Language="F#" Value="static member StaticQueueSelectorAttachment : Azure.Communication.JobRouter.RouterQueueSelector -&gt; Azure.Communication.JobRouter.StaticQueueSelectorAttachment" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.StaticQueueSelectorAttachment queueSelector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.StaticQueueSelectorAttachment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueSelector" Type="Azure.Communication.JobRouter.RouterQueueSelector" />
      </Parameters>
      <Docs>
        <param name="queueSelector">
            Describes a condition that must be met against a set of labels for queue
            selection
            </param>
        <summary> Initializes a new instance of StaticQueueSelectorAttachment. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.StaticQueueSelectorAttachment" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticWorkerSelectorAttachment">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.StaticWorkerSelectorAttachment StaticWorkerSelectorAttachment (Azure.Communication.JobRouter.RouterWorkerSelector workerSelector = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.StaticWorkerSelectorAttachment StaticWorkerSelectorAttachment(class Azure.Communication.JobRouter.RouterWorkerSelector workerSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.StaticWorkerSelectorAttachment(Azure.Communication.JobRouter.RouterWorkerSelector)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StaticWorkerSelectorAttachment (Optional workerSelector As RouterWorkerSelector = Nothing) As StaticWorkerSelectorAttachment" />
      <MemberSignature Language="F#" Value="static member StaticWorkerSelectorAttachment : Azure.Communication.JobRouter.RouterWorkerSelector -&gt; Azure.Communication.JobRouter.StaticWorkerSelectorAttachment" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.StaticWorkerSelectorAttachment workerSelector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.StaticWorkerSelectorAttachment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workerSelector" Type="Azure.Communication.JobRouter.RouterWorkerSelector" />
      </Parameters>
      <Docs>
        <param name="workerSelector">
            Describes a condition that must be met against a set of labels for worker
            selection
            </param>
        <summary> Initializes a new instance of StaticWorkerSelectorAttachment. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.StaticWorkerSelectorAttachment" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnassignJobResult">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.UnassignJobResult UnassignJobResult (string jobId = default, int unassignmentCount = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.UnassignJobResult UnassignJobResult(string jobId, int32 unassignmentCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.UnassignJobResult(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnassignJobResult (Optional jobId As String = Nothing, Optional unassignmentCount As Integer = 0) As UnassignJobResult" />
      <MemberSignature Language="F#" Value="static member UnassignJobResult : string * int -&gt; Azure.Communication.JobRouter.UnassignJobResult" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.UnassignJobResult (jobId, unassignmentCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.UnassignJobResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="unassignmentCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="jobId"> The Id of the job unassigned. </param>
        <param name="unassignmentCount"> The number of times a job is unassigned. At a maximum 3. </param>
        <summary> Initializes a new instance of UnassignJobResult. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.UnassignJobResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="WebhookRouterRule">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.WebhookRouterRule WebhookRouterRule (Uri authorizationServerUri = default, Azure.Communication.JobRouter.OAuth2WebhookClientCredential clientCredential = default, Uri webhookUri = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.WebhookRouterRule WebhookRouterRule(class System.Uri authorizationServerUri, class Azure.Communication.JobRouter.OAuth2WebhookClientCredential clientCredential, class System.Uri webhookUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.WebhookRouterRule(System.Uri,Azure.Communication.JobRouter.OAuth2WebhookClientCredential,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WebhookRouterRule (Optional authorizationServerUri As Uri = Nothing, Optional clientCredential As OAuth2WebhookClientCredential = Nothing, Optional webhookUri As Uri = Nothing) As WebhookRouterRule" />
      <MemberSignature Language="F#" Value="static member WebhookRouterRule : Uri * Azure.Communication.JobRouter.OAuth2WebhookClientCredential * Uri -&gt; Azure.Communication.JobRouter.WebhookRouterRule" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.WebhookRouterRule (authorizationServerUri, clientCredential, webhookUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.WebhookRouterRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authorizationServerUri" Type="System.Uri" />
        <Parameter Name="clientCredential" Type="Azure.Communication.JobRouter.OAuth2WebhookClientCredential" />
        <Parameter Name="webhookUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="authorizationServerUri"> Uri for Authorization Server. </param>
        <param name="clientCredential">
            OAuth2.0 Credentials used to Contoso's Authorization server.
            Reference:
            https://www.oauth.com/oauth2-servers/access-tokens/client-credentials/
            </param>
        <param name="webhookUri"> Uri for Contoso's Web Server. </param>
        <summary> Initializes a new instance of WebhookRouterRule. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.WebhookRouterRule" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeightedAllocationQueueSelectorAttachment">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.WeightedAllocationQueueSelectorAttachment WeightedAllocationQueueSelectorAttachment (System.Collections.Generic.IEnumerable&lt;Azure.Communication.JobRouter.QueueWeightedAllocation&gt; allocations = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.WeightedAllocationQueueSelectorAttachment WeightedAllocationQueueSelectorAttachment(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.JobRouter.QueueWeightedAllocation&gt; allocations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.WeightedAllocationQueueSelectorAttachment(System.Collections.Generic.IEnumerable{Azure.Communication.JobRouter.QueueWeightedAllocation})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WeightedAllocationQueueSelectorAttachment (Optional allocations As IEnumerable(Of QueueWeightedAllocation) = Nothing) As WeightedAllocationQueueSelectorAttachment" />
      <MemberSignature Language="F#" Value="static member WeightedAllocationQueueSelectorAttachment : seq&lt;Azure.Communication.JobRouter.QueueWeightedAllocation&gt; -&gt; Azure.Communication.JobRouter.WeightedAllocationQueueSelectorAttachment" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.WeightedAllocationQueueSelectorAttachment allocations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.WeightedAllocationQueueSelectorAttachment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allocations" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.JobRouter.QueueWeightedAllocation&gt;" />
      </Parameters>
      <Docs>
        <param name="allocations"> A collection of percentage based weighted allocations. </param>
        <summary> Initializes a new instance of WeightedAllocationQueueSelectorAttachment. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.WeightedAllocationQueueSelectorAttachment" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeightedAllocationWorkerSelectorAttachment">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.WeightedAllocationWorkerSelectorAttachment WeightedAllocationWorkerSelectorAttachment (System.Collections.Generic.IEnumerable&lt;Azure.Communication.JobRouter.WorkerWeightedAllocation&gt; allocations = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.WeightedAllocationWorkerSelectorAttachment WeightedAllocationWorkerSelectorAttachment(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.JobRouter.WorkerWeightedAllocation&gt; allocations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.WeightedAllocationWorkerSelectorAttachment(System.Collections.Generic.IEnumerable{Azure.Communication.JobRouter.WorkerWeightedAllocation})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WeightedAllocationWorkerSelectorAttachment (Optional allocations As IEnumerable(Of WorkerWeightedAllocation) = Nothing) As WeightedAllocationWorkerSelectorAttachment" />
      <MemberSignature Language="F#" Value="static member WeightedAllocationWorkerSelectorAttachment : seq&lt;Azure.Communication.JobRouter.WorkerWeightedAllocation&gt; -&gt; Azure.Communication.JobRouter.WeightedAllocationWorkerSelectorAttachment" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.WeightedAllocationWorkerSelectorAttachment allocations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.WeightedAllocationWorkerSelectorAttachment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allocations" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.JobRouter.WorkerWeightedAllocation&gt;" />
      </Parameters>
      <Docs>
        <param name="allocations"> A collection of percentage based weighted allocations. </param>
        <summary> Initializes a new instance of WeightedAllocationWorkerSelectorAttachment. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.WeightedAllocationWorkerSelectorAttachment" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkerWeightedAllocation">
      <MemberSignature Language="C#" Value="public static Azure.Communication.JobRouter.WorkerWeightedAllocation WorkerWeightedAllocation (double weight = 0, System.Collections.Generic.IEnumerable&lt;Azure.Communication.JobRouter.RouterWorkerSelector&gt; workerSelectors = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.JobRouter.WorkerWeightedAllocation WorkerWeightedAllocation(float64 weight, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.JobRouter.RouterWorkerSelector&gt; workerSelectors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterModelFactory.WorkerWeightedAllocation(System.Double,System.Collections.Generic.IEnumerable{Azure.Communication.JobRouter.RouterWorkerSelector})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WorkerWeightedAllocation (Optional weight As Double = 0, Optional workerSelectors As IEnumerable(Of RouterWorkerSelector) = Nothing) As WorkerWeightedAllocation" />
      <MemberSignature Language="F#" Value="static member WorkerWeightedAllocation : double * seq&lt;Azure.Communication.JobRouter.RouterWorkerSelector&gt; -&gt; Azure.Communication.JobRouter.WorkerWeightedAllocation" Usage="Azure.Communication.JobRouter.JobRouterModelFactory.WorkerWeightedAllocation (weight, workerSelectors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.WorkerWeightedAllocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="weight" Type="System.Double" />
        <Parameter Name="workerSelectors" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.JobRouter.RouterWorkerSelector&gt;" />
      </Parameters>
      <Docs>
        <param name="weight"> The percentage of this weight, expressed as a fraction of 1. </param>
        <param name="workerSelectors">
            A collection of worker selectors that will be applied if this allocation is
            selected.
            </param>
        <summary> Initializes a new instance of WorkerWeightedAllocation. </summary>
        <returns> A new <see cref="T:Azure.Communication.JobRouter.WorkerWeightedAllocation" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
