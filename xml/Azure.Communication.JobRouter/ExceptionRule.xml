<Type Name="ExceptionRule" FullName="Azure.Communication.JobRouter.ExceptionRule">
  <TypeSignature Language="C#" Value="public class ExceptionRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExceptionRule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.JobRouter.ExceptionRule" />
  <TypeSignature Language="VB.NET" Value="Public Class ExceptionRule" />
  <TypeSignature Language="F#" Value="type ExceptionRule = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A rule that defines actions to execute upon a specific trigger. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExceptionRule (string id, Azure.Communication.JobRouter.ExceptionTrigger trigger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id, class Azure.Communication.JobRouter.ExceptionTrigger trigger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.ExceptionRule.#ctor(System.String,Azure.Communication.JobRouter.ExceptionTrigger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As String, trigger As ExceptionTrigger)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.JobRouter.ExceptionRule : string * Azure.Communication.JobRouter.ExceptionTrigger -&gt; Azure.Communication.JobRouter.ExceptionRule" Usage="new Azure.Communication.JobRouter.ExceptionRule (id, trigger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="trigger" Type="Azure.Communication.JobRouter.ExceptionTrigger" />
      </Parameters>
      <Docs>
        <param name="id"> Id of the exception rule. </param>
        <param name="trigger"> The trigger for this exception rule. </param>
        <summary> Initializes a new instance of ExceptionRule. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="trigger" />. </exception>
      </Docs>
    </Member>
    <Member MemberName="Actions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.Communication.JobRouter.ExceptionAction&gt; Actions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.Communication.JobRouter.ExceptionAction&gt; Actions" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.JobRouter.ExceptionRule.Actions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Actions As IList(Of ExceptionAction)" />
      <MemberSignature Language="F#" Value="member this.Actions : System.Collections.Generic.IList&lt;Azure.Communication.JobRouter.ExceptionAction&gt;" Usage="Azure.Communication.JobRouter.ExceptionRule.Actions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.Communication.JobRouter.ExceptionAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A dictionary collection of actions to perform once the exception is triggered. Key is the Id of each exception action. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.JobRouter.ExceptionRule.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="Azure.Communication.JobRouter.ExceptionRule.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Id of the exception rule. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trigger">
      <MemberSignature Language="C#" Value="public Azure.Communication.JobRouter.ExceptionTrigger Trigger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Communication.JobRouter.ExceptionTrigger Trigger" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.JobRouter.ExceptionRule.Trigger" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Trigger As ExceptionTrigger" />
      <MemberSignature Language="F#" Value="member this.Trigger : Azure.Communication.JobRouter.ExceptionTrigger" Usage="Azure.Communication.JobRouter.ExceptionRule.Trigger" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.JobRouter.ExceptionTrigger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The trigger for this exception rule
            Please note <see cref="T:Azure.Communication.JobRouter.ExceptionTrigger" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.Communication.JobRouter.QueueLengthExceptionTrigger" /> and <see cref="T:Azure.Communication.JobRouter.WaitTimeExceptionTrigger" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
