<Type Name="MockableConnectedVMwarevSphereResourceGroupResource" FullName="Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableConnectedVMwarevSphereResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableConnectedVMwarevSphereResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableConnectedVMwarevSphereResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableConnectedVMwarevSphereResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableConnectedVMwarevSphereResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourcePool">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePoolResource&gt; GetResourcePool (string resourcePoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePoolResource&gt; GetResourcePool(string resourcePoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetResourcePool(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourcePool (resourcePoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourcePoolResource)" />
      <MemberSignature Language="F#" Value="abstract member GetResourcePool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePoolResource&gt;&#xA;override this.GetResourcePool : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePoolResource&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetResourcePool (resourcePoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePoolResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourcePoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourcePoolName"> Name of the resourcePool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements resourcePool GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/resourcePools/{resourcePoolName}</description></item><item><term>Operation Id</term><description>ResourcePools_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourcePoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourcePoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourcePoolAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePoolResource&gt;&gt; GetResourcePoolAsync (string resourcePoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePoolResource&gt;&gt; GetResourcePoolAsync(string resourcePoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetResourcePoolAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourcePoolAsync (resourcePoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourcePoolResource))" />
      <MemberSignature Language="F#" Value="abstract member GetResourcePoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePoolResource&gt;&gt;&#xA;override this.GetResourcePoolAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePoolResource&gt;&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetResourcePoolAsync (resourcePoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePoolResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourcePoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourcePoolName"> Name of the resourcePool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements resourcePool GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/resourcePools/{resourcePoolName}</description></item><item><term>Operation Id</term><description>ResourcePools_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourcePoolName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourcePoolName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourcePools">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePoolCollection GetResourcePools ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePoolCollection GetResourcePools() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetResourcePools" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourcePools () As ResourcePoolCollection" />
      <MemberSignature Language="F#" Value="abstract member GetResourcePools : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePoolCollection&#xA;override this.GetResourcePools : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePoolCollection" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetResourcePools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePoolCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ResourcePoolResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ResourcePoolResources and their operations over a ResourcePoolResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVCenter">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VCenterResource&gt; GetVCenter (string vcenterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VCenterResource&gt; GetVCenter(string vcenterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVCenter(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVCenter (vcenterName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VCenterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVCenter : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VCenterResource&gt;&#xA;override this.GetVCenter : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VCenterResource&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVCenter (vcenterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VCenterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vcenterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vcenterName"> Name of the vCenter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements vCenter GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/vcenters/{vcenterName}</description></item><item><term>Operation Id</term><description>VCenters_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vcenterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vcenterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVCenterAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VCenterResource&gt;&gt; GetVCenterAsync (string vcenterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VCenterResource&gt;&gt; GetVCenterAsync(string vcenterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVCenterAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVCenterAsync (vcenterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VCenterResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVCenterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VCenterResource&gt;&gt;&#xA;override this.GetVCenterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VCenterResource&gt;&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVCenterAsync (vcenterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VCenterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vcenterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vcenterName"> Name of the vCenter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements vCenter GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/vcenters/{vcenterName}</description></item><item><term>Operation Id</term><description>VCenters_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vcenterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="vcenterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVCenters">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VCenterCollection GetVCenters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VCenterCollection GetVCenters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVCenters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVCenters () As VCenterCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVCenters : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VCenterCollection&#xA;override this.GetVCenters : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VCenterCollection" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVCenters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VCenterCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VCenterResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VCenterResources and their operations over a VCenterResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachine">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineResource&gt; GetVirtualMachine (string virtualMachineName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineResource&gt; GetVirtualMachine(string virtualMachineName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVirtualMachine(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachine (virtualMachineName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualMachineResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachine : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineResource&gt;&#xA;override this.GetVirtualMachine : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineResource&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVirtualMachine (virtualMachineName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualMachineName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualMachineName"> Name of the virtual machine resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements virtual machine GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachines/{virtualMachineName}</description></item><item><term>Operation Id</term><description>VirtualMachines_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualMachineName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualMachineName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineResource&gt;&gt; GetVirtualMachineAsync (string virtualMachineName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineResource&gt;&gt; GetVirtualMachineAsync(string virtualMachineName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVirtualMachineAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachineAsync (virtualMachineName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualMachineResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachineAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineResource&gt;&gt;&#xA;override this.GetVirtualMachineAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineResource&gt;&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVirtualMachineAsync (virtualMachineName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualMachineName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualMachineName"> Name of the virtual machine resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements virtual machine GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachines/{virtualMachineName}</description></item><item><term>Operation Id</term><description>VirtualMachines_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualMachineName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualMachineName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachines">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineCollection GetVirtualMachines ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineCollection GetVirtualMachines() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVirtualMachines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachines () As VirtualMachineCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachines : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineCollection&#xA;override this.GetVirtualMachines : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineCollection" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVirtualMachines " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VirtualMachineResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VirtualMachineResources and their operations over a VirtualMachineResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineTemplate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplateResource&gt; GetVirtualMachineTemplate (string virtualMachineTemplateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplateResource&gt; GetVirtualMachineTemplate(string virtualMachineTemplateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVirtualMachineTemplate(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachineTemplate (virtualMachineTemplateName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualMachineTemplateResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachineTemplate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplateResource&gt;&#xA;override this.GetVirtualMachineTemplate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplateResource&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVirtualMachineTemplate (virtualMachineTemplateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplateResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualMachineTemplateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualMachineTemplateName"> Name of the virtual machine template resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements virtual machine template GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates/{virtualMachineTemplateName}</description></item><item><term>Operation Id</term><description>VirtualMachineTemplates_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualMachineTemplateName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualMachineTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineTemplateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplateResource&gt;&gt; GetVirtualMachineTemplateAsync (string virtualMachineTemplateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplateResource&gt;&gt; GetVirtualMachineTemplateAsync(string virtualMachineTemplateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVirtualMachineTemplateAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachineTemplateAsync (virtualMachineTemplateName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualMachineTemplateResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachineTemplateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplateResource&gt;&gt;&#xA;override this.GetVirtualMachineTemplateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplateResource&gt;&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVirtualMachineTemplateAsync (virtualMachineTemplateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplateResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualMachineTemplateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualMachineTemplateName"> Name of the virtual machine template resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements virtual machine template GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates/{virtualMachineTemplateName}</description></item><item><term>Operation Id</term><description>VirtualMachineTemplates_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualMachineTemplateName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualMachineTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineTemplates">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplateCollection GetVirtualMachineTemplates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplateCollection GetVirtualMachineTemplates() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVirtualMachineTemplates" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualMachineTemplates () As VirtualMachineTemplateCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualMachineTemplates : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplateCollection&#xA;override this.GetVirtualMachineTemplates : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplateCollection" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVirtualMachineTemplates " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplateCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VirtualMachineTemplateResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VirtualMachineTemplateResources and their operations over a VirtualMachineTemplateResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetwork">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetworkResource&gt; GetVirtualNetwork (string virtualNetworkName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetworkResource&gt; GetVirtualNetwork(string virtualNetworkName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVirtualNetwork(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetwork (virtualNetworkName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualNetworkResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetwork : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetworkResource&gt;&#xA;override this.GetVirtualNetwork : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetworkResource&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVirtualNetwork (virtualNetworkName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetworkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualNetworkName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualNetworkName"> Name of the virtual network resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements virtual network GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualNetworks/{virtualNetworkName}</description></item><item><term>Operation Id</term><description>VirtualNetworks_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualNetworkName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualNetworkName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetworkResource&gt;&gt; GetVirtualNetworkAsync (string virtualNetworkName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetworkResource&gt;&gt; GetVirtualNetworkAsync(string virtualNetworkName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVirtualNetworkAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkAsync (virtualNetworkName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualNetworkResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetworkResource&gt;&gt;&#xA;override this.GetVirtualNetworkAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetworkResource&gt;&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVirtualNetworkAsync (virtualNetworkName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetworkResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualNetworkName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualNetworkName"> Name of the virtual network resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements virtual network GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualNetworks/{virtualNetworkName}</description></item><item><term>Operation Id</term><description>VirtualNetworks_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualNetworkName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualNetworkName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworks">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetworkCollection GetVirtualNetworks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetworkCollection GetVirtualNetworks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVirtualNetworks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworks () As VirtualNetworkCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworks : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetworkCollection&#xA;override this.GetVirtualNetworks : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetworkCollection" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVirtualNetworks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetworkCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VirtualNetworkResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VirtualNetworkResources and their operations over a VirtualNetworkResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareCluster">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt; GetVMwareCluster (string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt; GetVMwareCluster(string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareCluster(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareCluster (clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VMwareClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareCluster : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;&#xA;override this.GetVMwareCluster : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareCluster (clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="clusterName"> Name of the cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements cluster GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/clusters/{clusterName}</description></item><item><term>Operation Id</term><description>Clusters_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareClusterAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;&gt; GetVMwareClusterAsync (string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;&gt; GetVMwareClusterAsync(string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareClusterAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareClusterAsync (clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VMwareClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareClusterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;&gt;&#xA;override this.GetVMwareClusterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareClusterAsync (clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="clusterName"> Name of the cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements cluster GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/clusters/{clusterName}</description></item><item><term>Operation Id</term><description>Clusters_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareClusters">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterCollection GetVMwareClusters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterCollection GetVMwareClusters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareClusters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareClusters () As VMwareClusterCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareClusters : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterCollection&#xA;override this.GetVMwareClusters : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterCollection" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareClusters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VMwareClusterResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VMwareClusterResources and their operations over a VMwareClusterResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareDatastore">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt; GetVMwareDatastore (string datastoreName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt; GetVMwareDatastore(string datastoreName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareDatastore(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareDatastore (datastoreName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VMwareDatastoreResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareDatastore : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;&#xA;override this.GetVMwareDatastore : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareDatastore (datastoreName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datastoreName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="datastoreName"> Name of the datastore. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements datastore GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/datastores/{datastoreName}</description></item><item><term>Operation Id</term><description>Datastores_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="datastoreName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="datastoreName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareDatastoreAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;&gt; GetVMwareDatastoreAsync (string datastoreName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;&gt; GetVMwareDatastoreAsync(string datastoreName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareDatastoreAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareDatastoreAsync (datastoreName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VMwareDatastoreResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareDatastoreAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;&gt;&#xA;override this.GetVMwareDatastoreAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareDatastoreAsync (datastoreName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datastoreName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="datastoreName"> Name of the datastore. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements datastore GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/datastores/{datastoreName}</description></item><item><term>Operation Id</term><description>Datastores_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="datastoreName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="datastoreName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareDatastores">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreCollection GetVMwareDatastores ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreCollection GetVMwareDatastores() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareDatastores" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareDatastores () As VMwareDatastoreCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareDatastores : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreCollection&#xA;override this.GetVMwareDatastores : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreCollection" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareDatastores " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VMwareDatastoreResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VMwareDatastoreResources and their operations over a VMwareDatastoreResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareHost">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt; GetVMwareHost (string hostName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt; GetVMwareHost(string hostName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareHost(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareHost (hostName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VMwareHostResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareHost : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;&#xA;override this.GetVMwareHost : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareHost (hostName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="hostName"> Name of the host. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements host GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/hosts/{hostName}</description></item><item><term>Operation Id</term><description>Hosts_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareHostAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;&gt; GetVMwareHostAsync (string hostName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;&gt; GetVMwareHostAsync(string hostName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareHostAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareHostAsync (hostName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VMwareHostResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareHostAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;&gt;&#xA;override this.GetVMwareHostAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;&gt;" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareHostAsync (hostName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="hostName"> Name of the host. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements host GET method.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/hosts/{hostName}</description></item><item><term>Operation Id</term><description>Hosts_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareHosts">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostCollection GetVMwareHosts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostCollection GetVMwareHosts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.Mocking.MockableConnectedVMwarevSphereResourceGroupResource.GetVMwareHosts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVMwareHosts () As VMwareHostCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVMwareHosts : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostCollection&#xA;override this.GetVMwareHosts : unit -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostCollection" Usage="mockableConnectedVMwarevSphereResourceGroupResource.GetVMwareHosts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VMwareHostResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VMwareHostResources and their operations over a VMwareHostResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
