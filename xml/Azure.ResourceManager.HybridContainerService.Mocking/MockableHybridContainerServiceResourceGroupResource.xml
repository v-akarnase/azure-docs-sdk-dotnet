<Type Name="MockableHybridContainerServiceResourceGroupResource" FullName="Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableHybridContainerServiceResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableHybridContainerServiceResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableHybridContainerServiceResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableHybridContainerServiceResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.HybridContainerService</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableHybridContainerServiceResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHybridContainerServiceVirtualNetwork">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkResource&gt; GetHybridContainerServiceVirtualNetwork (string virtualNetworksName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkResource&gt; GetHybridContainerServiceVirtualNetwork(string virtualNetworksName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceResourceGroupResource.GetHybridContainerServiceVirtualNetwork(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHybridContainerServiceVirtualNetwork (virtualNetworksName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of HybridContainerServiceVirtualNetworkResource)" />
      <MemberSignature Language="F#" Value="abstract member GetHybridContainerServiceVirtualNetwork : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkResource&gt;&#xA;override this.GetHybridContainerServiceVirtualNetwork : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkResource&gt;" Usage="mockableHybridContainerServiceResourceGroupResource.GetHybridContainerServiceVirtualNetwork (virtualNetworksName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualNetworksName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualNetworksName"> Parameter for the name of the virtual network. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the Hybrid AKS virtual network
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridContainerService/virtualNetworks/{virtualNetworksName}</description></item><item><term>Operation Id</term><description>virtualNetworks_Retrieve</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualNetworksName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualNetworksName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHybridContainerServiceVirtualNetworkAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkResource&gt;&gt; GetHybridContainerServiceVirtualNetworkAsync (string virtualNetworksName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkResource&gt;&gt; GetHybridContainerServiceVirtualNetworkAsync(string virtualNetworksName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceResourceGroupResource.GetHybridContainerServiceVirtualNetworkAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHybridContainerServiceVirtualNetworkAsync (virtualNetworksName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HybridContainerServiceVirtualNetworkResource))" />
      <MemberSignature Language="F#" Value="abstract member GetHybridContainerServiceVirtualNetworkAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkResource&gt;&gt;&#xA;override this.GetHybridContainerServiceVirtualNetworkAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkResource&gt;&gt;" Usage="mockableHybridContainerServiceResourceGroupResource.GetHybridContainerServiceVirtualNetworkAsync (virtualNetworksName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualNetworksName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualNetworksName"> Parameter for the name of the virtual network. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the Hybrid AKS virtual network
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridContainerService/virtualNetworks/{virtualNetworksName}</description></item><item><term>Operation Id</term><description>virtualNetworks_Retrieve</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualNetworksName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualNetworksName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHybridContainerServiceVirtualNetworks">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkCollection GetHybridContainerServiceVirtualNetworks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkCollection GetHybridContainerServiceVirtualNetworks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceResourceGroupResource.GetHybridContainerServiceVirtualNetworks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHybridContainerServiceVirtualNetworks () As HybridContainerServiceVirtualNetworkCollection" />
      <MemberSignature Language="F#" Value="abstract member GetHybridContainerServiceVirtualNetworks : unit -&gt; Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkCollection&#xA;override this.GetHybridContainerServiceVirtualNetworks : unit -&gt; Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkCollection" Usage="mockableHybridContainerServiceResourceGroupResource.GetHybridContainerServiceVirtualNetworks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridContainerService.HybridContainerServiceVirtualNetworkCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of HybridContainerServiceVirtualNetworkResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of HybridContainerServiceVirtualNetworkResources and their operations over a HybridContainerServiceVirtualNetworkResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProvisionedCluster">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource&gt; GetProvisionedCluster (string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource&gt; GetProvisionedCluster(string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceResourceGroupResource.GetProvisionedCluster(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProvisionedCluster (resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ProvisionedClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetProvisionedCluster : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource&gt;&#xA;override this.GetProvisionedCluster : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource&gt;" Usage="mockableHybridContainerServiceResourceGroupResource.GetProvisionedCluster (resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceName"> Parameter for the name of the provisioned cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the Hybrid AKS provisioned cluster
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridContainerService/provisionedClusters/{resourceName}</description></item><item><term>Operation Id</term><description>ProvisionedClusters_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProvisionedClusterAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource&gt;&gt; GetProvisionedClusterAsync (string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource&gt;&gt; GetProvisionedClusterAsync(string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceResourceGroupResource.GetProvisionedClusterAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProvisionedClusterAsync (resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ProvisionedClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member GetProvisionedClusterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource&gt;&gt;&#xA;override this.GetProvisionedClusterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource&gt;&gt;" Usage="mockableHybridContainerServiceResourceGroupResource.GetProvisionedClusterAsync (resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridContainerService.ProvisionedClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceName"> Parameter for the name of the provisioned cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the Hybrid AKS provisioned cluster
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridContainerService/provisionedClusters/{resourceName}</description></item><item><term>Operation Id</term><description>ProvisionedClusters_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProvisionedClusters">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HybridContainerService.ProvisionedClusterCollection GetProvisionedClusters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HybridContainerService.ProvisionedClusterCollection GetProvisionedClusters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceResourceGroupResource.GetProvisionedClusters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProvisionedClusters () As ProvisionedClusterCollection" />
      <MemberSignature Language="F#" Value="abstract member GetProvisionedClusters : unit -&gt; Azure.ResourceManager.HybridContainerService.ProvisionedClusterCollection&#xA;override this.GetProvisionedClusters : unit -&gt; Azure.ResourceManager.HybridContainerService.ProvisionedClusterCollection" Usage="mockableHybridContainerServiceResourceGroupResource.GetProvisionedClusters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridContainerService.ProvisionedClusterCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ProvisionedClusterResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ProvisionedClusterResources and their operations over a ProvisionedClusterResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStorageSpace">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HybridContainerService.StorageSpaceResource&gt; GetStorageSpace (string storageSpacesName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HybridContainerService.StorageSpaceResource&gt; GetStorageSpace(string storageSpacesName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceResourceGroupResource.GetStorageSpace(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageSpace (storageSpacesName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of StorageSpaceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetStorageSpace : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HybridContainerService.StorageSpaceResource&gt;&#xA;override this.GetStorageSpace : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HybridContainerService.StorageSpaceResource&gt;" Usage="mockableHybridContainerServiceResourceGroupResource.GetStorageSpace (storageSpacesName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HybridContainerService.StorageSpaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageSpacesName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="storageSpacesName"> Parameter for the name of the storage object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the Hybrid AKS storage space object
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridContainerService/storageSpaces/{storageSpacesName}</description></item><item><term>Operation Id</term><description>storageSpaces_Retrieve</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="storageSpacesName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="storageSpacesName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStorageSpaceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridContainerService.StorageSpaceResource&gt;&gt; GetStorageSpaceAsync (string storageSpacesName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HybridContainerService.StorageSpaceResource&gt;&gt; GetStorageSpaceAsync(string storageSpacesName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceResourceGroupResource.GetStorageSpaceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageSpaceAsync (storageSpacesName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of StorageSpaceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetStorageSpaceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridContainerService.StorageSpaceResource&gt;&gt;&#xA;override this.GetStorageSpaceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridContainerService.StorageSpaceResource&gt;&gt;" Usage="mockableHybridContainerServiceResourceGroupResource.GetStorageSpaceAsync (storageSpacesName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HybridContainerService.StorageSpaceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageSpacesName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="storageSpacesName"> Parameter for the name of the storage object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the Hybrid AKS storage space object
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridContainerService/storageSpaces/{storageSpacesName}</description></item><item><term>Operation Id</term><description>storageSpaces_Retrieve</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="storageSpacesName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="storageSpacesName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStorageSpaces">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HybridContainerService.StorageSpaceCollection GetStorageSpaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HybridContainerService.StorageSpaceCollection GetStorageSpaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridContainerService.Mocking.MockableHybridContainerServiceResourceGroupResource.GetStorageSpaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageSpaces () As StorageSpaceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetStorageSpaces : unit -&gt; Azure.ResourceManager.HybridContainerService.StorageSpaceCollection&#xA;override this.GetStorageSpaces : unit -&gt; Azure.ResourceManager.HybridContainerService.StorageSpaceCollection" Usage="mockableHybridContainerServiceResourceGroupResource.GetStorageSpaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridContainerService.StorageSpaceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of StorageSpaceResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of StorageSpaceResources and their operations over a StorageSpaceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
