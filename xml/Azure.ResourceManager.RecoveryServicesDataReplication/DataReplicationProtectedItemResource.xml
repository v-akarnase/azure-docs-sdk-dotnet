<Type Name="DataReplicationProtectedItemResource" FullName="Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource">
  <TypeSignature Language="C#" Value="public class DataReplicationProtectedItemResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataReplicationProtectedItemResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource" />
  <TypeSignature Language="VB.NET" Value="Public Class DataReplicationProtectedItemResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type DataReplicationProtectedItemResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.RecoveryServicesDataReplication</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing a DataReplicationProtectedItem along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetDataReplicationProtectedItemResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationVaultResource" /> using the GetDataReplicationProtectedItem method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataReplicationProtectedItemResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesDataReplication</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string vaultName, string protectedItemName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string vaultName, string protectedItemName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, vaultName As String, protectedItemName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, vaultName, protectedItemName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesDataReplication</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="protectedItemName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId"> The subscriptionId. </param>
        <param name="resourceGroupName"> The resourceGroupName. </param>
        <param name="vaultName"> The vaultName. </param>
        <param name="protectedItemName"> The protectedItemName. </param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As DataReplicationProtectedItemData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemData" Usage="Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesDataReplication</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, bool? forceDelete = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Nullable`1&lt;bool&gt; forceDelete, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource.Delete(Azure.WaitUntil,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional forceDelete As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="dataReplicationProtectedItemResource.Delete (waitUntil, forceDelete, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesDataReplication</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="forceDelete" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="forceDelete"> A flag indicating whether to do force delete or not. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes the protected item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/protectedItems/{protectedItemName}</description></item><item><term>Operation Id</term><description>ProtectedItem_Delete</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, bool? forceDelete = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Nullable`1&lt;bool&gt; forceDelete, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource.DeleteAsync(Azure.WaitUntil,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional forceDelete As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="dataReplicationProtectedItemResource.DeleteAsync (waitUntil, forceDelete, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesDataReplication</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="forceDelete" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="forceDelete"> A flag indicating whether to do force delete or not. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes the protected item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/protectedItems/{protectedItemName}</description></item><item><term>Operation Id</term><description>ProtectedItem_Delete</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataReplicationProtectedItemResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource&gt;" Usage="dataReplicationProtectedItemResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesDataReplication</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the protected item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/protectedItems/{protectedItemName}</description></item><item><term>Operation Id</term><description>ProtectedItem_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataReplicationProtectedItemResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource&gt;&gt;" Usage="dataReplicationProtectedItemResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesDataReplication</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the protected item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/protectedItems/{protectedItemName}</description></item><item><term>Operation Id</term><description>ProtectedItem_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataReplicationRecoveryPoint">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationRecoveryPointResource&gt; GetDataReplicationRecoveryPoint (string recoveryPointName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationRecoveryPointResource&gt; GetDataReplicationRecoveryPoint(string recoveryPointName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource.GetDataReplicationRecoveryPoint(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataReplicationRecoveryPoint (recoveryPointName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataReplicationRecoveryPointResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataReplicationRecoveryPoint : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationRecoveryPointResource&gt;&#xA;override this.GetDataReplicationRecoveryPoint : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationRecoveryPointResource&gt;" Usage="dataReplicationProtectedItemResource.GetDataReplicationRecoveryPoint (recoveryPointName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesDataReplication</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationRecoveryPointResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recoveryPointName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recoveryPointName"> The recovery point name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the recovery point of a protected item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/protectedItems/{protectedItemName}/recoveryPoints/{recoveryPointName}</description></item><item><term>Operation Id</term><description>RecoveryPoints_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="recoveryPointName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="recoveryPointName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataReplicationRecoveryPointAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationRecoveryPointResource&gt;&gt; GetDataReplicationRecoveryPointAsync (string recoveryPointName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationRecoveryPointResource&gt;&gt; GetDataReplicationRecoveryPointAsync(string recoveryPointName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource.GetDataReplicationRecoveryPointAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataReplicationRecoveryPointAsync (recoveryPointName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataReplicationRecoveryPointResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataReplicationRecoveryPointAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationRecoveryPointResource&gt;&gt;&#xA;override this.GetDataReplicationRecoveryPointAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationRecoveryPointResource&gt;&gt;" Usage="dataReplicationProtectedItemResource.GetDataReplicationRecoveryPointAsync (recoveryPointName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesDataReplication</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationRecoveryPointResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recoveryPointName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recoveryPointName"> The recovery point name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the recovery point of a protected item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/protectedItems/{protectedItemName}/recoveryPoints/{recoveryPointName}</description></item><item><term>Operation Id</term><description>RecoveryPoints_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="recoveryPointName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="recoveryPointName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataReplicationRecoveryPoints">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationRecoveryPointCollection GetDataReplicationRecoveryPoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationRecoveryPointCollection GetDataReplicationRecoveryPoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource.GetDataReplicationRecoveryPoints" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataReplicationRecoveryPoints () As DataReplicationRecoveryPointCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataReplicationRecoveryPoints : unit -&gt; Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationRecoveryPointCollection&#xA;override this.GetDataReplicationRecoveryPoints : unit -&gt; Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationRecoveryPointCollection" Usage="dataReplicationProtectedItemResource.GetDataReplicationRecoveryPoints " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesDataReplication</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationRecoveryPointCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataReplicationRecoveryPointResources in the DataReplicationProtectedItem. </summary>
        <returns> An object representing collection of DataReplicationRecoveryPointResources and their operations over a DataReplicationRecoveryPointResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesDataReplication</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlannedFailover">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesDataReplication.Models.PlannedFailoverModel&gt; PlannedFailover (Azure.WaitUntil waitUntil, Azure.ResourceManager.RecoveryServicesDataReplication.Models.PlannedFailoverModel body = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.RecoveryServicesDataReplication.Models.PlannedFailoverModel&gt; PlannedFailover(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.RecoveryServicesDataReplication.Models.PlannedFailoverModel body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource.PlannedFailover(Azure.WaitUntil,Azure.ResourceManager.RecoveryServicesDataReplication.Models.PlannedFailoverModel,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PlannedFailover (waitUntil As WaitUntil, Optional body As PlannedFailoverModel = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of PlannedFailoverModel)" />
      <MemberSignature Language="F#" Value="abstract member PlannedFailover : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesDataReplication.Models.PlannedFailoverModel * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesDataReplication.Models.PlannedFailoverModel&gt;&#xA;override this.PlannedFailover : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesDataReplication.Models.PlannedFailoverModel * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesDataReplication.Models.PlannedFailoverModel&gt;" Usage="dataReplicationProtectedItemResource.PlannedFailover (waitUntil, body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesDataReplication</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesDataReplication.Models.PlannedFailoverModel&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="body" Type="Azure.ResourceManager.RecoveryServicesDataReplication.Models.PlannedFailoverModel" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="body"> Planned failover model. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Performs the planned failover on the protected item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/protectedItems/{protectedItemName}/plannedFailover</description></item><item><term>Operation Id</term><description>ProtectedItem_PlannedFailover</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlannedFailoverAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesDataReplication.Models.PlannedFailoverModel&gt;&gt; PlannedFailoverAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.RecoveryServicesDataReplication.Models.PlannedFailoverModel body = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.RecoveryServicesDataReplication.Models.PlannedFailoverModel&gt;&gt; PlannedFailoverAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.RecoveryServicesDataReplication.Models.PlannedFailoverModel body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource.PlannedFailoverAsync(Azure.WaitUntil,Azure.ResourceManager.RecoveryServicesDataReplication.Models.PlannedFailoverModel,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PlannedFailoverAsync (waitUntil As WaitUntil, Optional body As PlannedFailoverModel = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of PlannedFailoverModel))" />
      <MemberSignature Language="F#" Value="abstract member PlannedFailoverAsync : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesDataReplication.Models.PlannedFailoverModel * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesDataReplication.Models.PlannedFailoverModel&gt;&gt;&#xA;override this.PlannedFailoverAsync : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesDataReplication.Models.PlannedFailoverModel * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesDataReplication.Models.PlannedFailoverModel&gt;&gt;" Usage="dataReplicationProtectedItemResource.PlannedFailoverAsync (waitUntil, body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesDataReplication</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesDataReplication.Models.PlannedFailoverModel&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="body" Type="Azure.ResourceManager.RecoveryServicesDataReplication.Models.PlannedFailoverModel" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="body"> Planned failover model. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Performs the planned failover on the protected item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/protectedItems/{protectedItemName}/plannedFailover</description></item><item><term>Operation Id</term><description>ProtectedItem_PlannedFailover</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesDataReplication</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource.Update(Azure.WaitUntil,Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, data As DataReplicationProtectedItemData, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of DataReplicationProtectedItemResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource&gt;" Usage="dataReplicationProtectedItemResource.Update (waitUntil, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesDataReplication</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="data" Type="Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="data"> Protected item model. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates the protected item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/protectedItems/{protectedItemName}</description></item><item><term>Operation Id</term><description>ProtectedItem_Create</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, data As DataReplicationProtectedItemData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of DataReplicationProtectedItemResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource&gt;&gt;" Usage="dataReplicationProtectedItemResource.UpdateAsync (waitUntil, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.RecoveryServicesDataReplication</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="data" Type="Azure.ResourceManager.RecoveryServicesDataReplication.DataReplicationProtectedItemData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="data"> Protected item model. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates the protected item.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/protectedItems/{protectedItemName}</description></item><item><term>Operation Id</term><description>ProtectedItem_Create</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
