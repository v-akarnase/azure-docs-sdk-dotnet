<Type Name="MockablePurviewTenantResource" FullName="Azure.ResourceManager.Purview.Mocking.MockablePurviewTenantResource">
  <TypeSignature Language="C#" Value="public class MockablePurviewTenantResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockablePurviewTenantResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Purview.Mocking.MockablePurviewTenantResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockablePurviewTenantResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockablePurviewTenantResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to TenantResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockablePurviewTenantResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewTenantResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Purview.Mocking.MockablePurviewTenantResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultAccount">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt; GetDefaultAccount (Guid scopeTenantId, Azure.ResourceManager.Purview.Models.PurviewAccountScopeType scopeType, string scope = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt; GetDefaultAccount(valuetype System.Guid scopeTenantId, valuetype Azure.ResourceManager.Purview.Models.PurviewAccountScopeType scopeType, string scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewTenantResource.GetDefaultAccount(System.Guid,Azure.ResourceManager.Purview.Models.PurviewAccountScopeType,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDefaultAccount (scopeTenantId As Guid, scopeType As PurviewAccountScopeType, Optional scope As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DefaultPurviewAccountPayload)" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultAccount : Guid * Azure.ResourceManager.Purview.Models.PurviewAccountScopeType * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;&#xA;override this.GetDefaultAccount : Guid * Azure.ResourceManager.Purview.Models.PurviewAccountScopeType * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;" Usage="mockablePurviewTenantResource.GetDefaultAccount (scopeTenantId, scopeType, scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeTenantId" Type="System.Guid" />
        <Parameter Name="scopeType" Type="Azure.ResourceManager.Purview.Models.PurviewAccountScopeType" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scopeTenantId"> The tenant ID. </param>
        <param name="scopeType"> The scope for the default account. </param>
        <param name="scope"> The Id of the scope object, for example if the scope is "Subscription" then it is the ID of that subscription. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the default account for the scope.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Purview/getDefaultAccount</description></item><item><term>Operation Id</term><description>DefaultAccounts_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultAccountAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;&gt; GetDefaultAccountAsync (Guid scopeTenantId, Azure.ResourceManager.Purview.Models.PurviewAccountScopeType scopeType, string scope = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;&gt; GetDefaultAccountAsync(valuetype System.Guid scopeTenantId, valuetype Azure.ResourceManager.Purview.Models.PurviewAccountScopeType scopeType, string scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewTenantResource.GetDefaultAccountAsync(System.Guid,Azure.ResourceManager.Purview.Models.PurviewAccountScopeType,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDefaultAccountAsync (scopeTenantId As Guid, scopeType As PurviewAccountScopeType, Optional scope As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DefaultPurviewAccountPayload))" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultAccountAsync : Guid * Azure.ResourceManager.Purview.Models.PurviewAccountScopeType * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;&gt;&#xA;override this.GetDefaultAccountAsync : Guid * Azure.ResourceManager.Purview.Models.PurviewAccountScopeType * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;&gt;" Usage="mockablePurviewTenantResource.GetDefaultAccountAsync (scopeTenantId, scopeType, scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeTenantId" Type="System.Guid" />
        <Parameter Name="scopeType" Type="Azure.ResourceManager.Purview.Models.PurviewAccountScopeType" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scopeTenantId"> The tenant ID. </param>
        <param name="scopeType"> The scope for the default account. </param>
        <param name="scope"> The Id of the scope object, for example if the scope is "Subscription" then it is the ID of that subscription. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the default account for the scope.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Purview/getDefaultAccount</description></item><item><term>Operation Id</term><description>DefaultAccounts_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDefaultAccount">
      <MemberSignature Language="C#" Value="public virtual Azure.Response RemoveDefaultAccount (Guid scopeTenantId, Azure.ResourceManager.Purview.Models.PurviewAccountScopeType scopeType, string scope = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response RemoveDefaultAccount(valuetype System.Guid scopeTenantId, valuetype Azure.ResourceManager.Purview.Models.PurviewAccountScopeType scopeType, string scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewTenantResource.RemoveDefaultAccount(System.Guid,Azure.ResourceManager.Purview.Models.PurviewAccountScopeType,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveDefaultAccount (scopeTenantId As Guid, scopeType As PurviewAccountScopeType, Optional scope As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member RemoveDefaultAccount : Guid * Azure.ResourceManager.Purview.Models.PurviewAccountScopeType * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.RemoveDefaultAccount : Guid * Azure.ResourceManager.Purview.Models.PurviewAccountScopeType * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="mockablePurviewTenantResource.RemoveDefaultAccount (scopeTenantId, scopeType, scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeTenantId" Type="System.Guid" />
        <Parameter Name="scopeType" Type="Azure.ResourceManager.Purview.Models.PurviewAccountScopeType" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scopeTenantId"> The tenant ID. </param>
        <param name="scopeType"> The scope for the default account. </param>
        <param name="scope"> The Id of the scope object, for example if the scope is "Subscription" then it is the ID of that subscription. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes the default account from the scope.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Purview/removeDefaultAccount</description></item><item><term>Operation Id</term><description>DefaultAccounts_Remove</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDefaultAccountAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; RemoveDefaultAccountAsync (Guid scopeTenantId, Azure.ResourceManager.Purview.Models.PurviewAccountScopeType scopeType, string scope = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; RemoveDefaultAccountAsync(valuetype System.Guid scopeTenantId, valuetype Azure.ResourceManager.Purview.Models.PurviewAccountScopeType scopeType, string scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewTenantResource.RemoveDefaultAccountAsync(System.Guid,Azure.ResourceManager.Purview.Models.PurviewAccountScopeType,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveDefaultAccountAsync (scopeTenantId As Guid, scopeType As PurviewAccountScopeType, Optional scope As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member RemoveDefaultAccountAsync : Guid * Azure.ResourceManager.Purview.Models.PurviewAccountScopeType * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.RemoveDefaultAccountAsync : Guid * Azure.ResourceManager.Purview.Models.PurviewAccountScopeType * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="mockablePurviewTenantResource.RemoveDefaultAccountAsync (scopeTenantId, scopeType, scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeTenantId" Type="System.Guid" />
        <Parameter Name="scopeType" Type="Azure.ResourceManager.Purview.Models.PurviewAccountScopeType" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scopeTenantId"> The tenant ID. </param>
        <param name="scopeType"> The scope for the default account. </param>
        <param name="scope"> The Id of the scope object, for example if the scope is "Subscription" then it is the ID of that subscription. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes the default account from the scope.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Purview/removeDefaultAccount</description></item><item><term>Operation Id</term><description>DefaultAccounts_Remove</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultAccount">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt; SetDefaultAccount (Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload defaultAccountPayload, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt; SetDefaultAccount(class Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload defaultAccountPayload, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewTenantResource.SetDefaultAccount(Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetDefaultAccount (defaultAccountPayload As DefaultPurviewAccountPayload, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DefaultPurviewAccountPayload)" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultAccount : Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;&#xA;override this.SetDefaultAccount : Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;" Usage="mockablePurviewTenantResource.SetDefaultAccount (defaultAccountPayload, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultAccountPayload" Type="Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="defaultAccountPayload"> The payload containing the default account information and the scope. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Sets the default account for the scope.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Purview/setDefaultAccount</description></item><item><term>Operation Id</term><description>DefaultAccounts_Set</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="defaultAccountPayload" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultAccountAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;&gt; SetDefaultAccountAsync (Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload defaultAccountPayload, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;&gt; SetDefaultAccountAsync(class Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload defaultAccountPayload, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Purview.Mocking.MockablePurviewTenantResource.SetDefaultAccountAsync(Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetDefaultAccountAsync (defaultAccountPayload As DefaultPurviewAccountPayload, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DefaultPurviewAccountPayload))" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultAccountAsync : Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;&gt;&#xA;override this.SetDefaultAccountAsync : Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;&gt;" Usage="mockablePurviewTenantResource.SetDefaultAccountAsync (defaultAccountPayload, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Purview</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultAccountPayload" Type="Azure.ResourceManager.Purview.Models.DefaultPurviewAccountPayload" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="defaultAccountPayload"> The payload containing the default account information and the scope. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Sets the default account for the scope.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Purview/setDefaultAccount</description></item><item><term>Operation Id</term><description>DefaultAccounts_Set</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="defaultAccountPayload" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
