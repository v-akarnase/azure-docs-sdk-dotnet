<Type Name="ArmResourceHealthModelFactory" FullName="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmResourceHealthModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmResourceHealthModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmResourceHealthModelFactory" />
  <TypeSignature Language="F#" Value="type ArmResourceHealthModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="EmergingIssueActiveEventType">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.Models.EmergingIssueActiveEventType EmergingIssueActiveEventType (string title = default, string description = default, string trackingId = default, DateTimeOffset? startOn = default, string cloud = default, Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventSeverityLevel? severity = default, Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventStageValue? stage = default, bool? isPublished = default, DateTimeOffset? lastModifiedOn = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.EmergingIssueImpact&gt; impacts = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.Models.EmergingIssueActiveEventType EmergingIssueActiveEventType(string title, string description, string trackingId, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, string cloud, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventSeverityLevel&gt; severity, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventStageValue&gt; stage, valuetype System.Nullable`1&lt;bool&gt; isPublished, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModifiedOn, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.EmergingIssueImpact&gt; impacts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.EmergingIssueActiveEventType(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventSeverityLevel},System.Nullable{Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventStageValue},System.Nullable{System.Boolean},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ResourceHealth.Models.EmergingIssueImpact})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EmergingIssueActiveEventType (Optional title As String = Nothing, Optional description As String = Nothing, Optional trackingId As String = Nothing, Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional cloud As String = Nothing, Optional severity As Nullable(Of ResourceHealthEventSeverityLevel) = Nothing, Optional stage As Nullable(Of ResourceHealthEventStageValue) = Nothing, Optional isPublished As Nullable(Of Boolean) = Nothing, Optional lastModifiedOn As Nullable(Of DateTimeOffset) = Nothing, Optional impacts As IEnumerable(Of EmergingIssueImpact) = Nothing) As EmergingIssueActiveEventType" />
      <MemberSignature Language="F#" Value="static member EmergingIssueActiveEventType : string * string * string * Nullable&lt;DateTimeOffset&gt; * string * Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventSeverityLevel&gt; * Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventStageValue&gt; * Nullable&lt;bool&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;Azure.ResourceManager.ResourceHealth.Models.EmergingIssueImpact&gt; -&gt; Azure.ResourceManager.ResourceHealth.Models.EmergingIssueActiveEventType" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.EmergingIssueActiveEventType (title, description, trackingId, startOn, cloud, severity, stage, isPublished, lastModifiedOn, impacts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.Models.EmergingIssueActiveEventType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="trackingId" Type="System.String" />
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="cloud" Type="System.String" />
        <Parameter Name="severity" Type="System.Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventSeverityLevel&gt;" />
        <Parameter Name="stage" Type="System.Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventStageValue&gt;" />
        <Parameter Name="isPublished" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="lastModifiedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="impacts" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.EmergingIssueImpact&gt;" />
      </Parameters>
      <Docs>
        <param name="title"> The active event title. </param>
        <param name="description"> The details of active event. </param>
        <param name="trackingId"> The tracking id of this active event. </param>
        <param name="startOn"> The impact start time on this active event. </param>
        <param name="cloud"> The cloud type of this active event. </param>
        <param name="severity"> The severity level of this active event. </param>
        <param name="stage"> The stage of this active event. </param>
        <param name="isPublished"> The boolean value of this active event if published or not. </param>
        <param name="lastModifiedOn"> The last time modified on this banner. </param>
        <param name="impacts"> The list of emerging issues impacts. </param>
        <summary> Initializes a new instance of EmergingIssueActiveEventType. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.Models.EmergingIssueActiveEventType" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmergingIssueBannerType">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.Models.EmergingIssueBannerType EmergingIssueBannerType (string title = default, string message = default, string cloud = default, DateTimeOffset? lastModifiedOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.Models.EmergingIssueBannerType EmergingIssueBannerType(string title, string message, string cloud, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModifiedOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.EmergingIssueBannerType(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EmergingIssueBannerType (Optional title As String = Nothing, Optional message As String = Nothing, Optional cloud As String = Nothing, Optional lastModifiedOn As Nullable(Of DateTimeOffset) = Nothing) As EmergingIssueBannerType" />
      <MemberSignature Language="F#" Value="static member EmergingIssueBannerType : string * string * string * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.ResourceHealth.Models.EmergingIssueBannerType" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.EmergingIssueBannerType (title, message, cloud, lastModifiedOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.Models.EmergingIssueBannerType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="cloud" Type="System.String" />
        <Parameter Name="lastModifiedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="title"> The banner title. </param>
        <param name="message"> The details of banner. </param>
        <param name="cloud"> The cloud type of this banner. </param>
        <param name="lastModifiedOn"> The last time modified on this banner. </param>
        <summary> Initializes a new instance of EmergingIssueBannerType. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.Models.EmergingIssueBannerType" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmergingIssueImpact">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.Models.EmergingIssueImpact EmergingIssueImpact (string id = default, string name = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.EmergingIssueImpactedRegion&gt; regions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.Models.EmergingIssueImpact EmergingIssueImpact(string id, string name, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.EmergingIssueImpactedRegion&gt; regions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.EmergingIssueImpact(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ResourceHealth.Models.EmergingIssueImpactedRegion})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EmergingIssueImpact (Optional id As String = Nothing, Optional name As String = Nothing, Optional regions As IEnumerable(Of EmergingIssueImpactedRegion) = Nothing) As EmergingIssueImpact" />
      <MemberSignature Language="F#" Value="static member EmergingIssueImpact : string * string * seq&lt;Azure.ResourceManager.ResourceHealth.Models.EmergingIssueImpactedRegion&gt; -&gt; Azure.ResourceManager.ResourceHealth.Models.EmergingIssueImpact" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.EmergingIssueImpact (id, name, regions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.Models.EmergingIssueImpact</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="regions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.EmergingIssueImpactedRegion&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The impacted service id. </param>
        <param name="name"> The impacted service name. </param>
        <param name="regions"> The list of impacted regions for corresponding emerging issues. </param>
        <summary> Initializes a new instance of EmergingIssueImpact. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.Models.EmergingIssueImpact" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmergingIssueImpactedRegion">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.Models.EmergingIssueImpactedRegion EmergingIssueImpactedRegion (string id = default, string name = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.Models.EmergingIssueImpactedRegion EmergingIssueImpactedRegion(string id, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.EmergingIssueImpactedRegion(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EmergingIssueImpactedRegion (Optional id As String = Nothing, Optional name As String = Nothing) As EmergingIssueImpactedRegion" />
      <MemberSignature Language="F#" Value="static member EmergingIssueImpactedRegion : string * string -&gt; Azure.ResourceManager.ResourceHealth.Models.EmergingIssueImpactedRegion" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.EmergingIssueImpactedRegion (id, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.Models.EmergingIssueImpactedRegion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The impacted region id. </param>
        <param name="name"> The impacted region name. </param>
        <summary> Initializes a new instance of EmergingIssueImpactedRegion. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.Models.EmergingIssueImpactedRegion" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataSupportedValueDetail">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.Models.MetadataSupportedValueDetail MetadataSupportedValueDetail (string id = default, string displayName = default, System.Collections.Generic.IEnumerable&lt;Azure.Core.ResourceType&gt; resourceTypes = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.Models.MetadataSupportedValueDetail MetadataSupportedValueDetail(string id, string displayName, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Core.ResourceType&gt; resourceTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.MetadataSupportedValueDetail(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.Core.ResourceType})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MetadataSupportedValueDetail (Optional id As String = Nothing, Optional displayName As String = Nothing, Optional resourceTypes As IEnumerable(Of ResourceType) = Nothing) As MetadataSupportedValueDetail" />
      <MemberSignature Language="F#" Value="static member MetadataSupportedValueDetail : string * string * seq&lt;Azure.Core.ResourceType&gt; -&gt; Azure.ResourceManager.ResourceHealth.Models.MetadataSupportedValueDetail" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.MetadataSupportedValueDetail (id, displayName, resourceTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.Models.MetadataSupportedValueDetail</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="resourceTypes" Type="System.Collections.Generic.IEnumerable&lt;Azure.Core.ResourceType&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="displayName"> The display name. </param>
        <param name="resourceTypes"> The list of associated resource types. </param>
        <summary> Initializes a new instance of MetadataSupportedValueDetail. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.Models.MetadataSupportedValueDetail" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceHealthAvailabilityStateRecentlyResolved">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStateRecentlyResolved ResourceHealthAvailabilityStateRecentlyResolved (DateTimeOffset? unavailableOccuredOn = default, DateTimeOffset? resolvedOn = default, string unavailableSummary = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStateRecentlyResolved ResourceHealthAvailabilityStateRecentlyResolved(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; unavailableOccuredOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; resolvedOn, string unavailableSummary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthAvailabilityStateRecentlyResolved(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResourceHealthAvailabilityStateRecentlyResolved (Optional unavailableOccuredOn As Nullable(Of DateTimeOffset) = Nothing, Optional resolvedOn As Nullable(Of DateTimeOffset) = Nothing, Optional unavailableSummary As String = Nothing) As ResourceHealthAvailabilityStateRecentlyResolved" />
      <MemberSignature Language="F#" Value="static member ResourceHealthAvailabilityStateRecentlyResolved : Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * string -&gt; Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStateRecentlyResolved" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthAvailabilityStateRecentlyResolved (unavailableOccuredOn, resolvedOn, unavailableSummary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStateRecentlyResolved</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unavailableOccuredOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="resolvedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="unavailableSummary" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unavailableOccuredOn"> Timestamp for when the availabilityState changed to Unavailable. </param>
        <param name="resolvedOn"> Timestamp when the availabilityState changes to Available. </param>
        <param name="unavailableSummary"> Brief description of cause of the resource becoming unavailable. </param>
        <summary> Initializes a new instance of ResourceHealthAvailabilityStateRecentlyResolved. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStateRecentlyResolved" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceHealthAvailabilityStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus ResourceHealthAvailabilityStatus (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.AzureLocation? location = default, Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatusProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus ResourceHealthAvailabilityStatus(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatusProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthAvailabilityStatus(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.Core.AzureLocation},Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatusProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResourceHealthAvailabilityStatus (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional properties As ResourceHealthAvailabilityStatusProperties = Nothing) As ResourceHealthAvailabilityStatus" />
      <MemberSignature Language="F#" Value="static member ResourceHealthAvailabilityStatus : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.Core.AzureLocation&gt; * Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatusProperties -&gt; Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthAvailabilityStatus (id, name, resourceType, systemData, location, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="properties" Type="Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatusProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="location"> Azure Resource Manager geo location of the resource. </param>
        <param name="properties"> Properties of availability state. </param>
        <summary> Initializes a new instance of ResourceHealthAvailabilityStatus. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatus" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceHealthAvailabilityStatusProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatusProperties ResourceHealthAvailabilityStatusProperties (Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStateValue? availabilityState = default, string title = default, string summary = default, string detailedStatus = default, string reasonType = default, string context = default, string category = default, string articleId = default, DateTimeOffset? rootCauseAttributionOn = default, string healthEventType = default, string healthEventCause = default, string healthEventCategory = default, string healthEventId = default, DateTimeOffset? resolutionEta = default, DateTimeOffset? occuredOn = default, Azure.ResourceManager.ResourceHealth.Models.ReasonChronicityType? reasonChronicity = default, DateTimeOffset? reportedOn = default, Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStateRecentlyResolved recentlyResolved = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthRecommendedAction&gt; recommendedActions = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.ServiceImpactingEvent&gt; serviceImpactingEvents = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatusProperties ResourceHealthAvailabilityStatusProperties(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStateValue&gt; availabilityState, string title, string summary, string detailedStatus, string reasonType, string context, string category, string articleId, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; rootCauseAttributionOn, string healthEventType, string healthEventCause, string healthEventCategory, string healthEventId, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; resolutionEta, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; occuredOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ResourceHealth.Models.ReasonChronicityType&gt; reasonChronicity, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; reportedOn, class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStateRecentlyResolved recentlyResolved, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthRecommendedAction&gt; recommendedActions, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ServiceImpactingEvent&gt; serviceImpactingEvents) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthAvailabilityStatusProperties(System.Nullable{Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStateValue},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.String,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.ResourceHealth.Models.ReasonChronicityType},System.Nullable{System.DateTimeOffset},Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStateRecentlyResolved,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ResourceHealth.Models.ResourceHealthRecommendedAction},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ResourceHealth.Models.ServiceImpactingEvent})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResourceHealthAvailabilityStatusProperties (Optional availabilityState As Nullable(Of ResourceHealthAvailabilityStateValue) = Nothing, Optional title As String = Nothing, Optional summary As String = Nothing, Optional detailedStatus As String = Nothing, Optional reasonType As String = Nothing, Optional context As String = Nothing, Optional category As String = Nothing, Optional articleId As String = Nothing, Optional rootCauseAttributionOn As Nullable(Of DateTimeOffset) = Nothing, Optional healthEventType As String = Nothing, Optional healthEventCause As String = Nothing, Optional healthEventCategory As String = Nothing, Optional healthEventId As String = Nothing, Optional resolutionEta As Nullable(Of DateTimeOffset) = Nothing, Optional occuredOn As Nullable(Of DateTimeOffset) = Nothing, Optional reasonChronicity As Nullable(Of ReasonChronicityType) = Nothing, Optional reportedOn As Nullable(Of DateTimeOffset) = Nothing, Optional recentlyResolved As ResourceHealthAvailabilityStateRecentlyResolved = Nothing, Optional recommendedActions As IEnumerable(Of ResourceHealthRecommendedAction) = Nothing, Optional serviceImpactingEvents As IEnumerable(Of ServiceImpactingEvent) = Nothing) As ResourceHealthAvailabilityStatusProperties" />
      <MemberSignature Language="F#" Value="static member ResourceHealthAvailabilityStatusProperties : Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStateValue&gt; * string * string * string * string * string * string * string * Nullable&lt;DateTimeOffset&gt; * string * string * string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.ReasonChronicityType&gt; * Nullable&lt;DateTimeOffset&gt; * Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStateRecentlyResolved * seq&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthRecommendedAction&gt; * seq&lt;Azure.ResourceManager.ResourceHealth.Models.ServiceImpactingEvent&gt; -&gt; Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatusProperties" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthAvailabilityStatusProperties (availabilityState, title, summary, detailedStatus, reasonType, context, category, articleId, rootCauseAttributionOn, healthEventType, healthEventCause, healthEventCategory, healthEventId, resolutionEta, occuredOn, reasonChronicity, reportedOn, recentlyResolved, recommendedActions, serviceImpactingEvents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatusProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availabilityState" Type="System.Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStateValue&gt;" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="summary" Type="System.String" />
        <Parameter Name="detailedStatus" Type="System.String" />
        <Parameter Name="reasonType" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="articleId" Type="System.String" />
        <Parameter Name="rootCauseAttributionOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="healthEventType" Type="System.String" />
        <Parameter Name="healthEventCause" Type="System.String" />
        <Parameter Name="healthEventCategory" Type="System.String" />
        <Parameter Name="healthEventId" Type="System.String" />
        <Parameter Name="resolutionEta" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="occuredOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="reasonChronicity" Type="System.Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.ReasonChronicityType&gt;" />
        <Parameter Name="reportedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="recentlyResolved" Type="Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStateRecentlyResolved" />
        <Parameter Name="recommendedActions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthRecommendedAction&gt;" />
        <Parameter Name="serviceImpactingEvents" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.ServiceImpactingEvent&gt;" />
      </Parameters>
      <Docs>
        <param name="availabilityState"> Availability status of the resource. When it is null, this availabilityStatus object represents an availability impacting event. </param>
        <param name="title"> Title description of the availability status. </param>
        <param name="summary"> Summary description of the availability status. </param>
        <param name="detailedStatus"> Details of the availability status. </param>
        <param name="reasonType"> When the resource's availabilityState is Unavailable, it describes where the health impacting event was originated. Examples are planned, unplanned, user initiated or an outage etc. </param>
        <param name="context"> When an event is created, it can either be triggered by a customer or the platform of the resource and this field will illustrate that. This field is connected to the category field in this object. </param>
        <param name="category"> When a context field is set to Platform, this field will reflect if the event was planned or unplanned. If the context field does not have a value of Platform, then this field will be ignored. </param>
        <param name="articleId"> The Article Id. </param>
        <param name="rootCauseAttributionOn"> When the resource's availabilityState is Unavailable, it provides the Timestamp for when the health impacting event was received. </param>
        <param name="healthEventType"> In case of an availability impacting event, it describes when the health impacting event was originated. Examples are Lifecycle, Downtime, Fault Analysis etc. </param>
        <param name="healthEventCause"> In case of an availability impacting event, it describes where the health impacting event was originated. Examples are PlatformInitiated, UserInitiated etc. </param>
        <param name="healthEventCategory"> In case of an availability impacting event, it describes the category of a PlatformInitiated health impacting event. Examples are Planned, Unplanned etc. </param>
        <param name="healthEventId"> It is a unique Id that identifies the event. </param>
        <param name="resolutionEta"> When the resource's availabilityState is Unavailable and the reasonType is not User Initiated, it provides the date and time for when the issue is expected to be resolved. </param>
        <param name="occuredOn"> Timestamp for when last change in health status occurred. </param>
        <param name="reasonChronicity"> Chronicity of the availability transition. </param>
        <param name="reportedOn"> Timestamp for when the health was last checked. </param>
        <param name="recentlyResolved"> An annotation describing a change in the availabilityState to Available from Unavailable with a reasonType of type Unplanned. </param>
        <param name="recommendedActions"> Lists actions the user can take based on the current availabilityState of the resource. </param>
        <param name="serviceImpactingEvents"> Lists the service impacting events that may be affecting the health of the resource. </param>
        <summary> Initializes a new instance of ResourceHealthAvailabilityStatusProperties. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.Models.ResourceHealthAvailabilityStatusProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceHealthEventArticle">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventArticle ResourceHealthEventArticle (string articleContent = default, string articleId = default, BinaryData parameters = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventArticle ResourceHealthEventArticle(string articleContent, string articleId, class System.BinaryData parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthEventArticle(System.String,System.String,System.BinaryData)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResourceHealthEventArticle (Optional articleContent As String = Nothing, Optional articleId As String = Nothing, Optional parameters As BinaryData = Nothing) As ResourceHealthEventArticle" />
      <MemberSignature Language="F#" Value="static member ResourceHealthEventArticle : string * string * BinaryData -&gt; Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventArticle" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthEventArticle (articleContent, articleId, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventArticle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="articleContent" Type="System.String" />
        <Parameter Name="articleId" Type="System.String" />
        <Parameter Name="parameters" Type="System.BinaryData" />
      </Parameters>
      <Docs>
        <param name="articleContent"> Article content of event. </param>
        <param name="articleId"> Article Id. </param>
        <param name="parameters"> It provides a map of parameter name and value. </param>
        <summary> Initializes a new instance of ResourceHealthEventArticle. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventArticle" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceHealthEventData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.ResourceHealthEventData ResourceHealthEventData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventTypeValue? eventType = default, Azure.ResourceManager.ResourceHealth.Models.EventSubTypeValue? eventSubType = default, Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventSourceValue? eventSource = default, Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventStatusValue? status = default, string title = default, string summary = default, string header = default, Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventInsightLevelValue? level = default, Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLevelValue? eventLevel = default, string externalIncidentId = default, string reason = default, Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventArticle article = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLink&gt; links = default, DateTimeOffset? impactStartOn = default, DateTimeOffset? impactMitigationOn = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventImpact&gt; impact = default, Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventRecommendedActions recommendedActions = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventFaq&gt; faqs = default, bool? isHirEvent = default, bool? isMicrosoftSupportEnabled = default, string description = default, bool? isPlatformInitiated = default, bool? isChatWithUsEnabled = default, int? priority = default, DateTimeOffset? lastUpdateOn = default, string hirStage = default, string additionalInformationMessage = default, int? duration = default, string impactType = default, string maintenanceId = default, string maintenanceType = default, string argQuery = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.ResourceHealthEventData ResourceHealthEventData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventTypeValue&gt; eventType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ResourceHealth.Models.EventSubTypeValue&gt; eventSubType, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventSourceValue&gt; eventSource, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventStatusValue&gt; status, string title, string summary, string header, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventInsightLevelValue&gt; level, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLevelValue&gt; eventLevel, string externalIncidentId, string reason, class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventArticle article, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLink&gt; links, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; impactStartOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; impactMitigationOn, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventImpact&gt; impact, class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventRecommendedActions recommendedActions, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventFaq&gt; faqs, valuetype System.Nullable`1&lt;bool&gt; isHirEvent, valuetype System.Nullable`1&lt;bool&gt; isMicrosoftSupportEnabled, string description, valuetype System.Nullable`1&lt;bool&gt; isPlatformInitiated, valuetype System.Nullable`1&lt;bool&gt; isChatWithUsEnabled, valuetype System.Nullable`1&lt;int32&gt; priority, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastUpdateOn, string hirStage, string additionalInformationMessage, valuetype System.Nullable`1&lt;int32&gt; duration, string impactType, string maintenanceId, string maintenanceType, string argQuery) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthEventData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventTypeValue},System.Nullable{Azure.ResourceManager.ResourceHealth.Models.EventSubTypeValue},System.Nullable{Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventSourceValue},System.Nullable{Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventStatusValue},System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventInsightLevelValue},System.Nullable{Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLevelValue},System.String,System.String,Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventArticle,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLink},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventImpact},Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventRecommendedActions,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventFaq},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResourceHealthEventData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional eventType As Nullable(Of ResourceHealthEventTypeValue) = Nothing, Optional eventSubType As Nullable(Of EventSubTypeValue) = Nothing, Optional eventSource As Nullable(Of ResourceHealthEventSourceValue) = Nothing, Optional status As Nullable(Of ResourceHealthEventStatusValue) = Nothing, Optional title As String = Nothing, Optional summary As String = Nothing, Optional header As String = Nothing, Optional level As Nullable(Of ResourceHealthEventInsightLevelValue) = Nothing, Optional eventLevel As Nullable(Of ResourceHealthEventLevelValue) = Nothing, Optional externalIncidentId As String = Nothing, Optional reason As String = Nothing, Optional article As ResourceHealthEventArticle = Nothing, Optional links As IEnumerable(Of ResourceHealthEventLink) = Nothing, Optional impactStartOn As Nullable(Of DateTimeOffset) = Nothing, Optional impactMitigationOn As Nullable(Of DateTimeOffset) = Nothing, Optional impact As IEnumerable(Of ResourceHealthEventImpact) = Nothing, Optional recommendedActions As ResourceHealthEventRecommendedActions = Nothing, Optional faqs As IEnumerable(Of ResourceHealthEventFaq) = Nothing, Optional isHirEvent As Nullable(Of Boolean) = Nothing, Optional isMicrosoftSupportEnabled As Nullable(Of Boolean) = Nothing, Optional description As String = Nothing, Optional isPlatformInitiated As Nullable(Of Boolean) = Nothing, Optional isChatWithUsEnabled As Nullable(Of Boolean) = Nothing, Optional priority As Nullable(Of Integer) = Nothing, Optional lastUpdateOn As Nullable(Of DateTimeOffset) = Nothing, Optional hirStage As String = Nothing, Optional additionalInformationMessage As String = Nothing, Optional duration As Nullable(Of Integer) = Nothing, Optional impactType As String = Nothing, Optional maintenanceId As String = Nothing, Optional maintenanceType As String = Nothing, Optional argQuery As String = Nothing) As ResourceHealthEventData" />
      <MemberSignature Language="F#" Value="static member ResourceHealthEventData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventTypeValue&gt; * Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.EventSubTypeValue&gt; * Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventSourceValue&gt; * Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventStatusValue&gt; * string * string * string * Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventInsightLevelValue&gt; * Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLevelValue&gt; * string * string * Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventArticle * seq&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLink&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventImpact&gt; * Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventRecommendedActions * seq&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventFaq&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;DateTimeOffset&gt; * string * string * Nullable&lt;int&gt; * string * string * string * string -&gt; Azure.ResourceManager.ResourceHealth.ResourceHealthEventData" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthEventData (id, name, resourceType, systemData, eventType, eventSubType, eventSource, status, title, summary, header, level, eventLevel, externalIncidentId, reason, article, links, impactStartOn, impactMitigationOn, impact, recommendedActions, faqs, isHirEvent, isMicrosoftSupportEnabled, description, isPlatformInitiated, isChatWithUsEnabled, priority, lastUpdateOn, hirStage, additionalInformationMessage, duration, impactType, maintenanceId, maintenanceType, argQuery)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.ResourceHealthEventData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="eventType" Type="System.Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventTypeValue&gt;" />
        <Parameter Name="eventSubType" Type="System.Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.EventSubTypeValue&gt;" />
        <Parameter Name="eventSource" Type="System.Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventSourceValue&gt;" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventStatusValue&gt;" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="summary" Type="System.String" />
        <Parameter Name="header" Type="System.String" />
        <Parameter Name="level" Type="System.Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventInsightLevelValue&gt;" />
        <Parameter Name="eventLevel" Type="System.Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLevelValue&gt;" />
        <Parameter Name="externalIncidentId" Type="System.String" />
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="article" Type="Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventArticle" />
        <Parameter Name="links" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLink&gt;" />
        <Parameter Name="impactStartOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="impactMitigationOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="impact" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventImpact&gt;" />
        <Parameter Name="recommendedActions" Type="Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventRecommendedActions" />
        <Parameter Name="faqs" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventFaq&gt;" />
        <Parameter Name="isHirEvent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isMicrosoftSupportEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="isPlatformInitiated" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="isChatWithUsEnabled" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="priority" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="lastUpdateOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="hirStage" Type="System.String" />
        <Parameter Name="additionalInformationMessage" Type="System.String" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="impactType" Type="System.String" />
        <Parameter Name="maintenanceId" Type="System.String" />
        <Parameter Name="maintenanceType" Type="System.String" />
        <Parameter Name="argQuery" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="eventType"> Type of event. </param>
        <param name="eventSubType"> Sub type of the event. Currently used to determine retirement communications for health advisory events. </param>
        <param name="eventSource"> Source of event. </param>
        <param name="status"> Current status of event. </param>
        <param name="title"> Title text of event. </param>
        <param name="summary"> Summary text of event. </param>
        <param name="header"> Header text of event. </param>
        <param name="level"> Level of insight. </param>
        <param name="eventLevel"> Level of event. </param>
        <param name="externalIncidentId"> The id of the Incident. </param>
        <param name="reason"> The reason for the Incident. </param>
        <param name="article"> Article of event. </param>
        <param name="links"> Useful links of event. </param>
        <param name="impactStartOn"> It provides the Timestamp for when the health impacting event started. </param>
        <param name="impactMitigationOn"> It provides the Timestamp for when the health impacting event resolved. </param>
        <param name="impact"> List services impacted by the service health event. </param>
        <param name="recommendedActions"> Recommended actions of event. </param>
        <param name="faqs"> Frequently asked questions for the service health event. </param>
        <param name="isHirEvent"> It provides information if the event is High incident rate event or not. </param>
        <param name="isMicrosoftSupportEnabled"> Tells if we want to enable or disable Microsoft Support for this event. </param>
        <param name="description"> Contains the communication message for the event, that could include summary, root cause and other details. </param>
        <param name="isPlatformInitiated"> Is true if the event is platform initiated. </param>
        <param name="isChatWithUsEnabled"> Tells if we want to enable or disable Microsoft Support for this event. </param>
        <param name="priority"> Priority level of the event. Has value from 0 to 23. 0 is the highest priority. Service issue events have higher priority followed by planned maintenance and health advisory. Critical events have higher priority followed by error, warning and informational. Furthermore, active events have higher priority than resolved. </param>
        <param name="lastUpdateOn"> It provides the Timestamp for when the health impacting event was last updated. </param>
        <param name="hirStage"> Stage for HIR Document. </param>
        <param name="additionalInformationMessage"> Additional information. </param>
        <param name="duration"> duration in seconds. </param>
        <param name="impactType"> The type of the impact. </param>
        <param name="maintenanceId"> Unique identifier for planned maintenance event. </param>
        <param name="maintenanceType"> The type of planned maintenance event. </param>
        <param name="argQuery"> Azure Resource Graph query to fetch the affected resources from their existing Azure Resource Graph locations. </param>
        <summary> Initializes a new instance of ResourceHealthEventData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.ResourceHealthEventData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceHealthEventFaq">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventFaq ResourceHealthEventFaq (string question = default, string answer = default, string localeCode = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventFaq ResourceHealthEventFaq(string question, string answer, string localeCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthEventFaq(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResourceHealthEventFaq (Optional question As String = Nothing, Optional answer As String = Nothing, Optional localeCode As String = Nothing) As ResourceHealthEventFaq" />
      <MemberSignature Language="F#" Value="static member ResourceHealthEventFaq : string * string * string -&gt; Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventFaq" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthEventFaq (question, answer, localeCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventFaq</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="question" Type="System.String" />
        <Parameter Name="answer" Type="System.String" />
        <Parameter Name="localeCode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="question"> FAQ question for the service health event. </param>
        <param name="answer"> FAQ answer for the service health event. </param>
        <param name="localeCode"> FAQ locale for the service health event. </param>
        <summary> Initializes a new instance of ResourceHealthEventFaq. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventFaq" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceHealthEventImpact">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventImpact ResourceHealthEventImpact (string impactedService = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventImpactedServiceRegion&gt; impactedRegions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventImpact ResourceHealthEventImpact(string impactedService, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventImpactedServiceRegion&gt; impactedRegions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthEventImpact(System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventImpactedServiceRegion})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResourceHealthEventImpact (Optional impactedService As String = Nothing, Optional impactedRegions As IEnumerable(Of ResourceHealthEventImpactedServiceRegion) = Nothing) As ResourceHealthEventImpact" />
      <MemberSignature Language="F#" Value="static member ResourceHealthEventImpact : string * seq&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventImpactedServiceRegion&gt; -&gt; Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventImpact" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthEventImpact (impactedService, impactedRegions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventImpact</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="impactedService" Type="System.String" />
        <Parameter Name="impactedRegions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventImpactedServiceRegion&gt;" />
      </Parameters>
      <Docs>
        <param name="impactedService"> Impacted service name. </param>
        <param name="impactedRegions"> List regions impacted by the service health event. </param>
        <summary> Initializes a new instance of ResourceHealthEventImpact. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventImpact" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceHealthEventImpactedResourceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.ResourceHealthEventImpactedResourceData ResourceHealthEventImpactedResourceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.Core.ResourceType? targetResourceType = default, Azure.Core.ResourceIdentifier targetResourceId = default, string targetRegion = default, string resourceName = default, string resourceGroup = default, string status = default, string maintenanceStartTime = default, string maintenanceEndTime = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthKeyValueItem&gt; info = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.ResourceHealthEventImpactedResourceData ResourceHealthEventImpactedResourceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype Azure.Core.ResourceType&gt; targetResourceType, class Azure.Core.ResourceIdentifier targetResourceId, string targetRegion, string resourceName, string resourceGroup, string status, string maintenanceStartTime, string maintenanceEndTime, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthKeyValueItem&gt; info) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthEventImpactedResourceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{Azure.Core.ResourceType},Azure.Core.ResourceIdentifier,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ResourceHealth.Models.ResourceHealthKeyValueItem})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResourceHealthEventImpactedResourceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional targetResourceType As Nullable(Of ResourceType) = Nothing, Optional targetResourceId As ResourceIdentifier = Nothing, Optional targetRegion As String = Nothing, Optional resourceName As String = Nothing, Optional resourceGroup As String = Nothing, Optional status As String = Nothing, Optional maintenanceStartTime As String = Nothing, Optional maintenanceEndTime As String = Nothing, Optional info As IEnumerable(Of ResourceHealthKeyValueItem) = Nothing) As ResourceHealthEventImpactedResourceData" />
      <MemberSignature Language="F#" Value="static member ResourceHealthEventImpactedResourceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;Azure.Core.ResourceType&gt; * Azure.Core.ResourceIdentifier * string * string * string * string * string * string * seq&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthKeyValueItem&gt; -&gt; Azure.ResourceManager.ResourceHealth.ResourceHealthEventImpactedResourceData" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthEventImpactedResourceData (id, name, resourceType, systemData, targetResourceType, targetResourceId, targetRegion, resourceName, resourceGroup, status, maintenanceStartTime, maintenanceEndTime, info)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.ResourceHealthEventImpactedResourceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="targetResourceType" Type="System.Nullable&lt;Azure.Core.ResourceType&gt;" />
        <Parameter Name="targetResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="targetRegion" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="resourceGroup" Type="System.String" />
        <Parameter Name="status" Type="System.String" />
        <Parameter Name="maintenanceStartTime" Type="System.String" />
        <Parameter Name="maintenanceEndTime" Type="System.String" />
        <Parameter Name="info" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthKeyValueItem&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="targetResourceType"> Resource type within Microsoft cloud. </param>
        <param name="targetResourceId"> Identity for resource within Microsoft cloud. </param>
        <param name="targetRegion"> Impacted resource region name. </param>
        <param name="resourceName"> Resource name of the impacted resource. </param>
        <param name="resourceGroup"> Resource group name of the impacted resource. </param>
        <param name="status"> Status of the impacted resource. </param>
        <param name="maintenanceStartTime"> Start time of maintenance for the impacted resource. </param>
        <param name="maintenanceEndTime"> End time of maintenance for the impacted resource. </param>
        <param name="info"> Additional information. </param>
        <summary> Initializes a new instance of ResourceHealthEventImpactedResourceData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.ResourceHealthEventImpactedResourceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceHealthEventImpactedServiceRegion">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventImpactedServiceRegion ResourceHealthEventImpactedServiceRegion (string impactedRegion = default, Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventStatusValue? status = default, System.Collections.Generic.IEnumerable&lt;string&gt; impactedSubscriptions = default, System.Collections.Generic.IEnumerable&lt;string&gt; impactedTenants = default, DateTimeOffset? lastUpdateOn = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventUpdate&gt; updates = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventImpactedServiceRegion ResourceHealthEventImpactedServiceRegion(string impactedRegion, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventStatusValue&gt; status, class System.Collections.Generic.IEnumerable`1&lt;string&gt; impactedSubscriptions, class System.Collections.Generic.IEnumerable`1&lt;string&gt; impactedTenants, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastUpdateOn, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventUpdate&gt; updates) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthEventImpactedServiceRegion(System.String,System.Nullable{Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventStatusValue},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventUpdate})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResourceHealthEventImpactedServiceRegion (Optional impactedRegion As String = Nothing, Optional status As Nullable(Of ResourceHealthEventStatusValue) = Nothing, Optional impactedSubscriptions As IEnumerable(Of String) = Nothing, Optional impactedTenants As IEnumerable(Of String) = Nothing, Optional lastUpdateOn As Nullable(Of DateTimeOffset) = Nothing, Optional updates As IEnumerable(Of ResourceHealthEventUpdate) = Nothing) As ResourceHealthEventImpactedServiceRegion" />
      <MemberSignature Language="F#" Value="static member ResourceHealthEventImpactedServiceRegion : string * Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventStatusValue&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventUpdate&gt; -&gt; Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventImpactedServiceRegion" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthEventImpactedServiceRegion (impactedRegion, status, impactedSubscriptions, impactedTenants, lastUpdateOn, updates)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventImpactedServiceRegion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="impactedRegion" Type="System.String" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventStatusValue&gt;" />
        <Parameter Name="impactedSubscriptions" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="impactedTenants" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="lastUpdateOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="updates" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventUpdate&gt;" />
      </Parameters>
      <Docs>
        <param name="impactedRegion"> Impacted region name. </param>
        <param name="status"> Current status of event in the region. </param>
        <param name="impactedSubscriptions"> List subscription impacted by the service health event. </param>
        <param name="impactedTenants"> List tenant impacted by the service health event. </param>
        <param name="lastUpdateOn"> It provides the Timestamp for when the last update for the service health event. </param>
        <param name="updates"> List of updates for given service health event. </param>
        <summary> Initializes a new instance of ResourceHealthEventImpactedServiceRegion. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventImpactedServiceRegion" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceHealthEventLink">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLink ResourceHealthEventLink (Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLinkTypeValue? linkType = default, Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLinkDisplayText displayText = default, string extensionName = default, string bladeName = default, BinaryData parameters = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLink ResourceHealthEventLink(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLinkTypeValue&gt; linkType, class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLinkDisplayText displayText, string extensionName, string bladeName, class System.BinaryData parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthEventLink(System.Nullable{Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLinkTypeValue},Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLinkDisplayText,System.String,System.String,System.BinaryData)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResourceHealthEventLink (Optional linkType As Nullable(Of ResourceHealthEventLinkTypeValue) = Nothing, Optional displayText As ResourceHealthEventLinkDisplayText = Nothing, Optional extensionName As String = Nothing, Optional bladeName As String = Nothing, Optional parameters As BinaryData = Nothing) As ResourceHealthEventLink" />
      <MemberSignature Language="F#" Value="static member ResourceHealthEventLink : Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLinkTypeValue&gt; * Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLinkDisplayText * string * string * BinaryData -&gt; Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLink" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthEventLink (linkType, displayText, extensionName, bladeName, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkType" Type="System.Nullable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLinkTypeValue&gt;" />
        <Parameter Name="displayText" Type="Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLinkDisplayText" />
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="bladeName" Type="System.String" />
        <Parameter Name="parameters" Type="System.BinaryData" />
      </Parameters>
      <Docs>
        <param name="linkType"> Type of link. </param>
        <param name="displayText"> Display text of link. </param>
        <param name="extensionName"> It provides the name of portal extension to produce link for given service health event. </param>
        <param name="bladeName"> It provides the name of portal extension blade to produce link for given service health event. </param>
        <param name="parameters"> It provides a map of parameter name and value for portal extension blade to produce lik for given service health event. </param>
        <summary> Initializes a new instance of ResourceHealthEventLink. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLink" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceHealthEventLinkDisplayText">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLinkDisplayText ResourceHealthEventLinkDisplayText (string value = default, string localizedValue = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLinkDisplayText ResourceHealthEventLinkDisplayText(string value, string localizedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthEventLinkDisplayText(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResourceHealthEventLinkDisplayText (Optional value As String = Nothing, Optional localizedValue As String = Nothing) As ResourceHealthEventLinkDisplayText" />
      <MemberSignature Language="F#" Value="static member ResourceHealthEventLinkDisplayText : string * string -&gt; Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLinkDisplayText" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthEventLinkDisplayText (value, localizedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLinkDisplayText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="localizedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"> Display text of link. </param>
        <param name="localizedValue"> Localized display text of link. </param>
        <summary> Initializes a new instance of ResourceHealthEventLinkDisplayText. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventLinkDisplayText" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceHealthEventRecommendedActions">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventRecommendedActions ResourceHealthEventRecommendedActions (string message = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventRecommendedActionsItem&gt; actions = default, string localeCode = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventRecommendedActions ResourceHealthEventRecommendedActions(string message, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventRecommendedActionsItem&gt; actions, string localeCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthEventRecommendedActions(System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventRecommendedActionsItem},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResourceHealthEventRecommendedActions (Optional message As String = Nothing, Optional actions As IEnumerable(Of ResourceHealthEventRecommendedActionsItem) = Nothing, Optional localeCode As String = Nothing) As ResourceHealthEventRecommendedActions" />
      <MemberSignature Language="F#" Value="static member ResourceHealthEventRecommendedActions : string * seq&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventRecommendedActionsItem&gt; * string -&gt; Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventRecommendedActions" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthEventRecommendedActions (message, actions, localeCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventRecommendedActions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="actions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventRecommendedActionsItem&gt;" />
        <Parameter Name="localeCode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"> Recommended action title for the service health event. </param>
        <param name="actions"> Recommended actions for the service health event. </param>
        <param name="localeCode"> Recommended action locale for the service health event. </param>
        <summary> Initializes a new instance of ResourceHealthEventRecommendedActions. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventRecommendedActions" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceHealthEventRecommendedActionsItem">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventRecommendedActionsItem ResourceHealthEventRecommendedActionsItem (int? groupId = default, string actionText = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventRecommendedActionsItem ResourceHealthEventRecommendedActionsItem(valuetype System.Nullable`1&lt;int32&gt; groupId, string actionText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthEventRecommendedActionsItem(System.Nullable{System.Int32},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResourceHealthEventRecommendedActionsItem (Optional groupId As Nullable(Of Integer) = Nothing, Optional actionText As String = Nothing) As ResourceHealthEventRecommendedActionsItem" />
      <MemberSignature Language="F#" Value="static member ResourceHealthEventRecommendedActionsItem : Nullable&lt;int&gt; * string -&gt; Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventRecommendedActionsItem" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthEventRecommendedActionsItem (groupId, actionText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventRecommendedActionsItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="actionText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupId"> Recommended action group Id for the service health event. </param>
        <param name="actionText"> Recommended action text. </param>
        <summary> Initializes a new instance of ResourceHealthEventRecommendedActionsItem. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventRecommendedActionsItem" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceHealthEventUpdate">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventUpdate ResourceHealthEventUpdate (string summary = default, DateTimeOffset? updatedOn = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventUpdate ResourceHealthEventUpdate(string summary, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; updatedOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthEventUpdate(System.String,System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResourceHealthEventUpdate (Optional summary As String = Nothing, Optional updatedOn As Nullable(Of DateTimeOffset) = Nothing) As ResourceHealthEventUpdate" />
      <MemberSignature Language="F#" Value="static member ResourceHealthEventUpdate : string * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventUpdate" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthEventUpdate (summary, updatedOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventUpdate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="summary" Type="System.String" />
        <Parameter Name="updatedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="summary"> Summary text for the given update for the service health event. </param>
        <param name="updatedOn"> It provides the Timestamp for the given update for the service health event. </param>
        <summary> Initializes a new instance of ResourceHealthEventUpdate. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.Models.ResourceHealthEventUpdate" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceHealthKeyValueItem">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.Models.ResourceHealthKeyValueItem ResourceHealthKeyValueItem (string key = default, string value = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthKeyValueItem ResourceHealthKeyValueItem(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthKeyValueItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResourceHealthKeyValueItem (Optional key As String = Nothing, Optional value As String = Nothing) As ResourceHealthKeyValueItem" />
      <MemberSignature Language="F#" Value="static member ResourceHealthKeyValueItem : string * string -&gt; Azure.ResourceManager.ResourceHealth.Models.ResourceHealthKeyValueItem" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthKeyValueItem (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.Models.ResourceHealthKeyValueItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"> Key of tuple. </param>
        <param name="value"> Value of tuple. </param>
        <summary> Initializes a new instance of ResourceHealthKeyValueItem. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.Models.ResourceHealthKeyValueItem" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceHealthMetadataEntityData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityData ResourceHealthMetadataEntityData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string displayName = default, System.Collections.Generic.IEnumerable&lt;string&gt; dependsOn = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.MetadataEntityScenario&gt; applicableScenarios = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.MetadataSupportedValueDetail&gt; supportedValues = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityData ResourceHealthMetadataEntityData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string displayName, class System.Collections.Generic.IEnumerable`1&lt;string&gt; dependsOn, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.ResourceHealth.Models.MetadataEntityScenario&gt; applicableScenarios, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.MetadataSupportedValueDetail&gt; supportedValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthMetadataEntityData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ResourceHealth.Models.MetadataEntityScenario},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ResourceHealth.Models.MetadataSupportedValueDetail})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResourceHealthMetadataEntityData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional displayName As String = Nothing, Optional dependsOn As IEnumerable(Of String) = Nothing, Optional applicableScenarios As IEnumerable(Of MetadataEntityScenario) = Nothing, Optional supportedValues As IEnumerable(Of MetadataSupportedValueDetail) = Nothing) As ResourceHealthMetadataEntityData" />
      <MemberSignature Language="F#" Value="static member ResourceHealthMetadataEntityData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * seq&lt;string&gt; * seq&lt;Azure.ResourceManager.ResourceHealth.Models.MetadataEntityScenario&gt; * seq&lt;Azure.ResourceManager.ResourceHealth.Models.MetadataSupportedValueDetail&gt; -&gt; Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityData" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthMetadataEntityData (id, name, resourceType, systemData, displayName, dependsOn, applicableScenarios, supportedValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="dependsOn" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="applicableScenarios" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.MetadataEntityScenario&gt;" />
        <Parameter Name="supportedValues" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.MetadataSupportedValueDetail&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="displayName"> The display name. </param>
        <param name="dependsOn"> The list of keys on which this entity depends on. </param>
        <param name="applicableScenarios"> The list of scenarios applicable to this metadata entity. </param>
        <param name="supportedValues"> The list of supported values. </param>
        <summary> Initializes a new instance of ResourceHealthMetadataEntityData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.ResourceHealthMetadataEntityData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceHealthRecommendedAction">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.Models.ResourceHealthRecommendedAction ResourceHealthRecommendedAction (string action = default, Uri actionUri = default, string actionUriComment = default, string actionUriText = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.Models.ResourceHealthRecommendedAction ResourceHealthRecommendedAction(string action, class System.Uri actionUri, string actionUriComment, string actionUriText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthRecommendedAction(System.String,System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResourceHealthRecommendedAction (Optional action As String = Nothing, Optional actionUri As Uri = Nothing, Optional actionUriComment As String = Nothing, Optional actionUriText As String = Nothing) As ResourceHealthRecommendedAction" />
      <MemberSignature Language="F#" Value="static member ResourceHealthRecommendedAction : string * Uri * string * string -&gt; Azure.ResourceManager.ResourceHealth.Models.ResourceHealthRecommendedAction" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ResourceHealthRecommendedAction (action, actionUri, actionUriComment, actionUriText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.Models.ResourceHealthRecommendedAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="actionUri" Type="System.Uri" />
        <Parameter Name="actionUriComment" Type="System.String" />
        <Parameter Name="actionUriText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action"> Recommended action. </param>
        <param name="actionUri"> Link to the action. </param>
        <param name="actionUriComment"> the comment for the Action. </param>
        <param name="actionUriText"> Substring of action, it describes which text should host the action URL. </param>
        <summary> Initializes a new instance of ResourceHealthRecommendedAction. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.Models.ResourceHealthRecommendedAction" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceEmergingIssueData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueData ServiceEmergingIssueData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, DateTimeOffset? refreshedOn = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.EmergingIssueBannerType&gt; statusBanners = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.EmergingIssueActiveEventType&gt; statusActiveEvents = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueData ServiceEmergingIssueData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; refreshedOn, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.EmergingIssueBannerType&gt; statusBanners, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.ResourceHealth.Models.EmergingIssueActiveEventType&gt; statusActiveEvents) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ServiceEmergingIssueData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ResourceHealth.Models.EmergingIssueBannerType},System.Collections.Generic.IEnumerable{Azure.ResourceManager.ResourceHealth.Models.EmergingIssueActiveEventType})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ServiceEmergingIssueData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional refreshedOn As Nullable(Of DateTimeOffset) = Nothing, Optional statusBanners As IEnumerable(Of EmergingIssueBannerType) = Nothing, Optional statusActiveEvents As IEnumerable(Of EmergingIssueActiveEventType) = Nothing) As ServiceEmergingIssueData" />
      <MemberSignature Language="F#" Value="static member ServiceEmergingIssueData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Nullable&lt;DateTimeOffset&gt; * seq&lt;Azure.ResourceManager.ResourceHealth.Models.EmergingIssueBannerType&gt; * seq&lt;Azure.ResourceManager.ResourceHealth.Models.EmergingIssueActiveEventType&gt; -&gt; Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueData" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ServiceEmergingIssueData (id, name, resourceType, systemData, refreshedOn, statusBanners, statusActiveEvents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="refreshedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="statusBanners" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.EmergingIssueBannerType&gt;" />
        <Parameter Name="statusActiveEvents" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.ResourceHealth.Models.EmergingIssueActiveEventType&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="refreshedOn"> Timestamp for when last time refreshed for ongoing emerging issue. </param>
        <param name="statusBanners"> The list of emerging issues of banner type. </param>
        <param name="statusActiveEvents"> The list of emerging issues of active event type. </param>
        <summary> Initializes a new instance of ServiceEmergingIssueData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.ServiceEmergingIssueData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceImpactingEvent">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.Models.ServiceImpactingEvent ServiceImpactingEvent (DateTimeOffset? eventStartOn = default, DateTimeOffset? eventStatusLastModifiedOn = default, string correlationId = default, string statusValue = default, Azure.ResourceManager.ResourceHealth.Models.ServiceImpactingEventIncidentProperties incidentProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.Models.ServiceImpactingEvent ServiceImpactingEvent(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; eventStartOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; eventStatusLastModifiedOn, string correlationId, string statusValue, class Azure.ResourceManager.ResourceHealth.Models.ServiceImpactingEventIncidentProperties incidentProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ServiceImpactingEvent(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,Azure.ResourceManager.ResourceHealth.Models.ServiceImpactingEventIncidentProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ServiceImpactingEvent (Optional eventStartOn As Nullable(Of DateTimeOffset) = Nothing, Optional eventStatusLastModifiedOn As Nullable(Of DateTimeOffset) = Nothing, Optional correlationId As String = Nothing, Optional statusValue As String = Nothing, Optional incidentProperties As ServiceImpactingEventIncidentProperties = Nothing) As ServiceImpactingEvent" />
      <MemberSignature Language="F#" Value="static member ServiceImpactingEvent : Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * string * string * Azure.ResourceManager.ResourceHealth.Models.ServiceImpactingEventIncidentProperties -&gt; Azure.ResourceManager.ResourceHealth.Models.ServiceImpactingEvent" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ServiceImpactingEvent (eventStartOn, eventStatusLastModifiedOn, correlationId, statusValue, incidentProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.Models.ServiceImpactingEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventStartOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="eventStatusLastModifiedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="statusValue" Type="System.String" />
        <Parameter Name="incidentProperties" Type="Azure.ResourceManager.ResourceHealth.Models.ServiceImpactingEventIncidentProperties" />
      </Parameters>
      <Docs>
        <param name="eventStartOn"> Timestamp for when the event started. </param>
        <param name="eventStatusLastModifiedOn"> Timestamp for when event was submitted/detected. </param>
        <param name="correlationId"> Correlation id for the event. </param>
        <param name="statusValue"> Status of the service impacting event. </param>
        <param name="incidentProperties"> Properties of the service impacting event. </param>
        <summary> Initializes a new instance of ServiceImpactingEvent. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.Models.ServiceImpactingEvent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceImpactingEventIncidentProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.Models.ServiceImpactingEventIncidentProperties ServiceImpactingEventIncidentProperties (string title = default, string service = default, string region = default, string incidentType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.Models.ServiceImpactingEventIncidentProperties ServiceImpactingEventIncidentProperties(string title, string service, string region, string incidentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ServiceImpactingEventIncidentProperties(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ServiceImpactingEventIncidentProperties (Optional title As String = Nothing, Optional service As String = Nothing, Optional region As String = Nothing, Optional incidentType As String = Nothing) As ServiceImpactingEventIncidentProperties" />
      <MemberSignature Language="F#" Value="static member ServiceImpactingEventIncidentProperties : string * string * string * string -&gt; Azure.ResourceManager.ResourceHealth.Models.ServiceImpactingEventIncidentProperties" Usage="Azure.ResourceManager.ResourceHealth.Models.ArmResourceHealthModelFactory.ServiceImpactingEventIncidentProperties (title, service, region, incidentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.Models.ServiceImpactingEventIncidentProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="service" Type="System.String" />
        <Parameter Name="region" Type="System.String" />
        <Parameter Name="incidentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="title"> Title of the incident. </param>
        <param name="service"> Service impacted by the event. </param>
        <param name="region"> Region impacted by the event. </param>
        <param name="incidentType"> Type of Event. </param>
        <summary> Initializes a new instance of ServiceImpactingEventIncidentProperties. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.ResourceHealth.Models.ServiceImpactingEventIncidentProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
