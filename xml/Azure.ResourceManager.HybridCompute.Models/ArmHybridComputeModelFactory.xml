<Type Name="ArmHybridComputeModelFactory" FullName="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory">
  <TypeSignature Language="C#" Value="public static class ArmHybridComputeModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ArmHybridComputeModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ArmHybridComputeModelFactory" />
  <TypeSignature Language="F#" Value="type ArmHybridComputeModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AgentConfiguration">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.AgentConfiguration AgentConfiguration (Uri proxyUri = default, System.Collections.Generic.IEnumerable&lt;string&gt; incomingConnectionsPorts = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.ConfigurationExtension&gt; extensionsAllowList = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.ConfigurationExtension&gt; extensionsBlockList = default, System.Collections.Generic.IEnumerable&lt;string&gt; proxyBypass = default, string extensionsEnabled = default, string guestConfigurationEnabled = default, Azure.ResourceManager.HybridCompute.Models.AgentConfigurationMode? configMode = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.AgentConfiguration AgentConfiguration(class System.Uri proxyUri, class System.Collections.Generic.IEnumerable`1&lt;string&gt; incomingConnectionsPorts, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.ConfigurationExtension&gt; extensionsAllowList, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.ConfigurationExtension&gt; extensionsBlockList, class System.Collections.Generic.IEnumerable`1&lt;string&gt; proxyBypass, string extensionsEnabled, string guestConfigurationEnabled, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.AgentConfigurationMode&gt; configMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.AgentConfiguration(System.Uri,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.ConfigurationExtension},System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.ConfigurationExtension},System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Nullable{Azure.ResourceManager.HybridCompute.Models.AgentConfigurationMode})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AgentConfiguration (Optional proxyUri As Uri = Nothing, Optional incomingConnectionsPorts As IEnumerable(Of String) = Nothing, Optional extensionsAllowList As IEnumerable(Of ConfigurationExtension) = Nothing, Optional extensionsBlockList As IEnumerable(Of ConfigurationExtension) = Nothing, Optional proxyBypass As IEnumerable(Of String) = Nothing, Optional extensionsEnabled As String = Nothing, Optional guestConfigurationEnabled As String = Nothing, Optional configMode As Nullable(Of AgentConfigurationMode) = Nothing) As AgentConfiguration" />
      <MemberSignature Language="F#" Value="static member AgentConfiguration : Uri * seq&lt;string&gt; * seq&lt;Azure.ResourceManager.HybridCompute.Models.ConfigurationExtension&gt; * seq&lt;Azure.ResourceManager.HybridCompute.Models.ConfigurationExtension&gt; * seq&lt;string&gt; * string * string * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.AgentConfigurationMode&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.AgentConfiguration" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.AgentConfiguration (proxyUri, incomingConnectionsPorts, extensionsAllowList, extensionsBlockList, proxyBypass, extensionsEnabled, guestConfigurationEnabled, configMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.AgentConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proxyUri" Type="System.Uri" />
        <Parameter Name="incomingConnectionsPorts" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="extensionsAllowList" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.ConfigurationExtension&gt;" />
        <Parameter Name="extensionsBlockList" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.ConfigurationExtension&gt;" />
        <Parameter Name="proxyBypass" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="extensionsEnabled" Type="System.String" />
        <Parameter Name="guestConfigurationEnabled" Type="System.String" />
        <Parameter Name="configMode" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.AgentConfigurationMode&gt;" />
      </Parameters>
      <Docs>
        <param name="proxyUri"> Specifies the URL of the proxy to be used. </param>
        <param name="incomingConnectionsPorts"> Specifies the list of ports that the agent will be able to listen on. </param>
        <param name="extensionsAllowList"> Array of extensions that are allowed to be installed or updated. </param>
        <param name="extensionsBlockList"> Array of extensions that are blocked (cannot be installed or updated). </param>
        <param name="proxyBypass"> List of service names which should not use the specified proxy server. </param>
        <param name="extensionsEnabled"> Specifies whether the extension service is enabled or disabled. </param>
        <param name="guestConfigurationEnabled"> Specified whether the guest configuration service is enabled or disabled. </param>
        <param name="configMode"> Name of configuration mode to use. Modes are pre-defined configurations of security controls, extension allowlists and guest configuration, maintained by Microsoft. </param>
        <summary> Initializes a new instance of AgentConfiguration. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.AgentConfiguration" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AgentUpgrade">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.AgentUpgrade AgentUpgrade (string desiredVersion = default, Guid? correlationId = default, bool? enableAutomaticUpgrade = default, DateTimeOffset? lastAttemptTimestamp = default, Azure.ResourceManager.HybridCompute.Models.LastAttemptStatusEnum? lastAttemptStatus = default, string lastAttemptMessage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.AgentUpgrade AgentUpgrade(string desiredVersion, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; correlationId, valuetype System.Nullable`1&lt;bool&gt; enableAutomaticUpgrade, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastAttemptTimestamp, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.LastAttemptStatusEnum&gt; lastAttemptStatus, string lastAttemptMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.AgentUpgrade(System.String,System.Nullable{System.Guid},System.Nullable{System.Boolean},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.HybridCompute.Models.LastAttemptStatusEnum},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AgentUpgrade (Optional desiredVersion As String = Nothing, Optional correlationId As Nullable(Of Guid) = Nothing, Optional enableAutomaticUpgrade As Nullable(Of Boolean) = Nothing, Optional lastAttemptTimestamp As Nullable(Of DateTimeOffset) = Nothing, Optional lastAttemptStatus As Nullable(Of LastAttemptStatusEnum) = Nothing, Optional lastAttemptMessage As String = Nothing) As AgentUpgrade" />
      <MemberSignature Language="F#" Value="static member AgentUpgrade : string * Nullable&lt;Guid&gt; * Nullable&lt;bool&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.LastAttemptStatusEnum&gt; * string -&gt; Azure.ResourceManager.HybridCompute.Models.AgentUpgrade" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.AgentUpgrade (desiredVersion, correlationId, enableAutomaticUpgrade, lastAttemptTimestamp, lastAttemptStatus, lastAttemptMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.AgentUpgrade</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desiredVersion" Type="System.String" />
        <Parameter Name="correlationId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="enableAutomaticUpgrade" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="lastAttemptTimestamp" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="lastAttemptStatus" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.LastAttemptStatusEnum&gt;" />
        <Parameter Name="lastAttemptMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="desiredVersion"> Specifies the version info w.r.t AgentUpgrade for the machine. </param>
        <param name="correlationId"> The correlation ID passed in from RSM per upgrade. </param>
        <param name="enableAutomaticUpgrade"> Specifies if RSM should try to upgrade this machine. </param>
        <param name="lastAttemptTimestamp"> Timestamp of last upgrade attempt. </param>
        <param name="lastAttemptStatus"> Specifies the status of Agent Upgrade. </param>
        <param name="lastAttemptMessage"> Failure message of last upgrade attempt if any. </param>
        <summary> Initializes a new instance of AgentUpgrade. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.AgentUpgrade" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailablePatchCountByClassification">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.AvailablePatchCountByClassification AvailablePatchCountByClassification (int? security = default, int? critical = default, int? definition = default, int? updateRollup = default, int? featurePack = default, int? servicePack = default, int? tools = default, int? updates = default, int? other = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.AvailablePatchCountByClassification AvailablePatchCountByClassification(valuetype System.Nullable`1&lt;int32&gt; security, valuetype System.Nullable`1&lt;int32&gt; critical, valuetype System.Nullable`1&lt;int32&gt; definition, valuetype System.Nullable`1&lt;int32&gt; updateRollup, valuetype System.Nullable`1&lt;int32&gt; featurePack, valuetype System.Nullable`1&lt;int32&gt; servicePack, valuetype System.Nullable`1&lt;int32&gt; tools, valuetype System.Nullable`1&lt;int32&gt; updates, valuetype System.Nullable`1&lt;int32&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.AvailablePatchCountByClassification(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AvailablePatchCountByClassification (Optional security As Nullable(Of Integer) = Nothing, Optional critical As Nullable(Of Integer) = Nothing, Optional definition As Nullable(Of Integer) = Nothing, Optional updateRollup As Nullable(Of Integer) = Nothing, Optional featurePack As Nullable(Of Integer) = Nothing, Optional servicePack As Nullable(Of Integer) = Nothing, Optional tools As Nullable(Of Integer) = Nothing, Optional updates As Nullable(Of Integer) = Nothing, Optional other As Nullable(Of Integer) = Nothing) As AvailablePatchCountByClassification" />
      <MemberSignature Language="F#" Value="static member AvailablePatchCountByClassification : Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.AvailablePatchCountByClassification" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.AvailablePatchCountByClassification (security, critical, definition, updateRollup, featurePack, servicePack, tools, updates, other)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.AvailablePatchCountByClassification</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="security" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="critical" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="definition" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="updateRollup" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="featurePack" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="servicePack" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="tools" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="updates" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="other" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="security"> Number of security patches available for installation. </param>
        <param name="critical"> Number of critical patches available for installation. </param>
        <param name="definition"> Number of definition patches available for installation. </param>
        <param name="updateRollup"> Number of update Rollup patches available for installation. </param>
        <param name="featurePack"> Number of feature pack patches available for installation. </param>
        <param name="servicePack"> Number of service pack patches available for installation. </param>
        <param name="tools"> Number of tools patches available for installation. </param>
        <param name="updates"> Number of updates category patches available for installation. </param>
        <param name="other"> Number of other patches available for installation. </param>
        <summary> Initializes a new instance of AvailablePatchCountByClassification. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.AvailablePatchCountByClassification" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigurationExtension">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.ConfigurationExtension ConfigurationExtension (string publisher = default, string configurationExtensionType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.ConfigurationExtension ConfigurationExtension(string publisher, string configurationExtensionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.ConfigurationExtension(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConfigurationExtension (Optional publisher As String = Nothing, Optional configurationExtensionType As String = Nothing) As ConfigurationExtension" />
      <MemberSignature Language="F#" Value="static member ConfigurationExtension : string * string -&gt; Azure.ResourceManager.HybridCompute.Models.ConfigurationExtension" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.ConfigurationExtension (publisher, configurationExtensionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.ConfigurationExtension</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publisher" Type="System.String" />
        <Parameter Name="configurationExtensionType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="publisher"> Publisher of the extension. </param>
        <param name="configurationExtensionType"> Type of the extension. </param>
        <summary> Initializes a new instance of ConfigurationExtension. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.ConfigurationExtension" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionDetail">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.ConnectionDetail ConnectionDetail (string id = default, string privateIPAddress = default, string linkIdentifier = default, string groupId = default, string memberName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.ConnectionDetail ConnectionDetail(string id, string privateIPAddress, string linkIdentifier, string groupId, string memberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.ConnectionDetail(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConnectionDetail (Optional id As String = Nothing, Optional privateIPAddress As String = Nothing, Optional linkIdentifier As String = Nothing, Optional groupId As String = Nothing, Optional memberName As String = Nothing) As ConnectionDetail" />
      <MemberSignature Language="F#" Value="static member ConnectionDetail : string * string * string * string * string -&gt; Azure.ResourceManager.HybridCompute.Models.ConnectionDetail" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.ConnectionDetail (id, privateIPAddress, linkIdentifier, groupId, memberName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.ConnectionDetail</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="privateIPAddress" Type="System.String" />
        <Parameter Name="linkIdentifier" Type="System.String" />
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="memberName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> Azure resource Id. </param>
        <param name="privateIPAddress"> The private endpoint connection private ip address. </param>
        <param name="linkIdentifier"> The private endpoint connection link identifier. </param>
        <param name="groupId"> The private endpoint connection group id. </param>
        <param name="memberName"> The private endpoint connection member name. </param>
        <summary> Initializes a new instance of ConnectionDetail. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.ConnectionDetail" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtensionValueData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.ExtensionValueData ExtensionValueData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, string version = default, string extensionType = default, string publisher = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.ExtensionValueData ExtensionValueData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, string version, string extensionType, string publisher) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.ExtensionValueData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExtensionValueData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional version As String = Nothing, Optional extensionType As String = Nothing, Optional publisher As String = Nothing) As ExtensionValueData" />
      <MemberSignature Language="F#" Value="static member ExtensionValueData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * string * string * string -&gt; Azure.ResourceManager.HybridCompute.ExtensionValueData" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.ExtensionValueData (id, name, resourceType, systemData, version, extensionType, publisher)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.ExtensionValueData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="extensionType" Type="System.String" />
        <Parameter Name="publisher" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="version"> The version of the Extension being received. </param>
        <param name="extensionType"> The type of the Extension being received. </param>
        <param name="publisher"> The publisher of the Extension being received. </param>
        <summary> Initializes a new instance of ExtensionValueData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.ExtensionValueData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputeMachineData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.HybridComputeMachineData HybridComputeMachineData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.HybridComputeMachineExtensionData&gt; resources = default, Azure.ResourceManager.Models.ManagedServiceIdentity identity = default, Azure.ResourceManager.HybridCompute.Models.LocationData locationData = default, Azure.ResourceManager.HybridCompute.Models.AgentConfiguration agentConfiguration = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeServiceStatuses serviceStatuses = default, string cloudMetadataProvider = default, Azure.ResourceManager.HybridCompute.Models.AgentUpgrade agentUpgrade = default, Azure.ResourceManager.HybridCompute.Models.OSProfile osProfile = default, string provisioningState = default, Azure.ResourceManager.HybridCompute.Models.HybridComputeStatusType? status = default, DateTimeOffset? lastStatusChange = default, System.Collections.Generic.IEnumerable&lt;Azure.ResponseError&gt; errorDetails = default, string agentVersion = default, Guid? vmId = default, string displayName = default, string machineFqdn = default, string clientPublicKey = default, string osName = default, string osVersion = default, string osType = default, Guid? vmUuid = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.MachineExtensionInstanceView&gt; extensions = default, string osSku = default, string domainName = default, string adFqdn = default, string dnsFqdn = default, Azure.Core.ResourceIdentifier privateLinkScopeResourceId = default, Azure.Core.ResourceIdentifier parentClusterResourceId = default, string mssqlDiscovered = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; detectedProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.HybridComputeMachineData HybridComputeMachineData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.HybridComputeMachineExtensionData&gt; resources, class Azure.ResourceManager.Models.ManagedServiceIdentity identity, class Azure.ResourceManager.HybridCompute.Models.LocationData locationData, class Azure.ResourceManager.HybridCompute.Models.AgentConfiguration agentConfiguration, class Azure.ResourceManager.HybridCompute.Models.HybridComputeServiceStatuses serviceStatuses, string cloudMetadataProvider, class Azure.ResourceManager.HybridCompute.Models.AgentUpgrade agentUpgrade, class Azure.ResourceManager.HybridCompute.Models.OSProfile osProfile, string provisioningState, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.HybridComputeStatusType&gt; status, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastStatusChange, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResponseError&gt; errorDetails, string agentVersion, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; vmId, string displayName, string machineFqdn, string clientPublicKey, string osName, string osVersion, string osType, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; vmUuid, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.MachineExtensionInstanceView&gt; extensions, string osSku, string domainName, string adFqdn, string dnsFqdn, class Azure.Core.ResourceIdentifier privateLinkScopeResourceId, class Azure.Core.ResourceIdentifier parentClusterResourceId, string mssqlDiscovered, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; detectedProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeMachineData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.HybridComputeMachineExtensionData},Azure.ResourceManager.Models.ManagedServiceIdentity,Azure.ResourceManager.HybridCompute.Models.LocationData,Azure.ResourceManager.HybridCompute.Models.AgentConfiguration,Azure.ResourceManager.HybridCompute.Models.HybridComputeServiceStatuses,System.String,Azure.ResourceManager.HybridCompute.Models.AgentUpgrade,Azure.ResourceManager.HybridCompute.Models.OSProfile,System.String,System.Nullable{Azure.ResourceManager.HybridCompute.Models.HybridComputeStatusType},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{Azure.ResponseError},System.String,System.Nullable{System.Guid},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Guid},System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.MachineExtensionInstanceView},System.String,System.String,System.String,System.String,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputeMachineData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional resources As IEnumerable(Of HybridComputeMachineExtensionData) = Nothing, Optional identity As ManagedServiceIdentity = Nothing, Optional locationData As LocationData = Nothing, Optional agentConfiguration As AgentConfiguration = Nothing, Optional serviceStatuses As HybridComputeServiceStatuses = Nothing, Optional cloudMetadataProvider As String = Nothing, Optional agentUpgrade As AgentUpgrade = Nothing, Optional osProfile As OSProfile = Nothing, Optional provisioningState As String = Nothing, Optional status As Nullable(Of HybridComputeStatusType) = Nothing, Optional lastStatusChange As Nullable(Of DateTimeOffset) = Nothing, Optional errorDetails As IEnumerable(Of ResponseError) = Nothing, Optional agentVersion As String = Nothing, Optional vmId As Nullable(Of Guid) = Nothing, Optional displayName As String = Nothing, Optional machineFqdn As String = Nothing, Optional clientPublicKey As String = Nothing, Optional osName As String = Nothing, Optional osVersion As String = Nothing, Optional osType As String = Nothing, Optional vmUuid As Nullable(Of Guid) = Nothing, Optional extensions As IEnumerable(Of MachineExtensionInstanceView) = Nothing, Optional osSku As String = Nothing, Optional domainName As String = Nothing, Optional adFqdn As String = Nothing, Optional dnsFqdn As String = Nothing, Optional privateLinkScopeResourceId As ResourceIdentifier = Nothing, Optional parentClusterResourceId As ResourceIdentifier = Nothing, Optional mssqlDiscovered As String = Nothing, Optional detectedProperties As IReadOnlyDictionary(Of String, String) = Nothing) As HybridComputeMachineData" />
      <MemberSignature Language="F#" Value="static member HybridComputeMachineData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * seq&lt;Azure.ResourceManager.HybridCompute.HybridComputeMachineExtensionData&gt; * Azure.ResourceManager.Models.ManagedServiceIdentity * Azure.ResourceManager.HybridCompute.Models.LocationData * Azure.ResourceManager.HybridCompute.Models.AgentConfiguration * Azure.ResourceManager.HybridCompute.Models.HybridComputeServiceStatuses * string * Azure.ResourceManager.HybridCompute.Models.AgentUpgrade * Azure.ResourceManager.HybridCompute.Models.OSProfile * string * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeStatusType&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;Azure.ResponseError&gt; * string * Nullable&lt;Guid&gt; * string * string * string * string * string * string * Nullable&lt;Guid&gt; * seq&lt;Azure.ResourceManager.HybridCompute.Models.MachineExtensionInstanceView&gt; * string * string * string * string * Azure.Core.ResourceIdentifier * Azure.Core.ResourceIdentifier * string * System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; -&gt; Azure.ResourceManager.HybridCompute.HybridComputeMachineData" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeMachineData (id, name, resourceType, systemData, tags, location, resources, identity, locationData, agentConfiguration, serviceStatuses, cloudMetadataProvider, agentUpgrade, osProfile, provisioningState, status, lastStatusChange, errorDetails, agentVersion, vmId, displayName, machineFqdn, clientPublicKey, osName, osVersion, osType, vmUuid, extensions, osSku, domainName, adFqdn, dnsFqdn, privateLinkScopeResourceId, parentClusterResourceId, mssqlDiscovered, detectedProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.HybridComputeMachineData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="resources" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.HybridComputeMachineExtensionData&gt;" />
        <Parameter Name="identity" Type="Azure.ResourceManager.Models.ManagedServiceIdentity" />
        <Parameter Name="locationData" Type="Azure.ResourceManager.HybridCompute.Models.LocationData" />
        <Parameter Name="agentConfiguration" Type="Azure.ResourceManager.HybridCompute.Models.AgentConfiguration" />
        <Parameter Name="serviceStatuses" Type="Azure.ResourceManager.HybridCompute.Models.HybridComputeServiceStatuses" />
        <Parameter Name="cloudMetadataProvider" Type="System.String" />
        <Parameter Name="agentUpgrade" Type="Azure.ResourceManager.HybridCompute.Models.AgentUpgrade" />
        <Parameter Name="osProfile" Type="Azure.ResourceManager.HybridCompute.Models.OSProfile" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.HybridComputeStatusType&gt;" />
        <Parameter Name="lastStatusChange" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="errorDetails" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResponseError&gt;" />
        <Parameter Name="agentVersion" Type="System.String" />
        <Parameter Name="vmId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="machineFqdn" Type="System.String" />
        <Parameter Name="clientPublicKey" Type="System.String" />
        <Parameter Name="osName" Type="System.String" />
        <Parameter Name="osVersion" Type="System.String" />
        <Parameter Name="osType" Type="System.String" />
        <Parameter Name="vmUuid" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="extensions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.MachineExtensionInstanceView&gt;" />
        <Parameter Name="osSku" Type="System.String" />
        <Parameter Name="domainName" Type="System.String" />
        <Parameter Name="adFqdn" Type="System.String" />
        <Parameter Name="dnsFqdn" Type="System.String" />
        <Parameter Name="privateLinkScopeResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="parentClusterResourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="mssqlDiscovered" Type="System.String" />
        <Parameter Name="detectedProperties" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="resources"> The list of extensions affiliated to the machine. </param>
        <param name="identity"> Identity for the resource. Current supported identity types: SystemAssigned. </param>
        <param name="locationData"> Metadata pertaining to the geographic location of the resource. </param>
        <param name="agentConfiguration"> Configurable properties that the user can set locally via the azcmagent config command, or remotely via ARM. </param>
        <param name="serviceStatuses"> Statuses of dependent services that are reported back to ARM. </param>
        <param name="cloudMetadataProvider"> The metadata of the cloud environment (Azure/GCP/AWS/OCI...). </param>
        <param name="agentUpgrade"> The info of the machine w.r.t Agent Upgrade. </param>
        <param name="osProfile"> Specifies the operating system settings for the hybrid machine. </param>
        <param name="provisioningState"> The provisioning state, which only appears in the response. </param>
        <param name="status"> The status of the hybrid machine agent. </param>
        <param name="lastStatusChange"> The time of the last status change. </param>
        <param name="errorDetails"> Details about the error state. </param>
        <param name="agentVersion"> The hybrid machine agent full version. </param>
        <param name="vmId"> Specifies the hybrid machine unique ID. </param>
        <param name="displayName"> Specifies the hybrid machine display name. </param>
        <param name="machineFqdn"> Specifies the hybrid machine FQDN. </param>
        <param name="clientPublicKey"> Public Key that the client provides to be used during initial resource onboarding. </param>
        <param name="osName"> The Operating System running on the hybrid machine. </param>
        <param name="osVersion"> The version of Operating System running on the hybrid machine. </param>
        <param name="osType"> The type of Operating System (windows/linux). </param>
        <param name="vmUuid"> Specifies the Arc Machine's unique SMBIOS ID. </param>
        <param name="extensions"> Machine Extensions information (deprecated field). </param>
        <param name="osSku"> Specifies the Operating System product SKU. </param>
        <param name="domainName"> Specifies the Windows domain name. </param>
        <param name="adFqdn"> Specifies the AD fully qualified display name. </param>
        <param name="dnsFqdn"> Specifies the DNS fully qualified display name. </param>
        <param name="privateLinkScopeResourceId"> The resource id of the private link scope this machine is assigned to, if any. </param>
        <param name="parentClusterResourceId"> The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any. </param>
        <param name="mssqlDiscovered"> Specifies whether any MS SQL instance is discovered on the machine. </param>
        <param name="detectedProperties"> Detected properties from the machine. </param>
        <summary> Initializes a new instance of HybridComputeMachineData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.HybridComputeMachineData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputeMachineExtensionData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.HybridComputeMachineExtensionData HybridComputeMachineExtensionData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, string forceUpdateTag = default, string publisher = default, string typePropertiesType = default, string typeHandlerVersion = default, bool? enableAutomaticUpgrade = default, bool? autoUpgradeMinorVersion = default, System.Collections.Generic.IDictionary&lt;string,BinaryData&gt; settings = default, System.Collections.Generic.IDictionary&lt;string,BinaryData&gt; protectedSettings = default, string provisioningState = default, Azure.ResourceManager.HybridCompute.Models.MachineExtensionInstanceView instanceView = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.HybridComputeMachineExtensionData HybridComputeMachineExtensionData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, string forceUpdateTag, string publisher, string typePropertiesType, string typeHandlerVersion, valuetype System.Nullable`1&lt;bool&gt; enableAutomaticUpgrade, valuetype System.Nullable`1&lt;bool&gt; autoUpgradeMinorVersion, class System.Collections.Generic.IDictionary`2&lt;string, class System.BinaryData&gt; settings, class System.Collections.Generic.IDictionary`2&lt;string, class System.BinaryData&gt; protectedSettings, string provisioningState, class Azure.ResourceManager.HybridCompute.Models.MachineExtensionInstanceView instanceView) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeMachineExtensionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.String,Azure.ResourceManager.HybridCompute.Models.MachineExtensionInstanceView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputeMachineExtensionData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional forceUpdateTag As String = Nothing, Optional publisher As String = Nothing, Optional typePropertiesType As String = Nothing, Optional typeHandlerVersion As String = Nothing, Optional enableAutomaticUpgrade As Nullable(Of Boolean) = Nothing, Optional autoUpgradeMinorVersion As Nullable(Of Boolean) = Nothing, Optional settings As IDictionary(Of String, BinaryData) = Nothing, Optional protectedSettings As IDictionary(Of String, BinaryData) = Nothing, Optional provisioningState As String = Nothing, Optional instanceView As MachineExtensionInstanceView = Nothing) As HybridComputeMachineExtensionData" />
      <MemberSignature Language="F#" Value="static member HybridComputeMachineExtensionData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * string * string * string * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Collections.Generic.IDictionary&lt;string, BinaryData&gt; * System.Collections.Generic.IDictionary&lt;string, BinaryData&gt; * string * Azure.ResourceManager.HybridCompute.Models.MachineExtensionInstanceView -&gt; Azure.ResourceManager.HybridCompute.HybridComputeMachineExtensionData" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputeMachineExtensionData (id, name, resourceType, systemData, tags, location, forceUpdateTag, publisher, typePropertiesType, typeHandlerVersion, enableAutomaticUpgrade, autoUpgradeMinorVersion, settings, protectedSettings, provisioningState, instanceView)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.HybridComputeMachineExtensionData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="forceUpdateTag" Type="System.String" />
        <Parameter Name="publisher" Type="System.String" />
        <Parameter Name="typePropertiesType" Type="System.String" />
        <Parameter Name="typeHandlerVersion" Type="System.String" />
        <Parameter Name="enableAutomaticUpgrade" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="autoUpgradeMinorVersion" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="settings" Type="System.Collections.Generic.IDictionary&lt;System.String,System.BinaryData&gt;" />
        <Parameter Name="protectedSettings" Type="System.Collections.Generic.IDictionary&lt;System.String,System.BinaryData&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="instanceView" Type="Azure.ResourceManager.HybridCompute.Models.MachineExtensionInstanceView" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="forceUpdateTag"> How the extension handler should be forced to update even if the extension configuration has not changed. </param>
        <param name="publisher"> The name of the extension handler publisher. </param>
        <param name="typePropertiesType"> Specifies the type of the extension; an example is "CustomScriptExtension". </param>
        <param name="typeHandlerVersion"> Specifies the version of the script handler. </param>
        <param name="enableAutomaticUpgrade"> Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available. </param>
        <param name="autoUpgradeMinorVersion"> Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true. </param>
        <param name="settings"> Json formatted public settings for the extension. </param>
        <param name="protectedSettings"> The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all. </param>
        <param name="provisioningState"> The provisioning state, which only appears in the response. </param>
        <param name="instanceView"> The machine extension instance view. </param>
        <summary> Initializes a new instance of HybridComputeMachineExtensionData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.HybridComputeMachineExtensionData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputePrivateEndpointConnectionData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.HybridComputePrivateEndpointConnectionData HybridComputePrivateEndpointConnectionData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.HybridComputePrivateEndpointConnectionData HybridComputePrivateEndpointConnectionData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateEndpointConnectionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputePrivateEndpointConnectionData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional properties As PrivateEndpointConnectionProperties = Nothing) As HybridComputePrivateEndpointConnectionData" />
      <MemberSignature Language="F#" Value="static member HybridComputePrivateEndpointConnectionData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionProperties -&gt; Azure.ResourceManager.HybridCompute.HybridComputePrivateEndpointConnectionData" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateEndpointConnectionData (id, name, resourceType, systemData, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.HybridComputePrivateEndpointConnectionData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="properties" Type="Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="properties"> Resource properties. </param>
        <summary> Initializes a new instance of HybridComputePrivateEndpointConnectionData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.HybridComputePrivateEndpointConnectionData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputePrivateLinkResourceData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.HybridComputePrivateLinkResourceData HybridComputePrivateLinkResourceData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkResourceProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.HybridComputePrivateLinkResourceData HybridComputePrivateLinkResourceData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkResourceProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateLinkResourceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkResourceProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputePrivateLinkResourceData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional properties As HybridComputePrivateLinkResourceProperties = Nothing) As HybridComputePrivateLinkResourceData" />
      <MemberSignature Language="F#" Value="static member HybridComputePrivateLinkResourceData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkResourceProperties -&gt; Azure.ResourceManager.HybridCompute.HybridComputePrivateLinkResourceData" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateLinkResourceData (id, name, resourceType, systemData, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.HybridComputePrivateLinkResourceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="properties" Type="Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkResourceProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="properties"> Resource properties. </param>
        <summary> Initializes a new instance of HybridComputePrivateLinkResourceData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.HybridComputePrivateLinkResourceData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputePrivateLinkResourceProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkResourceProperties HybridComputePrivateLinkResourceProperties (string groupId = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredMembers = default, System.Collections.Generic.IEnumerable&lt;string&gt; requiredZoneNames = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkResourceProperties HybridComputePrivateLinkResourceProperties(string groupId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredMembers, class System.Collections.Generic.IEnumerable`1&lt;string&gt; requiredZoneNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateLinkResourceProperties(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputePrivateLinkResourceProperties (Optional groupId As String = Nothing, Optional requiredMembers As IEnumerable(Of String) = Nothing, Optional requiredZoneNames As IEnumerable(Of String) = Nothing) As HybridComputePrivateLinkResourceProperties" />
      <MemberSignature Language="F#" Value="static member HybridComputePrivateLinkResourceProperties : string * seq&lt;string&gt; * seq&lt;string&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkResourceProperties" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateLinkResourceProperties (groupId, requiredMembers, requiredZoneNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkResourceProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="requiredMembers" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="requiredZoneNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="groupId"> The private link resource group id. </param>
        <param name="requiredMembers"> The private link resource required member names. </param>
        <param name="requiredZoneNames"> Required DNS zone names of the the private link resource. </param>
        <summary> Initializes a new instance of HybridComputePrivateLinkResourceProperties. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkResourceProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputePrivateLinkScopeData">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.HybridComputePrivateLinkScopeData HybridComputePrivateLinkScopeData (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, Azure.Core.AzureLocation location = default, Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkScopeProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.HybridComputePrivateLinkScopeData HybridComputePrivateLinkScopeData(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkScopeProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateLinkScopeData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Core.AzureLocation,Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkScopeProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputePrivateLinkScopeData (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional location As AzureLocation = Nothing, Optional properties As HybridComputePrivateLinkScopeProperties = Nothing) As HybridComputePrivateLinkScopeData" />
      <MemberSignature Language="F#" Value="static member HybridComputePrivateLinkScopeData : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * System.Collections.Generic.IDictionary&lt;string, string&gt; * Azure.Core.AzureLocation * Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkScopeProperties -&gt; Azure.ResourceManager.HybridCompute.HybridComputePrivateLinkScopeData" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateLinkScopeData (id, name, resourceType, systemData, tags, location, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.HybridComputePrivateLinkScopeData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="properties" Type="Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkScopeProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="tags"> The tags. </param>
        <param name="location"> The location. </param>
        <param name="properties"> Properties that define a Azure Arc PrivateLinkScope resource. </param>
        <summary> Initializes a new instance of HybridComputePrivateLinkScopeData. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.HybridComputePrivateLinkScopeData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputePrivateLinkScopeProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkScopeProperties HybridComputePrivateLinkScopeProperties (Azure.ResourceManager.HybridCompute.Models.PublicNetworkAccessType? publicNetworkAccess = default, string provisioningState = default, string privateLinkScopeId = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionDataModel&gt; privateEndpointConnections = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkScopeProperties HybridComputePrivateLinkScopeProperties(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.PublicNetworkAccessType&gt; publicNetworkAccess, string provisioningState, string privateLinkScopeId, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionDataModel&gt; privateEndpointConnections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateLinkScopeProperties(System.Nullable{Azure.ResourceManager.HybridCompute.Models.PublicNetworkAccessType},System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionDataModel})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputePrivateLinkScopeProperties (Optional publicNetworkAccess As Nullable(Of PublicNetworkAccessType) = Nothing, Optional provisioningState As String = Nothing, Optional privateLinkScopeId As String = Nothing, Optional privateEndpointConnections As IEnumerable(Of PrivateEndpointConnectionDataModel) = Nothing) As HybridComputePrivateLinkScopeProperties" />
      <MemberSignature Language="F#" Value="static member HybridComputePrivateLinkScopeProperties : Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PublicNetworkAccessType&gt; * string * string * seq&lt;Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionDataModel&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkScopeProperties" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateLinkScopeProperties (publicNetworkAccess, provisioningState, privateLinkScopeId, privateEndpointConnections)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkScopeProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PublicNetworkAccessType&gt;" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="privateLinkScopeId" Type="System.String" />
        <Parameter Name="privateEndpointConnections" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionDataModel&gt;" />
      </Parameters>
      <Docs>
        <param name="publicNetworkAccess"> Indicates whether machines associated with the private link scope can also use public Azure Arc service endpoints. </param>
        <param name="provisioningState"> Current state of this PrivateLinkScope: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Provisioning ,Succeeded, Canceled and Failed. </param>
        <param name="privateLinkScopeId"> The Guid id of the private link scope. </param>
        <param name="privateEndpointConnections"> The collection of associated Private Endpoint Connections. </param>
        <summary> Initializes a new instance of HybridComputePrivateLinkScopeProperties. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkScopeProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HybridComputePrivateLinkServiceConnectionStateProperty">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkServiceConnectionStateProperty HybridComputePrivateLinkServiceConnectionStateProperty (string status = default, string description = default, string actionsRequired = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkServiceConnectionStateProperty HybridComputePrivateLinkServiceConnectionStateProperty(string status, string description, string actionsRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateLinkServiceConnectionStateProperty(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HybridComputePrivateLinkServiceConnectionStateProperty (Optional status As String = Nothing, Optional description As String = Nothing, Optional actionsRequired As String = Nothing) As HybridComputePrivateLinkServiceConnectionStateProperty" />
      <MemberSignature Language="F#" Value="static member HybridComputePrivateLinkServiceConnectionStateProperty : string * string * string -&gt; Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkServiceConnectionStateProperty" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.HybridComputePrivateLinkServiceConnectionStateProperty (status, description, actionsRequired)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkServiceConnectionStateProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="actionsRequired" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="status"> The private link service connection status. </param>
        <param name="description"> The private link service connection description. </param>
        <param name="actionsRequired"> The actions required for private link service connection. </param>
        <summary> Initializes a new instance of HybridComputePrivateLinkServiceConnectionStateProperty. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkServiceConnectionStateProperty" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IPAddress">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.IPAddress IPAddress (string address = default, string ipAddressVersion = default, string subnetAddressPrefix = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.IPAddress IPAddress(string address, string ipAddressVersion, string subnetAddressPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.IPAddress(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IPAddress (Optional address As String = Nothing, Optional ipAddressVersion As String = Nothing, Optional subnetAddressPrefix As String = Nothing) As IPAddress" />
      <MemberSignature Language="F#" Value="static member IPAddress : string * string * string -&gt; Azure.ResourceManager.HybridCompute.Models.IPAddress" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.IPAddress (address, ipAddressVersion, subnetAddressPrefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.IPAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="ipAddressVersion" Type="System.String" />
        <Parameter Name="subnetAddressPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address"> Represents the IP Address. </param>
        <param name="ipAddressVersion"> Represents the Ip Address Version. </param>
        <param name="subnetAddressPrefix"> The subnet to which this IP address belongs. </param>
        <summary> Initializes a new instance of IPAddress. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.IPAddress" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineAssessPatchesResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.MachineAssessPatchesResult MachineAssessPatchesResult (Azure.ResourceManager.HybridCompute.Models.PatchOperationStatus? status = default, Guid? assessmentActivityId = default, bool? rebootPending = default, Azure.ResourceManager.HybridCompute.Models.AvailablePatchCountByClassification availablePatchCountByClassification = default, DateTimeOffset? startOn = default, DateTimeOffset? lastModifiedOn = default, Azure.ResourceManager.HybridCompute.Models.PatchOperationStartedBy? startedBy = default, Azure.ResourceManager.HybridCompute.Models.PatchServiceUsed? patchServiceUsed = default, Azure.ResourceManager.HybridCompute.Models.OSType? osType = default, Azure.ResponseError errorDetails = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.MachineAssessPatchesResult MachineAssessPatchesResult(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.PatchOperationStatus&gt; status, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; assessmentActivityId, valuetype System.Nullable`1&lt;bool&gt; rebootPending, class Azure.ResourceManager.HybridCompute.Models.AvailablePatchCountByClassification availablePatchCountByClassification, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModifiedOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.PatchOperationStartedBy&gt; startedBy, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.PatchServiceUsed&gt; patchServiceUsed, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.OSType&gt; osType, class Azure.ResponseError errorDetails) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.MachineAssessPatchesResult(System.Nullable{Azure.ResourceManager.HybridCompute.Models.PatchOperationStatus},System.Nullable{System.Guid},System.Nullable{System.Boolean},Azure.ResourceManager.HybridCompute.Models.AvailablePatchCountByClassification,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.HybridCompute.Models.PatchOperationStartedBy},System.Nullable{Azure.ResourceManager.HybridCompute.Models.PatchServiceUsed},System.Nullable{Azure.ResourceManager.HybridCompute.Models.OSType},Azure.ResponseError)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MachineAssessPatchesResult (Optional status As Nullable(Of PatchOperationStatus) = Nothing, Optional assessmentActivityId As Nullable(Of Guid) = Nothing, Optional rebootPending As Nullable(Of Boolean) = Nothing, Optional availablePatchCountByClassification As AvailablePatchCountByClassification = Nothing, Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional lastModifiedOn As Nullable(Of DateTimeOffset) = Nothing, Optional startedBy As Nullable(Of PatchOperationStartedBy) = Nothing, Optional patchServiceUsed As Nullable(Of PatchServiceUsed) = Nothing, Optional osType As Nullable(Of OSType) = Nothing, Optional errorDetails As ResponseError = Nothing) As MachineAssessPatchesResult" />
      <MemberSignature Language="F#" Value="static member MachineAssessPatchesResult : Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchOperationStatus&gt; * Nullable&lt;Guid&gt; * Nullable&lt;bool&gt; * Azure.ResourceManager.HybridCompute.Models.AvailablePatchCountByClassification * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchOperationStartedBy&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchServiceUsed&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.OSType&gt; * Azure.ResponseError -&gt; Azure.ResourceManager.HybridCompute.Models.MachineAssessPatchesResult" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.MachineAssessPatchesResult (status, assessmentActivityId, rebootPending, availablePatchCountByClassification, startOn, lastModifiedOn, startedBy, patchServiceUsed, osType, errorDetails)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.MachineAssessPatchesResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchOperationStatus&gt;" />
        <Parameter Name="assessmentActivityId" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="rebootPending" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="availablePatchCountByClassification" Type="Azure.ResourceManager.HybridCompute.Models.AvailablePatchCountByClassification" />
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="lastModifiedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="startedBy" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchOperationStartedBy&gt;" />
        <Parameter Name="patchServiceUsed" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchServiceUsed&gt;" />
        <Parameter Name="osType" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.OSType&gt;" />
        <Parameter Name="errorDetails" Type="Azure.ResponseError" />
      </Parameters>
      <Docs>
        <param name="status"> The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings.". </param>
        <param name="assessmentActivityId"> The activity ID of the operation that produced this result. </param>
        <param name="rebootPending"> The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation but the reboot has not yet occurred. </param>
        <param name="availablePatchCountByClassification"> Summarization of patches available for installation on the machine by classification. </param>
        <param name="startOn"> The UTC timestamp when the operation began. </param>
        <param name="lastModifiedOn"> The UTC timestamp when the operation finished. </param>
        <param name="startedBy"> Indicates if operation was triggered by user or by platform. </param>
        <param name="patchServiceUsed"> Specifies the patch service used for the operation. </param>
        <param name="osType"> The operating system type of the machine. </param>
        <param name="errorDetails"> The errors that were encountered during execution of the operation. The details array contains the list of them. </param>
        <summary> Initializes a new instance of MachineAssessPatchesResult. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.MachineAssessPatchesResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineInstallPatchesResult">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.MachineInstallPatchesResult MachineInstallPatchesResult (Azure.ResourceManager.HybridCompute.Models.PatchOperationStatus? status = default, string installationActivityId = default, Azure.ResourceManager.HybridCompute.Models.VmGuestPatchRebootStatus? rebootStatus = default, bool? maintenanceWindowExceeded = default, int? excludedPatchCount = default, int? notSelectedPatchCount = default, int? pendingPatchCount = default, int? installedPatchCount = default, int? failedPatchCount = default, DateTimeOffset? startOn = default, DateTimeOffset? lastModifiedOn = default, Azure.ResourceManager.HybridCompute.Models.PatchOperationStartedBy? startedBy = default, Azure.ResourceManager.HybridCompute.Models.PatchServiceUsed? patchServiceUsed = default, Azure.ResourceManager.HybridCompute.Models.OSType? osType = default, Azure.ResponseError errorDetails = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.MachineInstallPatchesResult MachineInstallPatchesResult(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.PatchOperationStatus&gt; status, string installationActivityId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.VmGuestPatchRebootStatus&gt; rebootStatus, valuetype System.Nullable`1&lt;bool&gt; maintenanceWindowExceeded, valuetype System.Nullable`1&lt;int32&gt; excludedPatchCount, valuetype System.Nullable`1&lt;int32&gt; notSelectedPatchCount, valuetype System.Nullable`1&lt;int32&gt; pendingPatchCount, valuetype System.Nullable`1&lt;int32&gt; installedPatchCount, valuetype System.Nullable`1&lt;int32&gt; failedPatchCount, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startOn, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModifiedOn, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.PatchOperationStartedBy&gt; startedBy, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.PatchServiceUsed&gt; patchServiceUsed, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.OSType&gt; osType, class Azure.ResponseError errorDetails) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.MachineInstallPatchesResult(System.Nullable{Azure.ResourceManager.HybridCompute.Models.PatchOperationStatus},System.String,System.Nullable{Azure.ResourceManager.HybridCompute.Models.VmGuestPatchRebootStatus},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.HybridCompute.Models.PatchOperationStartedBy},System.Nullable{Azure.ResourceManager.HybridCompute.Models.PatchServiceUsed},System.Nullable{Azure.ResourceManager.HybridCompute.Models.OSType},Azure.ResponseError)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MachineInstallPatchesResult (Optional status As Nullable(Of PatchOperationStatus) = Nothing, Optional installationActivityId As String = Nothing, Optional rebootStatus As Nullable(Of VmGuestPatchRebootStatus) = Nothing, Optional maintenanceWindowExceeded As Nullable(Of Boolean) = Nothing, Optional excludedPatchCount As Nullable(Of Integer) = Nothing, Optional notSelectedPatchCount As Nullable(Of Integer) = Nothing, Optional pendingPatchCount As Nullable(Of Integer) = Nothing, Optional installedPatchCount As Nullable(Of Integer) = Nothing, Optional failedPatchCount As Nullable(Of Integer) = Nothing, Optional startOn As Nullable(Of DateTimeOffset) = Nothing, Optional lastModifiedOn As Nullable(Of DateTimeOffset) = Nothing, Optional startedBy As Nullable(Of PatchOperationStartedBy) = Nothing, Optional patchServiceUsed As Nullable(Of PatchServiceUsed) = Nothing, Optional osType As Nullable(Of OSType) = Nothing, Optional errorDetails As ResponseError = Nothing) As MachineInstallPatchesResult" />
      <MemberSignature Language="F#" Value="static member MachineInstallPatchesResult : Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchOperationStatus&gt; * string * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.VmGuestPatchRebootStatus&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchOperationStartedBy&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchServiceUsed&gt; * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.OSType&gt; * Azure.ResponseError -&gt; Azure.ResourceManager.HybridCompute.Models.MachineInstallPatchesResult" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.MachineInstallPatchesResult (status, installationActivityId, rebootStatus, maintenanceWindowExceeded, excludedPatchCount, notSelectedPatchCount, pendingPatchCount, installedPatchCount, failedPatchCount, startOn, lastModifiedOn, startedBy, patchServiceUsed, osType, errorDetails)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.MachineInstallPatchesResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchOperationStatus&gt;" />
        <Parameter Name="installationActivityId" Type="System.String" />
        <Parameter Name="rebootStatus" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.VmGuestPatchRebootStatus&gt;" />
        <Parameter Name="maintenanceWindowExceeded" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="excludedPatchCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="notSelectedPatchCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="pendingPatchCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="installedPatchCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="failedPatchCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="startOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="lastModifiedOn" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="startedBy" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchOperationStartedBy&gt;" />
        <Parameter Name="patchServiceUsed" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PatchServiceUsed&gt;" />
        <Parameter Name="osType" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.OSType&gt;" />
        <Parameter Name="errorDetails" Type="Azure.ResponseError" />
      </Parameters>
      <Docs>
        <param name="status"> The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that point it will become "Failed", "Succeeded", "Unknown" or "CompletedWithWarnings.". </param>
        <param name="installationActivityId"> The activity ID of the operation that produced this result. </param>
        <param name="rebootStatus"> The reboot state of the VM following completion of the operation. </param>
        <param name="maintenanceWindowExceeded"> Whether the operation ran out of time before it completed all its intended actions. </param>
        <param name="excludedPatchCount"> The number of patches that were not installed due to the user blocking their installation. </param>
        <param name="notSelectedPatchCount"> The number of patches that were detected as available for install, but did not meet the operation's criteria. </param>
        <param name="pendingPatchCount"> The number of patches that were identified as meeting the installation criteria, but were not able to be installed. Typically this happens when maintenanceWindowExceeded == true. </param>
        <param name="installedPatchCount"> The number of patches successfully installed. </param>
        <param name="failedPatchCount"> The number of patches that could not be installed due to some issue. See errors for details. </param>
        <param name="startOn"> The UTC timestamp when the operation began. </param>
        <param name="lastModifiedOn"> The UTC timestamp when the operation finished. </param>
        <param name="startedBy"> Indicates if operation was triggered by user or by platform. </param>
        <param name="patchServiceUsed"> Specifies the patch service used for the operation. </param>
        <param name="osType"> The operating system type of the machine. </param>
        <param name="errorDetails"> The errors that were encountered during execution of the operation. The details array contains the list of them. </param>
        <summary> Initializes a new instance of MachineInstallPatchesResult. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.MachineInstallPatchesResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkInterface">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.NetworkInterface NetworkInterface (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.IPAddress&gt; ipAddresses = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.NetworkInterface NetworkInterface(class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.IPAddress&gt; ipAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.NetworkInterface(System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.IPAddress})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NetworkInterface (Optional ipAddresses As IEnumerable(Of IPAddress) = Nothing) As NetworkInterface" />
      <MemberSignature Language="F#" Value="static member NetworkInterface : seq&lt;Azure.ResourceManager.HybridCompute.Models.IPAddress&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.NetworkInterface" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.NetworkInterface ipAddresses" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.NetworkInterface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipAddresses" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.IPAddress&gt;" />
      </Parameters>
      <Docs>
        <param name="ipAddresses"> The list of IP addresses in this interface. </param>
        <summary> Initializes a new instance of NetworkInterface. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.NetworkInterface" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkProfile">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.NetworkProfile NetworkProfile (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.NetworkInterface&gt; networkInterfaces = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.NetworkProfile NetworkProfile(class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.NetworkInterface&gt; networkInterfaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.NetworkProfile(System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.NetworkInterface})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NetworkProfile (Optional networkInterfaces As IEnumerable(Of NetworkInterface) = Nothing) As NetworkProfile" />
      <MemberSignature Language="F#" Value="static member NetworkProfile : seq&lt;Azure.ResourceManager.HybridCompute.Models.NetworkInterface&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.NetworkProfile" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.NetworkProfile networkInterfaces" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.NetworkProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkInterfaces" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.NetworkInterface&gt;" />
      </Parameters>
      <Docs>
        <param name="networkInterfaces"> The list of network interfaces. </param>
        <summary> Initializes a new instance of NetworkProfile. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.NetworkProfile" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OSProfile">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.OSProfile OSProfile (string computerName = default, Azure.ResourceManager.HybridCompute.Models.OSProfileWindowsConfiguration windowsConfiguration = default, Azure.ResourceManager.HybridCompute.Models.OSProfileLinuxConfiguration linuxConfiguration = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.OSProfile OSProfile(string computerName, class Azure.ResourceManager.HybridCompute.Models.OSProfileWindowsConfiguration windowsConfiguration, class Azure.ResourceManager.HybridCompute.Models.OSProfileLinuxConfiguration linuxConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.OSProfile(System.String,Azure.ResourceManager.HybridCompute.Models.OSProfileWindowsConfiguration,Azure.ResourceManager.HybridCompute.Models.OSProfileLinuxConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OSProfile (Optional computerName As String = Nothing, Optional windowsConfiguration As OSProfileWindowsConfiguration = Nothing, Optional linuxConfiguration As OSProfileLinuxConfiguration = Nothing) As OSProfile" />
      <MemberSignature Language="F#" Value="static member OSProfile : string * Azure.ResourceManager.HybridCompute.Models.OSProfileWindowsConfiguration * Azure.ResourceManager.HybridCompute.Models.OSProfileLinuxConfiguration -&gt; Azure.ResourceManager.HybridCompute.Models.OSProfile" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.OSProfile (computerName, windowsConfiguration, linuxConfiguration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.OSProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="computerName" Type="System.String" />
        <Parameter Name="windowsConfiguration" Type="Azure.ResourceManager.HybridCompute.Models.OSProfileWindowsConfiguration" />
        <Parameter Name="linuxConfiguration" Type="Azure.ResourceManager.HybridCompute.Models.OSProfileLinuxConfiguration" />
      </Parameters>
      <Docs>
        <param name="computerName"> Specifies the host OS name of the hybrid machine. </param>
        <param name="windowsConfiguration"> Specifies the windows configuration for update management. </param>
        <param name="linuxConfiguration"> Specifies the linux configuration for update management. </param>
        <summary> Initializes a new instance of OSProfile. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.OSProfile" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateEndpointConnectionDataModel">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionDataModel PrivateEndpointConnectionDataModel (Azure.Core.ResourceIdentifier id = default, string name = default, Azure.Core.ResourceType resourceType = default, Azure.ResourceManager.Models.SystemData systemData = default, Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionProperties properties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionDataModel PrivateEndpointConnectionDataModel(class Azure.Core.ResourceIdentifier id, string name, valuetype Azure.Core.ResourceType resourceType, class Azure.ResourceManager.Models.SystemData systemData, class Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.PrivateEndpointConnectionDataModel(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PrivateEndpointConnectionDataModel (Optional id As ResourceIdentifier = Nothing, Optional name As String = Nothing, Optional resourceType As ResourceType = Nothing, Optional systemData As SystemData = Nothing, Optional properties As PrivateEndpointConnectionProperties = Nothing) As PrivateEndpointConnectionDataModel" />
      <MemberSignature Language="F#" Value="static member PrivateEndpointConnectionDataModel : Azure.Core.ResourceIdentifier * string * Azure.Core.ResourceType * Azure.ResourceManager.Models.SystemData * Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionProperties -&gt; Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionDataModel" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.PrivateEndpointConnectionDataModel (id, name, resourceType, systemData, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionDataModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="Azure.Core.ResourceType" />
        <Parameter Name="systemData" Type="Azure.ResourceManager.Models.SystemData" />
        <Parameter Name="properties" Type="Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionProperties" />
      </Parameters>
      <Docs>
        <param name="id"> The id. </param>
        <param name="name"> The name. </param>
        <param name="resourceType"> The resourceType. </param>
        <param name="systemData"> The systemData. </param>
        <param name="properties"> The Private Endpoint Connection properties. </param>
        <summary> Initializes a new instance of PrivateEndpointConnectionDataModel. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionDataModel" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateEndpointConnectionProperties">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionProperties PrivateEndpointConnectionProperties (Azure.Core.ResourceIdentifier privateEndpointId = default, Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkServiceConnectionStateProperty connectionState = default, string provisioningState = default, System.Collections.Generic.IEnumerable&lt;string&gt; groupIds = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionProperties PrivateEndpointConnectionProperties(class Azure.Core.ResourceIdentifier privateEndpointId, class Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkServiceConnectionStateProperty connectionState, string provisioningState, class System.Collections.Generic.IEnumerable`1&lt;string&gt; groupIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.PrivateEndpointConnectionProperties(Azure.Core.ResourceIdentifier,Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkServiceConnectionStateProperty,System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PrivateEndpointConnectionProperties (Optional privateEndpointId As ResourceIdentifier = Nothing, Optional connectionState As HybridComputePrivateLinkServiceConnectionStateProperty = Nothing, Optional provisioningState As String = Nothing, Optional groupIds As IEnumerable(Of String) = Nothing) As PrivateEndpointConnectionProperties" />
      <MemberSignature Language="F#" Value="static member PrivateEndpointConnectionProperties : Azure.Core.ResourceIdentifier * Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkServiceConnectionStateProperty * string * seq&lt;string&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionProperties" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.PrivateEndpointConnectionProperties (privateEndpointId, connectionState, provisioningState, groupIds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="connectionState" Type="Azure.ResourceManager.HybridCompute.Models.HybridComputePrivateLinkServiceConnectionStateProperty" />
        <Parameter Name="provisioningState" Type="System.String" />
        <Parameter Name="groupIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="privateEndpointId"> Private endpoint which the connection belongs to. </param>
        <param name="connectionState"> Connection state of the private endpoint connection. </param>
        <param name="provisioningState"> State of the private endpoint connection. </param>
        <param name="groupIds"> List of group IDs. </param>
        <summary> Initializes a new instance of PrivateEndpointConnectionProperties. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.PrivateEndpointConnectionProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateLinkScopeValidationDetails">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.HybridCompute.Models.PrivateLinkScopeValidationDetails PrivateLinkScopeValidationDetails (string id = default, Azure.ResourceManager.HybridCompute.Models.PublicNetworkAccessType? publicNetworkAccess = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.ConnectionDetail&gt; connectionDetails = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.HybridCompute.Models.PrivateLinkScopeValidationDetails PrivateLinkScopeValidationDetails(string id, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.HybridCompute.Models.PublicNetworkAccessType&gt; publicNetworkAccess, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.HybridCompute.Models.ConnectionDetail&gt; connectionDetails) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.PrivateLinkScopeValidationDetails(System.String,System.Nullable{Azure.ResourceManager.HybridCompute.Models.PublicNetworkAccessType},System.Collections.Generic.IEnumerable{Azure.ResourceManager.HybridCompute.Models.ConnectionDetail})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PrivateLinkScopeValidationDetails (Optional id As String = Nothing, Optional publicNetworkAccess As Nullable(Of PublicNetworkAccessType) = Nothing, Optional connectionDetails As IEnumerable(Of ConnectionDetail) = Nothing) As PrivateLinkScopeValidationDetails" />
      <MemberSignature Language="F#" Value="static member PrivateLinkScopeValidationDetails : string * Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PublicNetworkAccessType&gt; * seq&lt;Azure.ResourceManager.HybridCompute.Models.ConnectionDetail&gt; -&gt; Azure.ResourceManager.HybridCompute.Models.PrivateLinkScopeValidationDetails" Usage="Azure.ResourceManager.HybridCompute.Models.ArmHybridComputeModelFactory.PrivateLinkScopeValidationDetails (id, publicNetworkAccess, connectionDetails)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HybridCompute</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HybridCompute.Models.PrivateLinkScopeValidationDetails</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="publicNetworkAccess" Type="System.Nullable&lt;Azure.ResourceManager.HybridCompute.Models.PublicNetworkAccessType&gt;" />
        <Parameter Name="connectionDetails" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.HybridCompute.Models.ConnectionDetail&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> Azure resource Id. </param>
        <param name="publicNetworkAccess"> Indicates whether machines associated with the private link scope can also use public Azure Arc service endpoints. </param>
        <param name="connectionDetails"> List of Private Endpoint Connection details. </param>
        <summary> Initializes a new instance of PrivateLinkScopeValidationDetails. </summary>
        <returns> A new <see cref="T:Azure.ResourceManager.HybridCompute.Models.PrivateLinkScopeValidationDetails" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
