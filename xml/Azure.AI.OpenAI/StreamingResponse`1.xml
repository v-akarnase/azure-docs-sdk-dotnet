<Type Name="StreamingResponse&lt;T&gt;" FullName="Azure.AI.OpenAI.StreamingResponse&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class StreamingResponse&lt;T&gt; : IDisposable, System.Collections.Generic.IAsyncEnumerable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StreamingResponse`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IAsyncEnumerable`1&lt;!T&gt;, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.OpenAI.StreamingResponse`1" />
  <TypeSignature Language="VB.NET" Value="Public Class StreamingResponse(Of T)&#xA;Implements IAsyncEnumerable(Of T), IDisposable" />
  <TypeSignature Language="F#" Value="type StreamingResponse&lt;'T&gt; = class&#xA;    interface IDisposable&#xA;    interface IAsyncEnumerable&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.OpenAI</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IAsyncEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"> The data type representative of distinct, streamable items. </typeparam>
    <summary>
            Represents an operation response with streaming content that can be deserialized and enumerated while the response
            is still being received.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateFromResponse">
      <MemberSignature Language="C#" Value="public static Azure.AI.OpenAI.StreamingResponse&lt;T&gt; CreateFromResponse (Azure.Response response, Func&lt;Azure.Response,System.Collections.Generic.IAsyncEnumerable&lt;T&gt;&gt; asyncEnumerableProcessor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.OpenAI.StreamingResponse`1&lt;!T&gt; CreateFromResponse(class Azure.Response response, class System.Func`2&lt;class Azure.Response, class System.Collections.Generic.IAsyncEnumerable`1&lt;!T&gt;&gt; asyncEnumerableProcessor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.StreamingResponse`1.CreateFromResponse(Azure.Response,System.Func{Azure.Response,System.Collections.Generic.IAsyncEnumerable{`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromResponse (response As Response, asyncEnumerableProcessor As Func(Of Response, IAsyncEnumerable(Of T))) As StreamingResponse(Of T)" />
      <MemberSignature Language="F#" Value="static member CreateFromResponse : Azure.Response * Func&lt;Azure.Response, System.Collections.Generic.IAsyncEnumerable&lt;'T&gt;&gt; -&gt; Azure.AI.OpenAI.StreamingResponse&lt;'T&gt;" Usage="Azure.AI.OpenAI.StreamingResponse&lt;'T&gt;.CreateFromResponse (response, asyncEnumerableProcessor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.StreamingResponse&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="Azure.Response" />
        <Parameter Name="asyncEnumerableProcessor" Type="System.Func&lt;Azure.Response,System.Collections.Generic.IAsyncEnumerable&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="response">The HTTP response.</param>
        <param name="asyncEnumerableProcessor">
            The function that will resolve the provided response into an IAsyncEnumerable.
            </param>
        <summary>
            Creates a new instance of <see cref="T:Azure.AI.OpenAI.StreamingResponse`1" /> using the provided underlying HTTP response. The
            provided function will be used to resolve the response into an asynchronous enumeration of streamed response
            items.
            </summary>
        <returns>
            A new instance of <see cref="T:Azure.AI.OpenAI.StreamingResponse`1" /> that will be capable of asynchronous enumeration of
            <typeparamref name="T" /> items from the HTTP response.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.StreamingResponse`1.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="streamingResponse.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.StreamingResponse`1.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="streamingResponse.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IAsyncEnumerable&lt;T&gt; EnumerateValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IAsyncEnumerable`1&lt;!T&gt; EnumerateValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.StreamingResponse`1.EnumerateValues" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateValues () As IAsyncEnumerable(Of T)" />
      <MemberSignature Language="F#" Value="member this.EnumerateValues : unit -&gt; System.Collections.Generic.IAsyncEnumerable&lt;'T&gt;" Usage="streamingResponse.EnumerateValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the asynchronously enumerable collection of distinct, streamable items in the response.
            </summary>
        <returns />
        <remarks>
          <para> The return value of this method may be used with the "await foreach" statement. </para>
          <para>
            As <see cref="T:Azure.AI.OpenAI.StreamingResponse`1" /> explicitly implements <see cref="T:System.Collections.Generic.IAsyncEnumerable`1" />, callers may
            enumerate a <see cref="T:Azure.AI.OpenAI.StreamingResponse`1" /> instance directly instead of calling this method.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRawResponse">
      <MemberSignature Language="C#" Value="public Azure.Response GetRawResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.Response GetRawResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.StreamingResponse`1.GetRawResponse" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRawResponse () As Response" />
      <MemberSignature Language="F#" Value="member this.GetRawResponse : unit -&gt; Azure.Response" Usage="streamingResponse.GetRawResponse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the underlying <see cref="T:Azure.Response" /> instance that this <see cref="T:Azure.AI.OpenAI.StreamingResponse`1" /> may enumerate
            over.
            </summary>
        <returns> The <see cref="T:Azure.Response" /> instance attached to this <see cref="T:Azure.AI.OpenAI.StreamingResponse`1" />. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IAsyncEnumerable&lt;T&gt;.GetAsyncEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IAsyncEnumerator&lt;T&gt; IAsyncEnumerable&lt;T&gt;.GetAsyncEnumerator (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerator`1&lt;!T&gt; System.Collections.Generic.IAsyncEnumerable&lt;T&gt;.GetAsyncEnumerator(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.StreamingResponse`1.System#Collections#Generic#IAsyncEnumerable&lt;T&gt;#GetAsyncEnumerator(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function GetAsyncEnumerator (cancellationToken As CancellationToken) As IAsyncEnumerator(Of T) Implements IAsyncEnumerable(Of T).GetAsyncEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IAsyncEnumerable&lt;T&gt;.GetAsyncEnumerator : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerator&lt;'T&gt;&#xA;override this.System.Collections.Generic.IAsyncEnumerable&lt;T&gt;.GetAsyncEnumerator : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerator&lt;'T&gt;" Usage="streamingResponse.System.Collections.Generic.IAsyncEnumerable&lt;T&gt;.GetAsyncEnumerator cancellationToken" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param>
        <summary>Returns an enumerator that iterates asynchronously through the collection.</summary>
        <returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
