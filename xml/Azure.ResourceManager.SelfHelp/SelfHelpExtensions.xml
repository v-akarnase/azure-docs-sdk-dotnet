<Type Name="SelfHelpExtensions" FullName="Azure.ResourceManager.SelfHelp.SelfHelpExtensions">
  <TypeSignature Language="C#" Value="public static class SelfHelpExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SelfHelpExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.SelfHelp.SelfHelpExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SelfHelpExtensions" />
  <TypeSignature Language="F#" Value="type SelfHelpExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.SelfHelp. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckSelfHelpNameAvailability">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt; CheckSelfHelpNameAvailability (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent content = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt; CheckSelfHelpNameAvailability(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, class Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.CheckSelfHelpNameAvailability(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckSelfHelpNameAvailability (client As ArmClient, scope As ResourceIdentifier, Optional content As SelfHelpNameAvailabilityContent = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SelfHelpNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="static member CheckSelfHelpNameAvailability : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt;" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.CheckSelfHelpNameAvailability (client, scope, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="content" Type="Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="content"> The required parameters for availability check. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This API is used to check the uniqueness of a resource name used for a diagnostic, troubleshooter or solutions
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/checkNameAvailability</description></item><item><term>Operation Id</term><description>CheckNameAvailability_Post</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.CheckSelfHelpNameAvailability(Azure.Core.ResourceIdentifier,Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSelfHelpNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt;&gt; CheckSelfHelpNameAvailabilityAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent content = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt;&gt; CheckSelfHelpNameAvailabilityAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, class Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.CheckSelfHelpNameAvailabilityAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckSelfHelpNameAvailabilityAsync (client As ArmClient, scope As ResourceIdentifier, Optional content As SelfHelpNameAvailabilityContent = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SelfHelpNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="static member CheckSelfHelpNameAvailabilityAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt;&gt;" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.CheckSelfHelpNameAvailabilityAsync (client, scope, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="content" Type="Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="content"> The required parameters for availability check. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This API is used to check the uniqueness of a resource name used for a diagnostic, troubleshooter or solutions
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/checkNameAvailability</description></item><item><term>Operation Id</term><description>CheckNameAvailability_Post</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.CheckSelfHelpNameAvailability(Azure.Core.ResourceIdentifier,Azure.ResourceManager.SelfHelp.Models.SelfHelpNameAvailabilityContent,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpDiagnostic">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt; GetSelfHelpDiagnostic (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string diagnosticsResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt; GetSelfHelpDiagnostic(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string diagnosticsResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiagnostic(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSelfHelpDiagnostic (client As ArmClient, scope As ResourceIdentifier, diagnosticsResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SelfHelpDiagnosticResource)" />
      <MemberSignature Language="F#" Value="static member GetSelfHelpDiagnostic : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt;" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiagnostic (client, scope, diagnosticsResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="diagnosticsResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="diagnosticsResourceName"> Unique resource name for insight resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the diagnostics using the 'diagnosticsResourceName' you chose while creating the diagnostic.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/diagnostics/{diagnosticsResourceName}</description></item><item><term>Operation Id</term><description>Diagnostics_Get</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpDiagnostic(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="diagnosticsResourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="diagnosticsResourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpDiagnosticAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt;&gt; GetSelfHelpDiagnosticAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string diagnosticsResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt;&gt; GetSelfHelpDiagnosticAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string diagnosticsResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiagnosticAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSelfHelpDiagnosticAsync (client As ArmClient, scope As ResourceIdentifier, diagnosticsResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SelfHelpDiagnosticResource))" />
      <MemberSignature Language="F#" Value="static member GetSelfHelpDiagnosticAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt;&gt;" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiagnosticAsync (client, scope, diagnosticsResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="diagnosticsResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="diagnosticsResourceName"> Unique resource name for insight resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the diagnostics using the 'diagnosticsResourceName' you chose while creating the diagnostic.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/diagnostics/{diagnosticsResourceName}</description></item><item><term>Operation Id</term><description>Diagnostics_Get</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpDiagnosticAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="diagnosticsResourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="diagnosticsResourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpDiagnosticResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource GetSelfHelpDiagnosticResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource GetSelfHelpDiagnosticResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiagnosticResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSelfHelpDiagnosticResource (client As ArmClient, id As ResourceIdentifier) As SelfHelpDiagnosticResource" />
      <MemberSignature Language="F#" Value="static member GetSelfHelpDiagnosticResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiagnosticResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpDiagnosticResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpDiagnostics">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticCollection GetSelfHelpDiagnostics (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticCollection GetSelfHelpDiagnostics(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiagnostics(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSelfHelpDiagnostics (client As ArmClient, scope As ResourceIdentifier) As SelfHelpDiagnosticCollection" />
      <MemberSignature Language="F#" Value="static member GetSelfHelpDiagnostics : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticCollection" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiagnostics (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SelfHelp.SelfHelpDiagnosticCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary>
            Gets a collection of SelfHelpDiagnosticResources in the ArmClient.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpDiagnostics(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> An object representing collection of SelfHelpDiagnosticResources and their operations over a SelfHelpDiagnosticResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpDiscoverySolutions">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt; GetSelfHelpDiscoverySolutions (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string filter = default, string skiptoken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt; GetSelfHelpDiscoverySolutions(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string filter, string skiptoken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiscoverySolutions(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSelfHelpDiscoverySolutions (client As ArmClient, scope As ResourceIdentifier, Optional filter As String = Nothing, Optional skiptoken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SelfHelpSolutionMetadata)" />
      <MemberSignature Language="F#" Value="static member GetSelfHelpDiscoverySolutions : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt;" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiscoverySolutions (client, scope, filter, skiptoken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skiptoken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="filter"> 'ProblemClassificationId' or 'Id' is a mandatory filter to get solutions ids. It also supports optional 'ResourceType' and 'SolutionType' filters. The filter supports only 'and', 'or' and 'eq' operators. Example: $filter=ProblemClassificationId eq '1ddda5b4-cf6c-4d4f-91ad-bc38ab0e811e'. </param>
        <param name="skiptoken"> Skiptoken is only used if a previous operation returned a partial result. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the relevant Azure diagnostics and solutions using [problemClassification API](https://learn.microsoft.com/rest/api/support/problem-classifications/list?tabs=HTTP)) AND  resourceUri or resourceType.&lt;br/&gt; Discovery Solutions is the initial entry point within Help API, which identifies relevant Azure diagnostics and solutions. We will do our best to return the most effective solutions based on the type of inputs, in the request URL  &lt;br/&gt;&lt;br/&gt; Mandatory input :  problemClassificationId (Use the [problemClassification API](https://learn.microsoft.com/rest/api/support/problem-classifications/list?tabs=HTTP)) &lt;br/&gt;Optional input: resourceUri OR resource Type &lt;br/&gt;&lt;br/&gt; &lt;b&gt;Note: &lt;/b&gt;  ‘requiredInputs’ from Discovery solutions response must be passed via ‘additionalParameters’ as an input to Diagnostics and Solutions API.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/discoverySolutions</description></item><item><term>Operation Id</term><description>DiscoverySolution_List</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpDiscoverySolutions(Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelfHelpDiscoverySolutionsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt; GetSelfHelpDiscoverySolutionsAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string filter = default, string skiptoken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt; GetSelfHelpDiscoverySolutionsAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string filter, string skiptoken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiscoverySolutionsAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSelfHelpDiscoverySolutionsAsync (client As ArmClient, scope As ResourceIdentifier, Optional filter As String = Nothing, Optional skiptoken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SelfHelpSolutionMetadata)" />
      <MemberSignature Language="F#" Value="static member GetSelfHelpDiscoverySolutionsAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt;" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSelfHelpDiscoverySolutionsAsync (client, scope, filter, skiptoken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SelfHelp.Models.SelfHelpSolutionMetadata&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skiptoken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="filter"> 'ProblemClassificationId' or 'Id' is a mandatory filter to get solutions ids. It also supports optional 'ResourceType' and 'SolutionType' filters. The filter supports only 'and', 'or' and 'eq' operators. Example: $filter=ProblemClassificationId eq '1ddda5b4-cf6c-4d4f-91ad-bc38ab0e811e'. </param>
        <param name="skiptoken"> Skiptoken is only used if a previous operation returned a partial result. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the relevant Azure diagnostics and solutions using [problemClassification API](https://learn.microsoft.com/rest/api/support/problem-classifications/list?tabs=HTTP)) AND  resourceUri or resourceType.&lt;br/&gt; Discovery Solutions is the initial entry point within Help API, which identifies relevant Azure diagnostics and solutions. We will do our best to return the most effective solutions based on the type of inputs, in the request URL  &lt;br/&gt;&lt;br/&gt; Mandatory input :  problemClassificationId (Use the [problemClassification API](https://learn.microsoft.com/rest/api/support/problem-classifications/list?tabs=HTTP)) &lt;br/&gt;Optional input: resourceUri OR resource Type &lt;br/&gt;&lt;br/&gt; &lt;b&gt;Note: &lt;/b&gt;  ‘requiredInputs’ from Discovery solutions response must be passed via ‘additionalParameters’ as an input to Diagnostics and Solutions API.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/discoverySolutions</description></item><item><term>Operation Id</term><description>DiscoverySolution_List</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSelfHelpDiscoverySolutions(Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSolutionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.SelfHelp.SolutionResource GetSolutionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.SelfHelp.SolutionResource GetSolutionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSolutionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSolutionResource (client As ArmClient, id As ResourceIdentifier) As SolutionResource" />
      <MemberSignature Language="F#" Value="static member GetSolutionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.SolutionResource" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSolutionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SelfHelp.SolutionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet-preview" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SelfHelp.SolutionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SelfHelp.SolutionResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SelfHelp.SolutionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSolutionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SelfHelp.SolutionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSolutionResource">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.SelfHelp.SolutionResource&gt; GetSolutionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string solutionResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.SolutionResource&gt; GetSolutionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string solutionResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSolutionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSolutionResource (client As ArmClient, scope As ResourceIdentifier, solutionResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SolutionResource)" />
      <MemberSignature Language="F#" Value="static member GetSolutionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SelfHelp.SolutionResource&gt;" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSolutionResource (client, scope, solutionResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SelfHelp.SolutionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet-preview" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="solutionResourceName" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="solutionResourceName"> Solution resource Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the solution using the applicable solutionResourceName while creating the solution.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/solutions/{solutionResourceName}</description></item><item><term>Operation Id</term><description>Solution_Get</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSolutionResource(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="solutionResourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="solutionResourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSolutionResourceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SolutionResource&gt;&gt; GetSolutionResourceAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string solutionResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.SolutionResource&gt;&gt; GetSolutionResourceAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string solutionResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSolutionResourceAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSolutionResourceAsync (client As ArmClient, scope As ResourceIdentifier, solutionResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SolutionResource))" />
      <MemberSignature Language="F#" Value="static member GetSolutionResourceAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SolutionResource&gt;&gt;" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSolutionResourceAsync (client, scope, solutionResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.SolutionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet-preview" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="solutionResourceName" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="solutionResourceName"> Solution resource Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the solution using the applicable solutionResourceName while creating the solution.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/solutions/{solutionResourceName}</description></item><item><term>Operation Id</term><description>Solution_Get</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSolutionResourceAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="solutionResourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="solutionResourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSolutionResources">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.SelfHelp.SolutionResourceCollection GetSolutionResources (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.SelfHelp.SolutionResourceCollection GetSolutionResources(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSolutionResources(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSolutionResources (client As ArmClient, scope As ResourceIdentifier) As SolutionResourceCollection" />
      <MemberSignature Language="F#" Value="static member GetSolutionResources : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.SolutionResourceCollection" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetSolutionResources (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SelfHelp.SolutionResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet-preview" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary>
            Gets a collection of SolutionResources in the ArmClient.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetSolutionResources(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> An object representing collection of SolutionResources and their operations over a SolutionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTroubleshooterResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.SelfHelp.TroubleshooterResource GetTroubleshooterResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.SelfHelp.TroubleshooterResource GetTroubleshooterResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetTroubleshooterResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTroubleshooterResource (client As ArmClient, id As ResourceIdentifier) As TroubleshooterResource" />
      <MemberSignature Language="F#" Value="static member GetTroubleshooterResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.TroubleshooterResource" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetTroubleshooterResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SelfHelp.TroubleshooterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet-preview" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SelfHelp.TroubleshooterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SelfHelp.TroubleshooterResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SelfHelp.TroubleshooterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetTroubleshooterResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SelfHelp.TroubleshooterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTroubleshooterResource">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.SelfHelp.TroubleshooterResource&gt; GetTroubleshooterResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string troubleshooterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.TroubleshooterResource&gt; GetTroubleshooterResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string troubleshooterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetTroubleshooterResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTroubleshooterResource (client As ArmClient, scope As ResourceIdentifier, troubleshooterName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TroubleshooterResource)" />
      <MemberSignature Language="F#" Value="static member GetTroubleshooterResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SelfHelp.TroubleshooterResource&gt;" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetTroubleshooterResource (client, scope, troubleshooterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SelfHelp.TroubleshooterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet-preview" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="troubleshooterName" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="troubleshooterName"> Troubleshooter resource Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets troubleshooter instance result which includes the step status/result of the troubleshooter resource name that is being executed.&lt;br/&gt; Get API is used to retrieve the result of a Troubleshooter instance, which includes the status and result of each step in the Troubleshooter workflow. This API requires the Troubleshooter resource name that was created using the Create API.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/troubleshooters/{troubleshooterName}</description></item><item><term>Operation Id</term><description>Troubleshooters_Get</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetTroubleshooterResource(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="troubleshooterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="troubleshooterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTroubleshooterResourceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.TroubleshooterResource&gt;&gt; GetTroubleshooterResourceAsync (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope, string troubleshooterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SelfHelp.TroubleshooterResource&gt;&gt; GetTroubleshooterResourceAsync(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope, string troubleshooterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetTroubleshooterResourceAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTroubleshooterResourceAsync (client As ArmClient, scope As ResourceIdentifier, troubleshooterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TroubleshooterResource))" />
      <MemberSignature Language="F#" Value="static member GetTroubleshooterResourceAsync : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.TroubleshooterResource&gt;&gt;" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetTroubleshooterResourceAsync (client, scope, troubleshooterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SelfHelp.TroubleshooterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet-preview" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="troubleshooterName" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="troubleshooterName"> Troubleshooter resource Name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets troubleshooter instance result which includes the step status/result of the troubleshooter resource name that is being executed.&lt;br/&gt; Get API is used to retrieve the result of a Troubleshooter instance, which includes the status and result of each step in the Troubleshooter workflow. This API requires the Troubleshooter resource name that was created using the Create API.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Help/troubleshooters/{troubleshooterName}</description></item><item><term>Operation Id</term><description>Troubleshooters_Get</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetTroubleshooterResourceAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="troubleshooterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="troubleshooterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTroubleshooterResources">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.SelfHelp.TroubleshooterResourceCollection GetTroubleshooterResources (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.SelfHelp.TroubleshooterResourceCollection GetTroubleshooterResources(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetTroubleshooterResources(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTroubleshooterResources (client As ArmClient, scope As ResourceIdentifier) As TroubleshooterResourceCollection" />
      <MemberSignature Language="F#" Value="static member GetTroubleshooterResources : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SelfHelp.TroubleshooterResourceCollection" Usage="Azure.ResourceManager.SelfHelp.SelfHelpExtensions.GetTroubleshooterResources (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SelfHelp</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SelfHelp.TroubleshooterResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet-preview" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary>
            Gets a collection of TroubleshooterResources in the ArmClient.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.SelfHelp.Mocking.MockableSelfHelpArmClient.GetTroubleshooterResources(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> An object representing collection of TroubleshooterResources and their operations over a TroubleshooterResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
