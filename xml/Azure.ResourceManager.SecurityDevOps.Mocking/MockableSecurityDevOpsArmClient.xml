<Type Name="MockableSecurityDevOpsArmClient" FullName="Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsArmClient">
  <TypeSignature Language="C#" Value="public class MockableSecurityDevOpsArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableSecurityDevOpsArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableSecurityDevOpsArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableSecurityDevOpsArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableSecurityDevOpsArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzureDevOpsConnectorResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource GetAzureDevOpsConnectorResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource GetAzureDevOpsConnectorResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsArmClient.GetAzureDevOpsConnectorResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureDevOpsConnectorResource (id As ResourceIdentifier) As AzureDevOpsConnectorResource" />
      <MemberSignature Language="F#" Value="abstract member GetAzureDevOpsConnectorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource&#xA;override this.GetAzureDevOpsConnectorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource" Usage="mockableSecurityDevOpsArmClient.GetAzureDevOpsConnectorResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsConnectorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzureDevOpsOrgResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityDevOps.AzureDevOpsOrgResource GetAzureDevOpsOrgResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityDevOps.AzureDevOpsOrgResource GetAzureDevOpsOrgResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsArmClient.GetAzureDevOpsOrgResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureDevOpsOrgResource (id As ResourceIdentifier) As AzureDevOpsOrgResource" />
      <MemberSignature Language="F#" Value="abstract member GetAzureDevOpsOrgResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityDevOps.AzureDevOpsOrgResource&#xA;override this.GetAzureDevOpsOrgResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityDevOps.AzureDevOpsOrgResource" Usage="mockableSecurityDevOpsArmClient.GetAzureDevOpsOrgResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityDevOps.AzureDevOpsOrgResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsOrgResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityDevOps.AzureDevOpsOrgResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsOrgResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsOrgResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzureDevOpsProjectResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityDevOps.AzureDevOpsProjectResource GetAzureDevOpsProjectResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityDevOps.AzureDevOpsProjectResource GetAzureDevOpsProjectResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsArmClient.GetAzureDevOpsProjectResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureDevOpsProjectResource (id As ResourceIdentifier) As AzureDevOpsProjectResource" />
      <MemberSignature Language="F#" Value="abstract member GetAzureDevOpsProjectResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityDevOps.AzureDevOpsProjectResource&#xA;override this.GetAzureDevOpsProjectResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityDevOps.AzureDevOpsProjectResource" Usage="mockableSecurityDevOpsArmClient.GetAzureDevOpsProjectResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityDevOps.AzureDevOpsProjectResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsProjectResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityDevOps.AzureDevOpsProjectResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsProjectResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsProjectResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzureDevOpsRepoResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityDevOps.AzureDevOpsRepoResource GetAzureDevOpsRepoResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityDevOps.AzureDevOpsRepoResource GetAzureDevOpsRepoResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsArmClient.GetAzureDevOpsRepoResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureDevOpsRepoResource (id As ResourceIdentifier) As AzureDevOpsRepoResource" />
      <MemberSignature Language="F#" Value="abstract member GetAzureDevOpsRepoResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityDevOps.AzureDevOpsRepoResource&#xA;override this.GetAzureDevOpsRepoResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityDevOps.AzureDevOpsRepoResource" Usage="mockableSecurityDevOpsArmClient.GetAzureDevOpsRepoResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityDevOps.AzureDevOpsRepoResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsRepoResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityDevOps.AzureDevOpsRepoResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsRepoResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityDevOps.AzureDevOpsRepoResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGitHubConnectorResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource GetGitHubConnectorResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource GetGitHubConnectorResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsArmClient.GetGitHubConnectorResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGitHubConnectorResource (id As ResourceIdentifier) As GitHubConnectorResource" />
      <MemberSignature Language="F#" Value="abstract member GetGitHubConnectorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource&#xA;override this.GetGitHubConnectorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource" Usage="mockableSecurityDevOpsArmClient.GetGitHubConnectorResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubConnectorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGitHubOwnerResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityDevOps.GitHubOwnerResource GetGitHubOwnerResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityDevOps.GitHubOwnerResource GetGitHubOwnerResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsArmClient.GetGitHubOwnerResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGitHubOwnerResource (id As ResourceIdentifier) As GitHubOwnerResource" />
      <MemberSignature Language="F#" Value="abstract member GetGitHubOwnerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityDevOps.GitHubOwnerResource&#xA;override this.GetGitHubOwnerResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityDevOps.GitHubOwnerResource" Usage="mockableSecurityDevOpsArmClient.GetGitHubOwnerResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityDevOps.GitHubOwnerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubOwnerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityDevOps.GitHubOwnerResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubOwnerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubOwnerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGitHubRepoResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityDevOps.GitHubRepoResource GetGitHubRepoResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityDevOps.GitHubRepoResource GetGitHubRepoResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityDevOps.Mocking.MockableSecurityDevOpsArmClient.GetGitHubRepoResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGitHubRepoResource (id As ResourceIdentifier) As GitHubRepoResource" />
      <MemberSignature Language="F#" Value="abstract member GetGitHubRepoResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityDevOps.GitHubRepoResource&#xA;override this.GetGitHubRepoResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityDevOps.GitHubRepoResource" Usage="mockableSecurityDevOpsArmClient.GetGitHubRepoResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityDevOps</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityDevOps.GitHubRepoResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubRepoResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityDevOps.GitHubRepoResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubRepoResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityDevOps.GitHubRepoResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
