<Type Name="VectorQuery" FullName="Azure.Search.Documents.Models.VectorQuery">
  <TypeSignature Language="C#" Value="public abstract class VectorQuery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VectorQuery extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Search.Documents.Models.VectorQuery" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VectorQuery" />
  <TypeSignature Language="F#" Value="type VectorQuery = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Search.Documents</AssemblyName>
    <AssemblyVersion>11.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The query parameters for vector and hybrid search queries.
            Please note <see cref="T:Azure.Search.Documents.Models.VectorQuery" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.Search.Documents.Models.VectorizedQuery" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VectorQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Models.VectorQuery.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of VectorQuery. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exhaustive">
      <MemberSignature Language="C#" Value="public bool? Exhaustive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Exhaustive" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Models.VectorQuery.Exhaustive" />
      <MemberSignature Language="VB.NET" Value="Public Property Exhaustive As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.Exhaustive : Nullable&lt;bool&gt; with get, set" Usage="Azure.Search.Documents.Models.VectorQuery.Exhaustive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> When true, triggers an exhaustive k-nearest neighbor search across all vectors within the vector index. Useful for scenarios where exact matches are critical, such as determining ground truth values. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fields">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; Fields { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; Fields" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Models.VectorQuery.Fields" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Fields As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.Fields : System.Collections.Generic.IList&lt;string&gt;" Usage="Azure.Search.Documents.Models.VectorQuery.Fields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Vector Fields of type Collection(Edm.Single) to be included in the vector searched. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KNearestNeighborsCount">
      <MemberSignature Language="C#" Value="public int? KNearestNeighborsCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; KNearestNeighborsCount" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Models.VectorQuery.KNearestNeighborsCount" />
      <MemberSignature Language="VB.NET" Value="Public Property KNearestNeighborsCount As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.KNearestNeighborsCount : Nullable&lt;int&gt; with get, set" Usage="Azure.Search.Documents.Models.VectorQuery.KNearestNeighborsCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Number of nearest neighbors to return as top hits. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
